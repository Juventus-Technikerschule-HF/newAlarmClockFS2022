
Alarmclock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006496  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000c0  00802000  00006496  0000652a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000c92  008020c0  008020c0  000065ea  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  000065ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000664c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000840  00000000  00000000  0000668c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000bc40  00000000  00000000  00006ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004813  00000000  00000000  00012b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005cd5  00000000  00000000  0001731f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002010  00000000  00000000  0001cff4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000579a  00000000  00000000  0001f004  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000043e5  00000000  00000000  0002479e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000758  00000000  00000000  00028b83  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 20 01 	jmp	0x240	; 0x240 <__ctors_end>
       4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
       8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
       c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      10:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      14:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      18:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      1c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      20:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      24:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      28:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      2c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      30:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      34:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      38:	0c 94 ab 0b 	jmp	0x1756	; 0x1756 <__vector_14>
      3c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      40:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      44:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      48:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      4c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      50:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      54:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      58:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      5c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      60:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      64:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      68:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      6c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      70:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      74:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      78:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      7c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      80:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      84:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      88:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      8c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      90:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      94:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      98:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      9c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      a0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      a4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      a8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      ac:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      b0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      b4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      b8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      bc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      c0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      c4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      c8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      cc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      d0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      d4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      d8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      dc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      e0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      e4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      e8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      ec:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      f0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      f4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      f8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
      fc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     100:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     104:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     108:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     10c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     110:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     114:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     118:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     11c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     120:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     124:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     128:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     12c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     130:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     134:	0c 94 a8 22 	jmp	0x4550	; 0x4550 <__vector_77>
     138:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     13c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     140:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     144:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     148:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     14c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     150:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     154:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     158:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     15c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     160:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     164:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     168:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     16c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     170:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     174:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     178:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     17c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     180:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     184:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     188:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     18c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     190:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     194:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     198:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     19c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1a0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1a4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1a8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1ac:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1b0:	0c 94 0c 26 	jmp	0x4c18	; 0x4c18 <__vector_108>
     1b4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1b8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1bc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1c0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1c4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1c8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1cc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1d0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1d4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1d8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1dc:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1e0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1e4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1e8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1ec:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1f0:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1f4:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1f8:	0c 94 4a 01 	jmp	0x294	; 0x294 <__bad_interrupt>
     1fc:	5f 1d       	adc	r21, r15
     1fe:	5f 1d       	adc	r21, r15
     200:	5f 1d       	adc	r21, r15
     202:	e6 1d       	adc	r30, r6
     204:	b2 1d       	adc	r27, r2
     206:	e0 1d       	adc	r30, r0
     208:	5f 1d       	adc	r21, r15
     20a:	5f 1d       	adc	r21, r15
     20c:	e6 1d       	adc	r30, r6
     20e:	b2 1d       	adc	r27, r2

00000210 <__trampolines_start>:
     210:	0c 94 e0 1d 	jmp	0x3bc0	; 0x3bc0 <prvProcessReceivedCommands+0x1d0>
     214:	0c 94 9f 28 	jmp	0x513e	; 0x513e <vDisplayUpdateTask>
     218:	0c 94 9c 18 	jmp	0x3138	; 0x3138 <prvIdleTask>
     21c:	0c 94 51 22 	jmp	0x44a2	; 0x44a2 <vTime>
     220:	0c 94 e6 1d 	jmp	0x3bcc	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
     224:	0c 94 a9 21 	jmp	0x4352	; 0x4352 <vButtonTask>
     228:	0c 94 41 1b 	jmp	0x3682	; 0x3682 <prvTimerTask>
     22c:	0c 94 89 06 	jmp	0xd12	; 0xd12 <vEventGroupSetBitsCallback>
     230:	0c 94 e9 22 	jmp	0x45d2	; 0x45d2 <vLedBlink>
     234:	0c 94 b2 1d 	jmp	0x3b64	; 0x3b64 <prvProcessReceivedCommands+0x174>
     238:	0c 94 dd 1f 	jmp	0x3fba	; 0x3fba <vInterfaceTask>
     23c:	0c 94 5f 1d 	jmp	0x3abe	; 0x3abe <prvProcessReceivedCommands+0xce>

00000240 <__ctors_end>:
     240:	11 24       	eor	r1, r1
     242:	1f be       	out	0x3f, r1	; 63
     244:	cf ef       	ldi	r28, 0xFF	; 255
     246:	cd bf       	out	0x3d, r28	; 61
     248:	df e3       	ldi	r29, 0x3F	; 63
     24a:	de bf       	out	0x3e, r29	; 62
     24c:	00 e0       	ldi	r16, 0x00	; 0
     24e:	0c bf       	out	0x3c, r16	; 60

00000250 <init_mem>:
     250:	e2 e5       	ldi	r30, 0x52	; 82
     252:	fd e2       	ldi	r31, 0x2D	; 45
     254:	8a ea       	ldi	r24, 0xAA	; 170
     256:	90 e4       	ldi	r25, 0x40	; 64
     258:	81 93       	st	Z+, r24
     25a:	e0 30       	cpi	r30, 0x00	; 0
     25c:	f9 07       	cpc	r31, r25
     25e:	e0 f3       	brcs	.-8      	; 0x258 <init_mem+0x8>
	...

00000262 <__do_copy_data>:
     262:	10 e2       	ldi	r17, 0x20	; 32
     264:	a0 e0       	ldi	r26, 0x00	; 0
     266:	b0 e2       	ldi	r27, 0x20	; 32
     268:	e6 e9       	ldi	r30, 0x96	; 150
     26a:	f4 e6       	ldi	r31, 0x64	; 100
     26c:	00 e0       	ldi	r16, 0x00	; 0
     26e:	0b bf       	out	0x3b, r16	; 59
     270:	02 c0       	rjmp	.+4      	; 0x276 <__do_copy_data+0x14>
     272:	07 90       	elpm	r0, Z+
     274:	0d 92       	st	X+, r0
     276:	a0 3c       	cpi	r26, 0xC0	; 192
     278:	b1 07       	cpc	r27, r17
     27a:	d9 f7       	brne	.-10     	; 0x272 <__do_copy_data+0x10>

0000027c <__do_clear_bss>:
     27c:	2d e2       	ldi	r18, 0x2D	; 45
     27e:	a0 ec       	ldi	r26, 0xC0	; 192
     280:	b0 e2       	ldi	r27, 0x20	; 32
     282:	01 c0       	rjmp	.+2      	; 0x286 <.do_clear_bss_start>

00000284 <.do_clear_bss_loop>:
     284:	1d 92       	st	X+, r1

00000286 <.do_clear_bss_start>:
     286:	a2 35       	cpi	r26, 0x52	; 82
     288:	b2 07       	cpc	r27, r18
     28a:	e1 f7       	brne	.-8      	; 0x284 <.do_clear_bss_loop>
     28c:	0e 94 89 1f 	call	0x3f12	; 0x3f12 <main>
     290:	0c 94 49 32 	jmp	0x6492	; 0x6492 <_exit>

00000294 <__bad_interrupt>:
     294:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000298 <initButtons>:
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	80 ea       	ldi	r24, 0xA0	; 160
     2a2:	96 e0       	ldi	r25, 0x06	; 6
     2a4:	20 e1       	ldi	r18, 0x10	; 16
     2a6:	fc 01       	movw	r30, r24
     2a8:	22 83       	std	Z+2, r18	; 0x02
     2aa:	80 ea       	ldi	r24, 0xA0	; 160
     2ac:	96 e0       	ldi	r25, 0x06	; 6
     2ae:	20 e2       	ldi	r18, 0x20	; 32
     2b0:	fc 01       	movw	r30, r24
     2b2:	22 83       	std	Z+2, r18	; 0x02
     2b4:	80 ea       	ldi	r24, 0xA0	; 160
     2b6:	96 e0       	ldi	r25, 0x06	; 6
     2b8:	20 e4       	ldi	r18, 0x40	; 64
     2ba:	fc 01       	movw	r30, r24
     2bc:	22 83       	std	Z+2, r18	; 0x02
     2be:	80 ea       	ldi	r24, 0xA0	; 160
     2c0:	96 e0       	ldi	r25, 0x06	; 6
     2c2:	20 e8       	ldi	r18, 0x80	; 128
     2c4:	fc 01       	movw	r30, r24
     2c6:	22 83       	std	Z+2, r18	; 0x02
     2c8:	00 00       	nop
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	08 95       	ret

000002d0 <updateButtons>:
     2d0:	cf 93       	push	r28
     2d2:	df 93       	push	r29
     2d4:	cd b7       	in	r28, 0x3d	; 61
     2d6:	de b7       	in	r29, 0x3e	; 62
     2d8:	80 ea       	ldi	r24, 0xA0	; 160
     2da:	96 e0       	ldi	r25, 0x06	; 6
     2dc:	fc 01       	movw	r30, r24
     2de:	80 85       	ldd	r24, Z+8	; 0x08
     2e0:	88 2f       	mov	r24, r24
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	80 71       	andi	r24, 0x10	; 16
     2e6:	99 27       	eor	r25, r25
     2e8:	95 95       	asr	r25
     2ea:	87 95       	ror	r24
     2ec:	95 95       	asr	r25
     2ee:	87 95       	ror	r24
     2f0:	95 95       	asr	r25
     2f2:	87 95       	ror	r24
     2f4:	95 95       	asr	r25
     2f6:	87 95       	ror	r24
     2f8:	89 2b       	or	r24, r25
     2fa:	89 f4       	brne	.+34     	; 0x31e <updateButtons+0x4e>
     2fc:	80 91 c0 20 	lds	r24, 0x20C0	; 0x8020c0 <__data_end>
     300:	90 91 c1 20 	lds	r25, 0x20C1	; 0x8020c1 <__data_end+0x1>
     304:	80 36       	cpi	r24, 0x60	; 96
     306:	9a 4e       	sbci	r25, 0xEA	; 234
     308:	20 f5       	brcc	.+72     	; 0x352 <updateButtons+0x82>
     30a:	80 91 c0 20 	lds	r24, 0x20C0	; 0x8020c0 <__data_end>
     30e:	90 91 c1 20 	lds	r25, 0x20C1	; 0x8020c1 <__data_end+0x1>
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	80 93 c0 20 	sts	0x20C0, r24	; 0x8020c0 <__data_end>
     318:	90 93 c1 20 	sts	0x20C1, r25	; 0x8020c1 <__data_end+0x1>
     31c:	1a c0       	rjmp	.+52     	; 0x352 <updateButtons+0x82>
     31e:	80 91 c0 20 	lds	r24, 0x20C0	; 0x8020c0 <__data_end>
     322:	90 91 c1 20 	lds	r25, 0x20C1	; 0x8020c1 <__data_end+0x1>
     326:	0b 97       	sbiw	r24, 0x0b	; 11
     328:	68 f0       	brcs	.+26     	; 0x344 <updateButtons+0x74>
     32a:	80 91 c0 20 	lds	r24, 0x20C0	; 0x8020c0 <__data_end>
     32e:	90 91 c1 20 	lds	r25, 0x20C1	; 0x8020c1 <__data_end+0x1>
     332:	c3 97       	sbiw	r24, 0x33	; 51
     334:	18 f0       	brcs	.+6      	; 0x33c <updateButtons+0x6c>
     336:	10 92 45 2d 	sts	0x2D45, r1	; 0x802d45 <b1Status>
     33a:	07 c0       	rjmp	.+14     	; 0x34a <updateButtons+0x7a>
     33c:	81 e0       	ldi	r24, 0x01	; 1
     33e:	80 93 45 2d 	sts	0x2D45, r24	; 0x802d45 <b1Status>
     342:	03 c0       	rjmp	.+6      	; 0x34a <updateButtons+0x7a>
     344:	82 e0       	ldi	r24, 0x02	; 2
     346:	80 93 45 2d 	sts	0x2D45, r24	; 0x802d45 <b1Status>
     34a:	10 92 c0 20 	sts	0x20C0, r1	; 0x8020c0 <__data_end>
     34e:	10 92 c1 20 	sts	0x20C1, r1	; 0x8020c1 <__data_end+0x1>
     352:	80 ea       	ldi	r24, 0xA0	; 160
     354:	96 e0       	ldi	r25, 0x06	; 6
     356:	fc 01       	movw	r30, r24
     358:	80 85       	ldd	r24, Z+8	; 0x08
     35a:	88 2f       	mov	r24, r24
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	80 72       	andi	r24, 0x20	; 32
     360:	99 27       	eor	r25, r25
     362:	95 95       	asr	r25
     364:	87 95       	ror	r24
     366:	95 95       	asr	r25
     368:	87 95       	ror	r24
     36a:	95 95       	asr	r25
     36c:	87 95       	ror	r24
     36e:	95 95       	asr	r25
     370:	87 95       	ror	r24
     372:	95 95       	asr	r25
     374:	87 95       	ror	r24
     376:	89 2b       	or	r24, r25
     378:	89 f4       	brne	.+34     	; 0x39c <updateButtons+0xcc>
     37a:	80 91 c2 20 	lds	r24, 0x20C2	; 0x8020c2 <b2Count.3830>
     37e:	90 91 c3 20 	lds	r25, 0x20C3	; 0x8020c3 <b2Count.3830+0x1>
     382:	80 36       	cpi	r24, 0x60	; 96
     384:	9a 4e       	sbci	r25, 0xEA	; 234
     386:	20 f5       	brcc	.+72     	; 0x3d0 <updateButtons+0x100>
     388:	80 91 c2 20 	lds	r24, 0x20C2	; 0x8020c2 <b2Count.3830>
     38c:	90 91 c3 20 	lds	r25, 0x20C3	; 0x8020c3 <b2Count.3830+0x1>
     390:	01 96       	adiw	r24, 0x01	; 1
     392:	80 93 c2 20 	sts	0x20C2, r24	; 0x8020c2 <b2Count.3830>
     396:	90 93 c3 20 	sts	0x20C3, r25	; 0x8020c3 <b2Count.3830+0x1>
     39a:	1a c0       	rjmp	.+52     	; 0x3d0 <updateButtons+0x100>
     39c:	80 91 c2 20 	lds	r24, 0x20C2	; 0x8020c2 <b2Count.3830>
     3a0:	90 91 c3 20 	lds	r25, 0x20C3	; 0x8020c3 <b2Count.3830+0x1>
     3a4:	0b 97       	sbiw	r24, 0x0b	; 11
     3a6:	68 f0       	brcs	.+26     	; 0x3c2 <updateButtons+0xf2>
     3a8:	80 91 c2 20 	lds	r24, 0x20C2	; 0x8020c2 <b2Count.3830>
     3ac:	90 91 c3 20 	lds	r25, 0x20C3	; 0x8020c3 <b2Count.3830+0x1>
     3b0:	c3 97       	sbiw	r24, 0x33	; 51
     3b2:	18 f0       	brcs	.+6      	; 0x3ba <updateButtons+0xea>
     3b4:	10 92 46 2d 	sts	0x2D46, r1	; 0x802d46 <b2Status>
     3b8:	07 c0       	rjmp	.+14     	; 0x3c8 <updateButtons+0xf8>
     3ba:	81 e0       	ldi	r24, 0x01	; 1
     3bc:	80 93 46 2d 	sts	0x2D46, r24	; 0x802d46 <b2Status>
     3c0:	03 c0       	rjmp	.+6      	; 0x3c8 <updateButtons+0xf8>
     3c2:	82 e0       	ldi	r24, 0x02	; 2
     3c4:	80 93 46 2d 	sts	0x2D46, r24	; 0x802d46 <b2Status>
     3c8:	10 92 c2 20 	sts	0x20C2, r1	; 0x8020c2 <b2Count.3830>
     3cc:	10 92 c3 20 	sts	0x20C3, r1	; 0x8020c3 <b2Count.3830+0x1>
     3d0:	80 ea       	ldi	r24, 0xA0	; 160
     3d2:	96 e0       	ldi	r25, 0x06	; 6
     3d4:	fc 01       	movw	r30, r24
     3d6:	80 85       	ldd	r24, Z+8	; 0x08
     3d8:	88 2f       	mov	r24, r24
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	80 74       	andi	r24, 0x40	; 64
     3de:	99 27       	eor	r25, r25
     3e0:	08 2e       	mov	r0, r24
     3e2:	89 2f       	mov	r24, r25
     3e4:	00 0c       	add	r0, r0
     3e6:	88 1f       	adc	r24, r24
     3e8:	99 0b       	sbc	r25, r25
     3ea:	00 0c       	add	r0, r0
     3ec:	88 1f       	adc	r24, r24
     3ee:	99 1f       	adc	r25, r25
     3f0:	89 2b       	or	r24, r25
     3f2:	89 f4       	brne	.+34     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     3f4:	80 91 c4 20 	lds	r24, 0x20C4	; 0x8020c4 <b3Count.3831>
     3f8:	90 91 c5 20 	lds	r25, 0x20C5	; 0x8020c5 <b3Count.3831+0x1>
     3fc:	80 36       	cpi	r24, 0x60	; 96
     3fe:	9a 4e       	sbci	r25, 0xEA	; 234
     400:	20 f5       	brcc	.+72     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     402:	80 91 c4 20 	lds	r24, 0x20C4	; 0x8020c4 <b3Count.3831>
     406:	90 91 c5 20 	lds	r25, 0x20C5	; 0x8020c5 <b3Count.3831+0x1>
     40a:	01 96       	adiw	r24, 0x01	; 1
     40c:	80 93 c4 20 	sts	0x20C4, r24	; 0x8020c4 <b3Count.3831>
     410:	90 93 c5 20 	sts	0x20C5, r25	; 0x8020c5 <b3Count.3831+0x1>
     414:	1a c0       	rjmp	.+52     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
     416:	80 91 c4 20 	lds	r24, 0x20C4	; 0x8020c4 <b3Count.3831>
     41a:	90 91 c5 20 	lds	r25, 0x20C5	; 0x8020c5 <b3Count.3831+0x1>
     41e:	0b 97       	sbiw	r24, 0x0b	; 11
     420:	68 f0       	brcs	.+26     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     422:	80 91 c4 20 	lds	r24, 0x20C4	; 0x8020c4 <b3Count.3831>
     426:	90 91 c5 20 	lds	r25, 0x20C5	; 0x8020c5 <b3Count.3831+0x1>
     42a:	c3 97       	sbiw	r24, 0x33	; 51
     42c:	18 f0       	brcs	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     42e:	10 92 47 2d 	sts	0x2D47, r1	; 0x802d47 <b3Status>
     432:	07 c0       	rjmp	.+14     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	80 93 47 2d 	sts	0x2D47, r24	; 0x802d47 <b3Status>
     43a:	03 c0       	rjmp	.+6      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     43c:	82 e0       	ldi	r24, 0x02	; 2
     43e:	80 93 47 2d 	sts	0x2D47, r24	; 0x802d47 <b3Status>
     442:	10 92 c4 20 	sts	0x20C4, r1	; 0x8020c4 <b3Count.3831>
     446:	10 92 c5 20 	sts	0x20C5, r1	; 0x8020c5 <b3Count.3831+0x1>
     44a:	80 ea       	ldi	r24, 0xA0	; 160
     44c:	96 e0       	ldi	r25, 0x06	; 6
     44e:	fc 01       	movw	r30, r24
     450:	80 85       	ldd	r24, Z+8	; 0x08
     452:	88 23       	and	r24, r24
     454:	8c f0       	brlt	.+34     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     456:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <b4Count.3832>
     45a:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <b4Count.3832+0x1>
     45e:	80 36       	cpi	r24, 0x60	; 96
     460:	9a 4e       	sbci	r25, 0xEA	; 234
     462:	20 f5       	brcc	.+72     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     464:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <b4Count.3832>
     468:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <b4Count.3832+0x1>
     46c:	01 96       	adiw	r24, 0x01	; 1
     46e:	80 93 c6 20 	sts	0x20C6, r24	; 0x8020c6 <b4Count.3832>
     472:	90 93 c7 20 	sts	0x20C7, r25	; 0x8020c7 <b4Count.3832+0x1>
     476:	1a c0       	rjmp	.+52     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     478:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <b4Count.3832>
     47c:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <b4Count.3832+0x1>
     480:	0b 97       	sbiw	r24, 0x0b	; 11
     482:	68 f0       	brcs	.+26     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     484:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <b4Count.3832>
     488:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <b4Count.3832+0x1>
     48c:	c3 97       	sbiw	r24, 0x33	; 51
     48e:	18 f0       	brcs	.+6      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     490:	10 92 48 2d 	sts	0x2D48, r1	; 0x802d48 <b4Status>
     494:	07 c0       	rjmp	.+14     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	80 93 48 2d 	sts	0x2D48, r24	; 0x802d48 <b4Status>
     49c:	03 c0       	rjmp	.+6      	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     49e:	82 e0       	ldi	r24, 0x02	; 2
     4a0:	80 93 48 2d 	sts	0x2D48, r24	; 0x802d48 <b4Status>
     4a4:	10 92 c6 20 	sts	0x20C6, r1	; 0x8020c6 <b4Count.3832>
     4a8:	10 92 c7 20 	sts	0x20C7, r1	; 0x8020c7 <b4Count.3832+0x1>
     4ac:	00 00       	nop
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	08 95       	ret

000004b4 <getButtonPress>:
     4b4:	cf 93       	push	r28
     4b6:	df 93       	push	r29
     4b8:	1f 92       	push	r1
     4ba:	cd b7       	in	r28, 0x3d	; 61
     4bc:	de b7       	in	r29, 0x3e	; 62
     4be:	89 83       	std	Y+1, r24	; 0x01
     4c0:	89 81       	ldd	r24, Y+1	; 0x01
     4c2:	88 2f       	mov	r24, r24
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	81 30       	cpi	r24, 0x01	; 1
     4c8:	91 05       	cpc	r25, r1
     4ca:	79 f0       	breq	.+30     	; 0x4ea <getButtonPress+0x36>
     4cc:	82 30       	cpi	r24, 0x02	; 2
     4ce:	91 05       	cpc	r25, r1
     4d0:	1c f4       	brge	.+6      	; 0x4d8 <getButtonPress+0x24>
     4d2:	89 2b       	or	r24, r25
     4d4:	39 f0       	breq	.+14     	; 0x4e4 <getButtonPress+0x30>
     4d6:	12 c0       	rjmp	.+36     	; 0x4fc <getButtonPress+0x48>
     4d8:	82 30       	cpi	r24, 0x02	; 2
     4da:	91 05       	cpc	r25, r1
     4dc:	49 f0       	breq	.+18     	; 0x4f0 <getButtonPress+0x3c>
     4de:	03 97       	sbiw	r24, 0x03	; 3
     4e0:	51 f0       	breq	.+20     	; 0x4f6 <getButtonPress+0x42>
     4e2:	0c c0       	rjmp	.+24     	; 0x4fc <getButtonPress+0x48>
     4e4:	80 91 45 2d 	lds	r24, 0x2D45	; 0x802d45 <b1Status>
     4e8:	0a c0       	rjmp	.+20     	; 0x4fe <getButtonPress+0x4a>
     4ea:	80 91 46 2d 	lds	r24, 0x2D46	; 0x802d46 <b2Status>
     4ee:	07 c0       	rjmp	.+14     	; 0x4fe <getButtonPress+0x4a>
     4f0:	80 91 47 2d 	lds	r24, 0x2D47	; 0x802d47 <b3Status>
     4f4:	04 c0       	rjmp	.+8      	; 0x4fe <getButtonPress+0x4a>
     4f6:	80 91 48 2d 	lds	r24, 0x2D48	; 0x802d48 <b4Status>
     4fa:	01 c0       	rjmp	.+2      	; 0x4fe <getButtonPress+0x4a>
     4fc:	82 e0       	ldi	r24, 0x02	; 2
     4fe:	0f 90       	pop	r0
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	08 95       	ret

00000506 <CCPWrite>:
     506:	0f 93       	push	r16
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	00 d0       	rcall	.+0      	; 0x50e <CCPWrite+0x8>
     50e:	00 d0       	rcall	.+0      	; 0x510 <CCPWrite+0xa>
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	8c 83       	std	Y+4, r24	; 0x04
     516:	9d 83       	std	Y+5, r25	; 0x05
     518:	6e 83       	std	Y+6, r22	; 0x06
     51a:	8f e3       	ldi	r24, 0x3F	; 63
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	fc 01       	movw	r30, r24
     520:	80 81       	ld	r24, Z
     522:	8b 83       	std	Y+3, r24	; 0x03
     524:	f8 94       	cli
     526:	8c 81       	ldd	r24, Y+4	; 0x04
     528:	9d 81       	ldd	r25, Y+5	; 0x05
     52a:	89 83       	std	Y+1, r24	; 0x01
     52c:	9a 83       	std	Y+2, r25	; 0x02
     52e:	8b e3       	ldi	r24, 0x3B	; 59
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	fc 01       	movw	r30, r24
     534:	10 82       	st	Z, r1
     536:	89 81       	ldd	r24, Y+1	; 0x01
     538:	9a 81       	ldd	r25, Y+2	; 0x02
     53a:	2e 81       	ldd	r18, Y+6	; 0x06
     53c:	fc 01       	movw	r30, r24
     53e:	08 ed       	ldi	r16, 0xD8	; 216
     540:	04 bf       	out	0x34, r16	; 52
     542:	20 83       	st	Z, r18
     544:	8f e3       	ldi	r24, 0x3F	; 63
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	2b 81       	ldd	r18, Y+3	; 0x03
     54a:	fc 01       	movw	r30, r24
     54c:	20 83       	st	Z, r18
     54e:	00 00       	nop
     550:	26 96       	adiw	r28, 0x06	; 6
     552:	cd bf       	out	0x3d, r28	; 61
     554:	de bf       	out	0x3e, r29	; 62
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	0f 91       	pop	r16
     55c:	08 95       	ret

0000055e <CLKSYS_XOSC_Config>:
     55e:	cf 93       	push	r28
     560:	df 93       	push	r29
     562:	00 d0       	rcall	.+0      	; 0x564 <CLKSYS_XOSC_Config+0x6>
     564:	cd b7       	in	r28, 0x3d	; 61
     566:	de b7       	in	r29, 0x3e	; 62
     568:	89 83       	std	Y+1, r24	; 0x01
     56a:	6a 83       	std	Y+2, r22	; 0x02
     56c:	4b 83       	std	Y+3, r20	; 0x03
     56e:	80 e5       	ldi	r24, 0x50	; 80
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	2a 81       	ldd	r18, Y+2	; 0x02
     574:	22 23       	and	r18, r18
     576:	11 f0       	breq	.+4      	; 0x57c <CLKSYS_XOSC_Config+0x1e>
     578:	20 e2       	ldi	r18, 0x20	; 32
     57a:	01 c0       	rjmp	.+2      	; 0x57e <CLKSYS_XOSC_Config+0x20>
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	39 81       	ldd	r19, Y+1	; 0x01
     580:	32 2b       	or	r19, r18
     582:	2b 81       	ldd	r18, Y+3	; 0x03
     584:	23 2b       	or	r18, r19
     586:	fc 01       	movw	r30, r24
     588:	22 83       	std	Z+2, r18	; 0x02
     58a:	00 00       	nop
     58c:	23 96       	adiw	r28, 0x03	; 3
     58e:	cd bf       	out	0x3d, r28	; 61
     590:	de bf       	out	0x3e, r29	; 62
     592:	df 91       	pop	r29
     594:	cf 91       	pop	r28
     596:	08 95       	ret

00000598 <CLKSYS_PLL_Config>:
     598:	cf 93       	push	r28
     59a:	df 93       	push	r29
     59c:	1f 92       	push	r1
     59e:	1f 92       	push	r1
     5a0:	cd b7       	in	r28, 0x3d	; 61
     5a2:	de b7       	in	r29, 0x3e	; 62
     5a4:	89 83       	std	Y+1, r24	; 0x01
     5a6:	6a 83       	std	Y+2, r22	; 0x02
     5a8:	8a 81       	ldd	r24, Y+2	; 0x02
     5aa:	8f 71       	andi	r24, 0x1F	; 31
     5ac:	8a 83       	std	Y+2, r24	; 0x02
     5ae:	80 e5       	ldi	r24, 0x50	; 80
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	39 81       	ldd	r19, Y+1	; 0x01
     5b4:	2a 81       	ldd	r18, Y+2	; 0x02
     5b6:	23 2b       	or	r18, r19
     5b8:	fc 01       	movw	r30, r24
     5ba:	25 83       	std	Z+5, r18	; 0x05
     5bc:	00 00       	nop
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	df 91       	pop	r29
     5c4:	cf 91       	pop	r28
     5c6:	08 95       	ret

000005c8 <CLKSYS_Disable>:
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	1f 92       	push	r1
     5ce:	1f 92       	push	r1
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
     5d4:	8a 83       	std	Y+2, r24	; 0x02
     5d6:	80 e5       	ldi	r24, 0x50	; 80
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	20 e5       	ldi	r18, 0x50	; 80
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	f9 01       	movw	r30, r18
     5e0:	20 81       	ld	r18, Z
     5e2:	32 2f       	mov	r19, r18
     5e4:	2a 81       	ldd	r18, Y+2	; 0x02
     5e6:	20 95       	com	r18
     5e8:	23 23       	and	r18, r19
     5ea:	fc 01       	movw	r30, r24
     5ec:	20 83       	st	Z, r18
     5ee:	80 e5       	ldi	r24, 0x50	; 80
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	fc 01       	movw	r30, r24
     5f4:	90 81       	ld	r25, Z
     5f6:	8a 81       	ldd	r24, Y+2	; 0x02
     5f8:	89 23       	and	r24, r25
     5fa:	89 83       	std	Y+1, r24	; 0x01
     5fc:	89 81       	ldd	r24, Y+1	; 0x01
     5fe:	0f 90       	pop	r0
     600:	0f 90       	pop	r0
     602:	df 91       	pop	r29
     604:	cf 91       	pop	r28
     606:	08 95       	ret

00000608 <CLKSYS_Prescalers_Config>:
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	00 d0       	rcall	.+0      	; 0x60e <CLKSYS_Prescalers_Config+0x6>
     60e:	cd b7       	in	r28, 0x3d	; 61
     610:	de b7       	in	r29, 0x3e	; 62
     612:	8a 83       	std	Y+2, r24	; 0x02
     614:	6b 83       	std	Y+3, r22	; 0x03
     616:	9a 81       	ldd	r25, Y+2	; 0x02
     618:	8b 81       	ldd	r24, Y+3	; 0x03
     61a:	89 2b       	or	r24, r25
     61c:	89 83       	std	Y+1, r24	; 0x01
     61e:	69 81       	ldd	r22, Y+1	; 0x01
     620:	81 e4       	ldi	r24, 0x41	; 65
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	0e 94 83 02 	call	0x506	; 0x506 <CCPWrite>
     628:	00 00       	nop
     62a:	23 96       	adiw	r28, 0x03	; 3
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	de bf       	out	0x3e, r29	; 62
     630:	df 91       	pop	r29
     632:	cf 91       	pop	r28
     634:	08 95       	ret

00000636 <CLKSYS_Main_ClockSource_Select>:
     636:	cf 93       	push	r28
     638:	df 93       	push	r29
     63a:	1f 92       	push	r1
     63c:	1f 92       	push	r1
     63e:	cd b7       	in	r28, 0x3d	; 61
     640:	de b7       	in	r29, 0x3e	; 62
     642:	8a 83       	std	Y+2, r24	; 0x02
     644:	80 e4       	ldi	r24, 0x40	; 64
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	fc 01       	movw	r30, r24
     64a:	80 81       	ld	r24, Z
     64c:	98 2f       	mov	r25, r24
     64e:	98 7f       	andi	r25, 0xF8	; 248
     650:	8a 81       	ldd	r24, Y+2	; 0x02
     652:	89 2b       	or	r24, r25
     654:	89 83       	std	Y+1, r24	; 0x01
     656:	69 81       	ldd	r22, Y+1	; 0x01
     658:	80 e4       	ldi	r24, 0x40	; 64
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	0e 94 83 02 	call	0x506	; 0x506 <CCPWrite>
     660:	80 e4       	ldi	r24, 0x40	; 64
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	fc 01       	movw	r30, r24
     666:	90 81       	ld	r25, Z
     668:	8a 81       	ldd	r24, Y+2	; 0x02
     66a:	89 23       	and	r24, r25
     66c:	89 83       	std	Y+1, r24	; 0x01
     66e:	89 81       	ldd	r24, Y+1	; 0x01
     670:	0f 90       	pop	r0
     672:	0f 90       	pop	r0
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	08 95       	ret

0000067a <TC0_ConfigClockSource>:
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	00 d0       	rcall	.+0      	; 0x680 <TC0_ConfigClockSource+0x6>
     680:	cd b7       	in	r28, 0x3d	; 61
     682:	de b7       	in	r29, 0x3e	; 62
     684:	89 83       	std	Y+1, r24	; 0x01
     686:	9a 83       	std	Y+2, r25	; 0x02
     688:	6b 83       	std	Y+3, r22	; 0x03
     68a:	89 81       	ldd	r24, Y+1	; 0x01
     68c:	9a 81       	ldd	r25, Y+2	; 0x02
     68e:	fc 01       	movw	r30, r24
     690:	80 81       	ld	r24, Z
     692:	98 2f       	mov	r25, r24
     694:	90 7f       	andi	r25, 0xF0	; 240
     696:	8b 81       	ldd	r24, Y+3	; 0x03
     698:	89 2b       	or	r24, r25
     69a:	28 2f       	mov	r18, r24
     69c:	89 81       	ldd	r24, Y+1	; 0x01
     69e:	9a 81       	ldd	r25, Y+2	; 0x02
     6a0:	fc 01       	movw	r30, r24
     6a2:	20 83       	st	Z, r18
     6a4:	00 00       	nop
     6a6:	23 96       	adiw	r28, 0x03	; 3
     6a8:	cd bf       	out	0x3d, r28	; 61
     6aa:	de bf       	out	0x3e, r29	; 62
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <TC0_ConfigWGM>:
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	00 d0       	rcall	.+0      	; 0x6b8 <TC0_ConfigWGM+0x6>
     6b8:	cd b7       	in	r28, 0x3d	; 61
     6ba:	de b7       	in	r29, 0x3e	; 62
     6bc:	89 83       	std	Y+1, r24	; 0x01
     6be:	9a 83       	std	Y+2, r25	; 0x02
     6c0:	6b 83       	std	Y+3, r22	; 0x03
     6c2:	89 81       	ldd	r24, Y+1	; 0x01
     6c4:	9a 81       	ldd	r25, Y+2	; 0x02
     6c6:	fc 01       	movw	r30, r24
     6c8:	81 81       	ldd	r24, Z+1	; 0x01
     6ca:	98 2f       	mov	r25, r24
     6cc:	98 7f       	andi	r25, 0xF8	; 248
     6ce:	8b 81       	ldd	r24, Y+3	; 0x03
     6d0:	89 2b       	or	r24, r25
     6d2:	28 2f       	mov	r18, r24
     6d4:	89 81       	ldd	r24, Y+1	; 0x01
     6d6:	9a 81       	ldd	r25, Y+2	; 0x02
     6d8:	fc 01       	movw	r30, r24
     6da:	21 83       	std	Z+1, r18	; 0x01
     6dc:	00 00       	nop
     6de:	23 96       	adiw	r28, 0x03	; 3
     6e0:	cd bf       	out	0x3d, r28	; 61
     6e2:	de bf       	out	0x3e, r29	; 62
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	08 95       	ret

000006ea <TC0_SetOverflowIntLevel>:
     6ea:	cf 93       	push	r28
     6ec:	df 93       	push	r29
     6ee:	00 d0       	rcall	.+0      	; 0x6f0 <TC0_SetOverflowIntLevel+0x6>
     6f0:	cd b7       	in	r28, 0x3d	; 61
     6f2:	de b7       	in	r29, 0x3e	; 62
     6f4:	89 83       	std	Y+1, r24	; 0x01
     6f6:	9a 83       	std	Y+2, r25	; 0x02
     6f8:	6b 83       	std	Y+3, r22	; 0x03
     6fa:	89 81       	ldd	r24, Y+1	; 0x01
     6fc:	9a 81       	ldd	r25, Y+2	; 0x02
     6fe:	fc 01       	movw	r30, r24
     700:	86 81       	ldd	r24, Z+6	; 0x06
     702:	98 2f       	mov	r25, r24
     704:	9c 7f       	andi	r25, 0xFC	; 252
     706:	8b 81       	ldd	r24, Y+3	; 0x03
     708:	89 2b       	or	r24, r25
     70a:	28 2f       	mov	r18, r24
     70c:	89 81       	ldd	r24, Y+1	; 0x01
     70e:	9a 81       	ldd	r25, Y+2	; 0x02
     710:	fc 01       	movw	r30, r24
     712:	26 83       	std	Z+6, r18	; 0x06
     714:	00 00       	nop
     716:	23 96       	adiw	r28, 0x03	; 3
     718:	cd bf       	out	0x3d, r28	; 61
     71a:	de bf       	out	0x3e, r29	; 62
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	08 95       	ret

00000722 <vApplicationStackOverflowHook>:
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	00 d0       	rcall	.+0      	; 0x728 <vApplicationStackOverflowHook+0x6>
     728:	1f 92       	push	r1
     72a:	cd b7       	in	r28, 0x3d	; 61
     72c:	de b7       	in	r29, 0x3e	; 62
     72e:	89 83       	std	Y+1, r24	; 0x01
     730:	9a 83       	std	Y+2, r25	; 0x02
     732:	6b 83       	std	Y+3, r22	; 0x03
     734:	7c 83       	std	Y+4, r23	; 0x04
     736:	8b e2       	ldi	r24, 0x2B	; 43
     738:	0e 94 a5 03 	call	0x74a	; 0x74a <error>
     73c:	00 00       	nop
     73e:	24 96       	adiw	r28, 0x04	; 4
     740:	cd bf       	out	0x3d, r28	; 61
     742:	de bf       	out	0x3e, r29	; 62
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <error>:
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	1f 92       	push	r1
     750:	1f 92       	push	r1
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	8a 83       	std	Y+2, r24	; 0x02
     758:	8a 81       	ldd	r24, Y+2	; 0x02
     75a:	8b 32       	cpi	r24, 0x2B	; 43
     75c:	19 f4       	brne	.+6      	; 0x764 <error+0x1a>
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	89 83       	std	Y+1, r24	; 0x01
     762:	0e c0       	rjmp	.+28     	; 0x780 <error+0x36>
     764:	8a 81       	ldd	r24, Y+2	; 0x02
     766:	8c 32       	cpi	r24, 0x2C	; 44
     768:	19 f4       	brne	.+6      	; 0x770 <error+0x26>
     76a:	82 e0       	ldi	r24, 0x02	; 2
     76c:	89 83       	std	Y+1, r24	; 0x01
     76e:	08 c0       	rjmp	.+16     	; 0x780 <error+0x36>
     770:	8a 81       	ldd	r24, Y+2	; 0x02
     772:	8f 32       	cpi	r24, 0x2F	; 47
     774:	19 f4       	brne	.+6      	; 0x77c <error+0x32>
     776:	83 e0       	ldi	r24, 0x03	; 3
     778:	89 83       	std	Y+1, r24	; 0x01
     77a:	02 c0       	rjmp	.+4      	; 0x780 <error+0x36>
     77c:	84 e0       	ldi	r24, 0x04	; 4
     77e:	89 83       	std	Y+1, r24	; 0x01
     780:	0e 94 c8 03 	call	0x790	; 0x790 <software_reset>
     784:	00 00       	nop
     786:	0f 90       	pop	r0
     788:	0f 90       	pop	r0
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <software_reset>:
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	cd b7       	in	r28, 0x3d	; 61
     796:	de b7       	in	r29, 0x3e	; 62
     798:	00 00       	nop
     79a:	84 e3       	ldi	r24, 0x34	; 52
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	28 ed       	ldi	r18, 0xD8	; 216
     7a0:	fc 01       	movw	r30, r24
     7a2:	20 83       	st	Z, r18
     7a4:	88 e7       	ldi	r24, 0x78	; 120
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	21 e0       	ldi	r18, 0x01	; 1
     7aa:	fc 01       	movw	r30, r24
     7ac:	21 83       	std	Z+1, r18	; 0x01
     7ae:	00 00       	nop
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	08 95       	ret

000007b6 <xEventGroupCreate>:
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	1f 92       	push	r1
     7bc:	1f 92       	push	r1
     7be:	cd b7       	in	r28, 0x3d	; 61
     7c0:	de b7       	in	r29, 0x3e	; 62
     7c2:	80 e1       	ldi	r24, 0x10	; 16
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	0e 94 18 07 	call	0xe30	; 0xe30 <pvPortMalloc>
     7ca:	89 83       	std	Y+1, r24	; 0x01
     7cc:	9a 83       	std	Y+2, r25	; 0x02
     7ce:	89 81       	ldd	r24, Y+1	; 0x01
     7d0:	9a 81       	ldd	r25, Y+2	; 0x02
     7d2:	89 2b       	or	r24, r25
     7d4:	61 f0       	breq	.+24     	; 0x7ee <xEventGroupCreate+0x38>
     7d6:	89 81       	ldd	r24, Y+1	; 0x01
     7d8:	9a 81       	ldd	r25, Y+2	; 0x02
     7da:	fc 01       	movw	r30, r24
     7dc:	10 82       	st	Z, r1
     7de:	11 82       	std	Z+1, r1	; 0x01
     7e0:	12 82       	std	Z+2, r1	; 0x02
     7e2:	13 82       	std	Z+3, r1	; 0x03
     7e4:	89 81       	ldd	r24, Y+1	; 0x01
     7e6:	9a 81       	ldd	r25, Y+2	; 0x02
     7e8:	04 96       	adiw	r24, 0x04	; 4
     7ea:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
     7ee:	89 81       	ldd	r24, Y+1	; 0x01
     7f0:	9a 81       	ldd	r25, Y+2	; 0x02
     7f2:	0f 90       	pop	r0
     7f4:	0f 90       	pop	r0
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	08 95       	ret

000007fc <xEventGroupWaitBits>:
     7fc:	cf 92       	push	r12
     7fe:	df 92       	push	r13
     800:	ef 92       	push	r14
     802:	ff 92       	push	r15
     804:	0f 93       	push	r16
     806:	1f 93       	push	r17
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	cd b7       	in	r28, 0x3d	; 61
     80e:	de b7       	in	r29, 0x3e	; 62
     810:	6d 97       	sbiw	r28, 0x1d	; 29
     812:	cd bf       	out	0x3d, r28	; 61
     814:	de bf       	out	0x3e, r29	; 62
     816:	8a 8b       	std	Y+18, r24	; 0x12
     818:	9b 8b       	std	Y+19, r25	; 0x13
     81a:	4c 8b       	std	Y+20, r20	; 0x14
     81c:	5d 8b       	std	Y+21, r21	; 0x15
     81e:	6e 8b       	std	Y+22, r22	; 0x16
     820:	7f 8b       	std	Y+23, r23	; 0x17
     822:	28 8f       	std	Y+24, r18	; 0x18
     824:	09 8f       	std	Y+25, r16	; 0x19
     826:	ca 8e       	std	Y+26, r12	; 0x1a
     828:	db 8e       	std	Y+27, r13	; 0x1b
     82a:	ec 8e       	std	Y+28, r14	; 0x1c
     82c:	fd 8e       	std	Y+29, r15	; 0x1d
     82e:	8a 89       	ldd	r24, Y+18	; 0x12
     830:	9b 89       	ldd	r25, Y+19	; 0x13
     832:	89 87       	std	Y+9, r24	; 0x09
     834:	9a 87       	std	Y+10, r25	; 0x0a
     836:	1d 82       	std	Y+5, r1	; 0x05
     838:	1e 82       	std	Y+6, r1	; 0x06
     83a:	1f 82       	std	Y+7, r1	; 0x07
     83c:	18 86       	std	Y+8, r1	; 0x08
     83e:	1b 86       	std	Y+11, r1	; 0x0b
     840:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
     844:	89 85       	ldd	r24, Y+9	; 0x09
     846:	9a 85       	ldd	r25, Y+10	; 0x0a
     848:	fc 01       	movw	r30, r24
     84a:	80 81       	ld	r24, Z
     84c:	91 81       	ldd	r25, Z+1	; 0x01
     84e:	a2 81       	ldd	r26, Z+2	; 0x02
     850:	b3 81       	ldd	r27, Z+3	; 0x03
     852:	8c 87       	std	Y+12, r24	; 0x0c
     854:	9d 87       	std	Y+13, r25	; 0x0d
     856:	ae 87       	std	Y+14, r26	; 0x0e
     858:	bf 87       	std	Y+15, r27	; 0x0f
     85a:	2c 89       	ldd	r18, Y+20	; 0x14
     85c:	3d 89       	ldd	r19, Y+21	; 0x15
     85e:	4e 89       	ldd	r20, Y+22	; 0x16
     860:	5f 89       	ldd	r21, Y+23	; 0x17
     862:	8c 85       	ldd	r24, Y+12	; 0x0c
     864:	9d 85       	ldd	r25, Y+13	; 0x0d
     866:	ae 85       	ldd	r26, Y+14	; 0x0e
     868:	bf 85       	ldd	r27, Y+15	; 0x0f
     86a:	09 8d       	ldd	r16, Y+25	; 0x19
     86c:	bc 01       	movw	r22, r24
     86e:	cd 01       	movw	r24, r26
     870:	0e 94 a7 06 	call	0xd4e	; 0xd4e <prvTestWaitCondition>
     874:	88 8b       	std	Y+16, r24	; 0x10
     876:	88 89       	ldd	r24, Y+16	; 0x10
     878:	88 23       	and	r24, r24
     87a:	59 f1       	breq	.+86     	; 0x8d2 <__EEPROM_REGION_LENGTH__+0xd2>
     87c:	8c 85       	ldd	r24, Y+12	; 0x0c
     87e:	9d 85       	ldd	r25, Y+13	; 0x0d
     880:	ae 85       	ldd	r26, Y+14	; 0x0e
     882:	bf 85       	ldd	r27, Y+15	; 0x0f
     884:	89 83       	std	Y+1, r24	; 0x01
     886:	9a 83       	std	Y+2, r25	; 0x02
     888:	ab 83       	std	Y+3, r26	; 0x03
     88a:	bc 83       	std	Y+4, r27	; 0x04
     88c:	1a 8e       	std	Y+26, r1	; 0x1a
     88e:	1b 8e       	std	Y+27, r1	; 0x1b
     890:	1c 8e       	std	Y+28, r1	; 0x1c
     892:	1d 8e       	std	Y+29, r1	; 0x1d
     894:	88 8d       	ldd	r24, Y+24	; 0x18
     896:	88 23       	and	r24, r24
     898:	09 f4       	brne	.+2      	; 0x89c <__EEPROM_REGION_LENGTH__+0x9c>
     89a:	65 c0       	rjmp	.+202    	; 0x966 <__EEPROM_REGION_LENGTH__+0x166>
     89c:	89 85       	ldd	r24, Y+9	; 0x09
     89e:	9a 85       	ldd	r25, Y+10	; 0x0a
     8a0:	fc 01       	movw	r30, r24
     8a2:	20 81       	ld	r18, Z
     8a4:	31 81       	ldd	r19, Z+1	; 0x01
     8a6:	42 81       	ldd	r20, Z+2	; 0x02
     8a8:	53 81       	ldd	r21, Z+3	; 0x03
     8aa:	8c 89       	ldd	r24, Y+20	; 0x14
     8ac:	9d 89       	ldd	r25, Y+21	; 0x15
     8ae:	ae 89       	ldd	r26, Y+22	; 0x16
     8b0:	bf 89       	ldd	r27, Y+23	; 0x17
     8b2:	80 95       	com	r24
     8b4:	90 95       	com	r25
     8b6:	a0 95       	com	r26
     8b8:	b0 95       	com	r27
     8ba:	82 23       	and	r24, r18
     8bc:	93 23       	and	r25, r19
     8be:	a4 23       	and	r26, r20
     8c0:	b5 23       	and	r27, r21
     8c2:	29 85       	ldd	r18, Y+9	; 0x09
     8c4:	3a 85       	ldd	r19, Y+10	; 0x0a
     8c6:	f9 01       	movw	r30, r18
     8c8:	80 83       	st	Z, r24
     8ca:	91 83       	std	Z+1, r25	; 0x01
     8cc:	a2 83       	std	Z+2, r26	; 0x02
     8ce:	b3 83       	std	Z+3, r27	; 0x03
     8d0:	4a c0       	rjmp	.+148    	; 0x966 <__EEPROM_REGION_LENGTH__+0x166>
     8d2:	8a 8d       	ldd	r24, Y+26	; 0x1a
     8d4:	9b 8d       	ldd	r25, Y+27	; 0x1b
     8d6:	ac 8d       	ldd	r26, Y+28	; 0x1c
     8d8:	bd 8d       	ldd	r27, Y+29	; 0x1d
     8da:	89 2b       	or	r24, r25
     8dc:	8a 2b       	or	r24, r26
     8de:	8b 2b       	or	r24, r27
     8e0:	59 f4       	brne	.+22     	; 0x8f8 <__EEPROM_REGION_LENGTH__+0xf8>
     8e2:	8c 85       	ldd	r24, Y+12	; 0x0c
     8e4:	9d 85       	ldd	r25, Y+13	; 0x0d
     8e6:	ae 85       	ldd	r26, Y+14	; 0x0e
     8e8:	bf 85       	ldd	r27, Y+15	; 0x0f
     8ea:	89 83       	std	Y+1, r24	; 0x01
     8ec:	9a 83       	std	Y+2, r25	; 0x02
     8ee:	ab 83       	std	Y+3, r26	; 0x03
     8f0:	bc 83       	std	Y+4, r27	; 0x04
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	8b 87       	std	Y+11, r24	; 0x0b
     8f6:	37 c0       	rjmp	.+110    	; 0x966 <__EEPROM_REGION_LENGTH__+0x166>
     8f8:	88 8d       	ldd	r24, Y+24	; 0x18
     8fa:	88 23       	and	r24, r24
     8fc:	49 f0       	breq	.+18     	; 0x910 <__EEPROM_REGION_LENGTH__+0x110>
     8fe:	8d 81       	ldd	r24, Y+5	; 0x05
     900:	9e 81       	ldd	r25, Y+6	; 0x06
     902:	af 81       	ldd	r26, Y+7	; 0x07
     904:	b8 85       	ldd	r27, Y+8	; 0x08
     906:	b1 60       	ori	r27, 0x01	; 1
     908:	8d 83       	std	Y+5, r24	; 0x05
     90a:	9e 83       	std	Y+6, r25	; 0x06
     90c:	af 83       	std	Y+7, r26	; 0x07
     90e:	b8 87       	std	Y+8, r27	; 0x08
     910:	89 8d       	ldd	r24, Y+25	; 0x19
     912:	88 23       	and	r24, r24
     914:	49 f0       	breq	.+18     	; 0x928 <__EEPROM_REGION_LENGTH__+0x128>
     916:	8d 81       	ldd	r24, Y+5	; 0x05
     918:	9e 81       	ldd	r25, Y+6	; 0x06
     91a:	af 81       	ldd	r26, Y+7	; 0x07
     91c:	b8 85       	ldd	r27, Y+8	; 0x08
     91e:	b4 60       	ori	r27, 0x04	; 4
     920:	8d 83       	std	Y+5, r24	; 0x05
     922:	9e 83       	std	Y+6, r25	; 0x06
     924:	af 83       	std	Y+7, r26	; 0x07
     926:	b8 87       	std	Y+8, r27	; 0x08
     928:	2c 89       	ldd	r18, Y+20	; 0x14
     92a:	3d 89       	ldd	r19, Y+21	; 0x15
     92c:	4e 89       	ldd	r20, Y+22	; 0x16
     92e:	5f 89       	ldd	r21, Y+23	; 0x17
     930:	8d 81       	ldd	r24, Y+5	; 0x05
     932:	9e 81       	ldd	r25, Y+6	; 0x06
     934:	af 81       	ldd	r26, Y+7	; 0x07
     936:	b8 85       	ldd	r27, Y+8	; 0x08
     938:	82 2b       	or	r24, r18
     93a:	93 2b       	or	r25, r19
     93c:	a4 2b       	or	r26, r20
     93e:	b5 2b       	or	r27, r21
     940:	29 85       	ldd	r18, Y+9	; 0x09
     942:	3a 85       	ldd	r19, Y+10	; 0x0a
     944:	f9 01       	movw	r30, r18
     946:	34 96       	adiw	r30, 0x04	; 4
     948:	2a 8d       	ldd	r18, Y+26	; 0x1a
     94a:	3b 8d       	ldd	r19, Y+27	; 0x1b
     94c:	4c 8d       	ldd	r20, Y+28	; 0x1c
     94e:	5d 8d       	ldd	r21, Y+29	; 0x1d
     950:	89 01       	movw	r16, r18
     952:	9a 01       	movw	r18, r20
     954:	ac 01       	movw	r20, r24
     956:	bd 01       	movw	r22, r26
     958:	cf 01       	movw	r24, r30
     95a:	0e 94 88 16 	call	0x2d10	; 0x2d10 <vTaskPlaceOnUnorderedEventList>
     95e:	19 82       	std	Y+1, r1	; 0x01
     960:	1a 82       	std	Y+2, r1	; 0x02
     962:	1b 82       	std	Y+3, r1	; 0x03
     964:	1c 82       	std	Y+4, r1	; 0x04
     966:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
     96a:	89 8b       	std	Y+17, r24	; 0x11
     96c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     96e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     970:	ac 8d       	ldd	r26, Y+28	; 0x1c
     972:	bd 8d       	ldd	r27, Y+29	; 0x1d
     974:	89 2b       	or	r24, r25
     976:	8a 2b       	or	r24, r26
     978:	8b 2b       	or	r24, r27
     97a:	09 f4       	brne	.+2      	; 0x97e <__EEPROM_REGION_LENGTH__+0x17e>
     97c:	65 c0       	rjmp	.+202    	; 0xa48 <__EEPROM_REGION_LENGTH__+0x248>
     97e:	89 89       	ldd	r24, Y+17	; 0x11
     980:	88 23       	and	r24, r24
     982:	11 f4       	brne	.+4      	; 0x988 <__EEPROM_REGION_LENGTH__+0x188>
     984:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
     988:	0e 94 44 19 	call	0x3288	; 0x3288 <uxTaskResetEventItemValue>
     98c:	dc 01       	movw	r26, r24
     98e:	cb 01       	movw	r24, r22
     990:	89 83       	std	Y+1, r24	; 0x01
     992:	9a 83       	std	Y+2, r25	; 0x02
     994:	ab 83       	std	Y+3, r26	; 0x03
     996:	bc 83       	std	Y+4, r27	; 0x04
     998:	89 81       	ldd	r24, Y+1	; 0x01
     99a:	9a 81       	ldd	r25, Y+2	; 0x02
     99c:	ab 81       	ldd	r26, Y+3	; 0x03
     99e:	bc 81       	ldd	r27, Y+4	; 0x04
     9a0:	88 27       	eor	r24, r24
     9a2:	99 27       	eor	r25, r25
     9a4:	aa 27       	eor	r26, r26
     9a6:	b2 70       	andi	r27, 0x02	; 2
     9a8:	89 2b       	or	r24, r25
     9aa:	8a 2b       	or	r24, r26
     9ac:	8b 2b       	or	r24, r27
     9ae:	09 f0       	breq	.+2      	; 0x9b2 <__EEPROM_REGION_LENGTH__+0x1b2>
     9b0:	42 c0       	rjmp	.+132    	; 0xa36 <__EEPROM_REGION_LENGTH__+0x236>
     9b2:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
     9b6:	ff 93       	push	r31
     9b8:	f8 7f       	andi	r31, 0xF8	; 248
     9ba:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
     9be:	89 85       	ldd	r24, Y+9	; 0x09
     9c0:	9a 85       	ldd	r25, Y+10	; 0x0a
     9c2:	fc 01       	movw	r30, r24
     9c4:	80 81       	ld	r24, Z
     9c6:	91 81       	ldd	r25, Z+1	; 0x01
     9c8:	a2 81       	ldd	r26, Z+2	; 0x02
     9ca:	b3 81       	ldd	r27, Z+3	; 0x03
     9cc:	89 83       	std	Y+1, r24	; 0x01
     9ce:	9a 83       	std	Y+2, r25	; 0x02
     9d0:	ab 83       	std	Y+3, r26	; 0x03
     9d2:	bc 83       	std	Y+4, r27	; 0x04
     9d4:	2c 89       	ldd	r18, Y+20	; 0x14
     9d6:	3d 89       	ldd	r19, Y+21	; 0x15
     9d8:	4e 89       	ldd	r20, Y+22	; 0x16
     9da:	5f 89       	ldd	r21, Y+23	; 0x17
     9dc:	89 81       	ldd	r24, Y+1	; 0x01
     9de:	9a 81       	ldd	r25, Y+2	; 0x02
     9e0:	ab 81       	ldd	r26, Y+3	; 0x03
     9e2:	bc 81       	ldd	r27, Y+4	; 0x04
     9e4:	09 8d       	ldd	r16, Y+25	; 0x19
     9e6:	bc 01       	movw	r22, r24
     9e8:	cd 01       	movw	r24, r26
     9ea:	0e 94 a7 06 	call	0xd4e	; 0xd4e <prvTestWaitCondition>
     9ee:	88 23       	and	r24, r24
     9f0:	e9 f0       	breq	.+58     	; 0xa2c <__EEPROM_REGION_LENGTH__+0x22c>
     9f2:	88 8d       	ldd	r24, Y+24	; 0x18
     9f4:	88 23       	and	r24, r24
     9f6:	d1 f0       	breq	.+52     	; 0xa2c <__EEPROM_REGION_LENGTH__+0x22c>
     9f8:	89 85       	ldd	r24, Y+9	; 0x09
     9fa:	9a 85       	ldd	r25, Y+10	; 0x0a
     9fc:	fc 01       	movw	r30, r24
     9fe:	20 81       	ld	r18, Z
     a00:	31 81       	ldd	r19, Z+1	; 0x01
     a02:	42 81       	ldd	r20, Z+2	; 0x02
     a04:	53 81       	ldd	r21, Z+3	; 0x03
     a06:	8c 89       	ldd	r24, Y+20	; 0x14
     a08:	9d 89       	ldd	r25, Y+21	; 0x15
     a0a:	ae 89       	ldd	r26, Y+22	; 0x16
     a0c:	bf 89       	ldd	r27, Y+23	; 0x17
     a0e:	80 95       	com	r24
     a10:	90 95       	com	r25
     a12:	a0 95       	com	r26
     a14:	b0 95       	com	r27
     a16:	82 23       	and	r24, r18
     a18:	93 23       	and	r25, r19
     a1a:	a4 23       	and	r26, r20
     a1c:	b5 23       	and	r27, r21
     a1e:	29 85       	ldd	r18, Y+9	; 0x09
     a20:	3a 85       	ldd	r19, Y+10	; 0x0a
     a22:	f9 01       	movw	r30, r18
     a24:	80 83       	st	Z, r24
     a26:	91 83       	std	Z+1, r25	; 0x01
     a28:	a2 83       	std	Z+2, r26	; 0x02
     a2a:	b3 83       	std	Z+3, r27	; 0x03
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	8b 87       	std	Y+11, r24	; 0x0b
     a30:	ff 91       	pop	r31
     a32:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
     a36:	89 81       	ldd	r24, Y+1	; 0x01
     a38:	9a 81       	ldd	r25, Y+2	; 0x02
     a3a:	ab 81       	ldd	r26, Y+3	; 0x03
     a3c:	bc 81       	ldd	r27, Y+4	; 0x04
     a3e:	bb 27       	eor	r27, r27
     a40:	89 83       	std	Y+1, r24	; 0x01
     a42:	9a 83       	std	Y+2, r25	; 0x02
     a44:	ab 83       	std	Y+3, r26	; 0x03
     a46:	bc 83       	std	Y+4, r27	; 0x04
     a48:	89 81       	ldd	r24, Y+1	; 0x01
     a4a:	9a 81       	ldd	r25, Y+2	; 0x02
     a4c:	ab 81       	ldd	r26, Y+3	; 0x03
     a4e:	bc 81       	ldd	r27, Y+4	; 0x04
     a50:	bc 01       	movw	r22, r24
     a52:	cd 01       	movw	r24, r26
     a54:	6d 96       	adiw	r28, 0x1d	; 29
     a56:	cd bf       	out	0x3d, r28	; 61
     a58:	de bf       	out	0x3e, r29	; 62
     a5a:	df 91       	pop	r29
     a5c:	cf 91       	pop	r28
     a5e:	1f 91       	pop	r17
     a60:	0f 91       	pop	r16
     a62:	ff 90       	pop	r15
     a64:	ef 90       	pop	r14
     a66:	df 90       	pop	r13
     a68:	cf 90       	pop	r12
     a6a:	08 95       	ret

00000a6c <xEventGroupClearBits>:
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	cd b7       	in	r28, 0x3d	; 61
     a72:	de b7       	in	r29, 0x3e	; 62
     a74:	2c 97       	sbiw	r28, 0x0c	; 12
     a76:	cd bf       	out	0x3d, r28	; 61
     a78:	de bf       	out	0x3e, r29	; 62
     a7a:	8f 83       	std	Y+7, r24	; 0x07
     a7c:	98 87       	std	Y+8, r25	; 0x08
     a7e:	49 87       	std	Y+9, r20	; 0x09
     a80:	5a 87       	std	Y+10, r21	; 0x0a
     a82:	6b 87       	std	Y+11, r22	; 0x0b
     a84:	7c 87       	std	Y+12, r23	; 0x0c
     a86:	8f 81       	ldd	r24, Y+7	; 0x07
     a88:	98 85       	ldd	r25, Y+8	; 0x08
     a8a:	89 83       	std	Y+1, r24	; 0x01
     a8c:	9a 83       	std	Y+2, r25	; 0x02
     a8e:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
     a92:	ff 93       	push	r31
     a94:	f8 7f       	andi	r31, 0xF8	; 248
     a96:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
     a9a:	89 81       	ldd	r24, Y+1	; 0x01
     a9c:	9a 81       	ldd	r25, Y+2	; 0x02
     a9e:	fc 01       	movw	r30, r24
     aa0:	80 81       	ld	r24, Z
     aa2:	91 81       	ldd	r25, Z+1	; 0x01
     aa4:	a2 81       	ldd	r26, Z+2	; 0x02
     aa6:	b3 81       	ldd	r27, Z+3	; 0x03
     aa8:	8b 83       	std	Y+3, r24	; 0x03
     aaa:	9c 83       	std	Y+4, r25	; 0x04
     aac:	ad 83       	std	Y+5, r26	; 0x05
     aae:	be 83       	std	Y+6, r27	; 0x06
     ab0:	89 81       	ldd	r24, Y+1	; 0x01
     ab2:	9a 81       	ldd	r25, Y+2	; 0x02
     ab4:	fc 01       	movw	r30, r24
     ab6:	20 81       	ld	r18, Z
     ab8:	31 81       	ldd	r19, Z+1	; 0x01
     aba:	42 81       	ldd	r20, Z+2	; 0x02
     abc:	53 81       	ldd	r21, Z+3	; 0x03
     abe:	89 85       	ldd	r24, Y+9	; 0x09
     ac0:	9a 85       	ldd	r25, Y+10	; 0x0a
     ac2:	ab 85       	ldd	r26, Y+11	; 0x0b
     ac4:	bc 85       	ldd	r27, Y+12	; 0x0c
     ac6:	80 95       	com	r24
     ac8:	90 95       	com	r25
     aca:	a0 95       	com	r26
     acc:	b0 95       	com	r27
     ace:	82 23       	and	r24, r18
     ad0:	93 23       	and	r25, r19
     ad2:	a4 23       	and	r26, r20
     ad4:	b5 23       	and	r27, r21
     ad6:	29 81       	ldd	r18, Y+1	; 0x01
     ad8:	3a 81       	ldd	r19, Y+2	; 0x02
     ada:	f9 01       	movw	r30, r18
     adc:	80 83       	st	Z, r24
     ade:	91 83       	std	Z+1, r25	; 0x01
     ae0:	a2 83       	std	Z+2, r26	; 0x02
     ae2:	b3 83       	std	Z+3, r27	; 0x03
     ae4:	ff 91       	pop	r31
     ae6:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
     aea:	8b 81       	ldd	r24, Y+3	; 0x03
     aec:	9c 81       	ldd	r25, Y+4	; 0x04
     aee:	ad 81       	ldd	r26, Y+5	; 0x05
     af0:	be 81       	ldd	r27, Y+6	; 0x06
     af2:	bc 01       	movw	r22, r24
     af4:	cd 01       	movw	r24, r26
     af6:	2c 96       	adiw	r28, 0x0c	; 12
     af8:	cd bf       	out	0x3d, r28	; 61
     afa:	de bf       	out	0x3e, r29	; 62
     afc:	df 91       	pop	r29
     afe:	cf 91       	pop	r28
     b00:	08 95       	ret

00000b02 <xEventGroupSetBits>:
     b02:	cf 93       	push	r28
     b04:	df 93       	push	r29
     b06:	cd b7       	in	r28, 0x3d	; 61
     b08:	de b7       	in	r29, 0x3e	; 62
     b0a:	6d 97       	sbiw	r28, 0x1d	; 29
     b0c:	cd bf       	out	0x3d, r28	; 61
     b0e:	de bf       	out	0x3e, r29	; 62
     b10:	88 8f       	std	Y+24, r24	; 0x18
     b12:	99 8f       	std	Y+25, r25	; 0x19
     b14:	4a 8f       	std	Y+26, r20	; 0x1a
     b16:	5b 8f       	std	Y+27, r21	; 0x1b
     b18:	6c 8f       	std	Y+28, r22	; 0x1c
     b1a:	7d 8f       	std	Y+29, r23	; 0x1d
     b1c:	1b 82       	std	Y+3, r1	; 0x03
     b1e:	1c 82       	std	Y+4, r1	; 0x04
     b20:	1d 82       	std	Y+5, r1	; 0x05
     b22:	1e 82       	std	Y+6, r1	; 0x06
     b24:	88 8d       	ldd	r24, Y+24	; 0x18
     b26:	99 8d       	ldd	r25, Y+25	; 0x19
     b28:	88 87       	std	Y+8, r24	; 0x08
     b2a:	99 87       	std	Y+9, r25	; 0x09
     b2c:	1f 82       	std	Y+7, r1	; 0x07
     b2e:	88 85       	ldd	r24, Y+8	; 0x08
     b30:	99 85       	ldd	r25, Y+9	; 0x09
     b32:	04 96       	adiw	r24, 0x04	; 4
     b34:	8a 87       	std	Y+10, r24	; 0x0a
     b36:	9b 87       	std	Y+11, r25	; 0x0b
     b38:	8a 85       	ldd	r24, Y+10	; 0x0a
     b3a:	9b 85       	ldd	r25, Y+11	; 0x0b
     b3c:	03 96       	adiw	r24, 0x03	; 3
     b3e:	8c 87       	std	Y+12, r24	; 0x0c
     b40:	9d 87       	std	Y+13, r25	; 0x0d
     b42:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
     b46:	8a 85       	ldd	r24, Y+10	; 0x0a
     b48:	9b 85       	ldd	r25, Y+11	; 0x0b
     b4a:	fc 01       	movw	r30, r24
     b4c:	87 81       	ldd	r24, Z+7	; 0x07
     b4e:	90 85       	ldd	r25, Z+8	; 0x08
     b50:	89 83       	std	Y+1, r24	; 0x01
     b52:	9a 83       	std	Y+2, r25	; 0x02
     b54:	88 85       	ldd	r24, Y+8	; 0x08
     b56:	99 85       	ldd	r25, Y+9	; 0x09
     b58:	fc 01       	movw	r30, r24
     b5a:	20 81       	ld	r18, Z
     b5c:	31 81       	ldd	r19, Z+1	; 0x01
     b5e:	42 81       	ldd	r20, Z+2	; 0x02
     b60:	53 81       	ldd	r21, Z+3	; 0x03
     b62:	8a 8d       	ldd	r24, Y+26	; 0x1a
     b64:	9b 8d       	ldd	r25, Y+27	; 0x1b
     b66:	ac 8d       	ldd	r26, Y+28	; 0x1c
     b68:	bd 8d       	ldd	r27, Y+29	; 0x1d
     b6a:	82 2b       	or	r24, r18
     b6c:	93 2b       	or	r25, r19
     b6e:	a4 2b       	or	r26, r20
     b70:	b5 2b       	or	r27, r21
     b72:	28 85       	ldd	r18, Y+8	; 0x08
     b74:	39 85       	ldd	r19, Y+9	; 0x09
     b76:	f9 01       	movw	r30, r18
     b78:	80 83       	st	Z, r24
     b7a:	91 83       	std	Z+1, r25	; 0x01
     b7c:	a2 83       	std	Z+2, r26	; 0x02
     b7e:	b3 83       	std	Z+3, r27	; 0x03
     b80:	95 c0       	rjmp	.+298    	; 0xcac <xEventGroupSetBits+0x1aa>
     b82:	89 81       	ldd	r24, Y+1	; 0x01
     b84:	9a 81       	ldd	r25, Y+2	; 0x02
     b86:	fc 01       	movw	r30, r24
     b88:	84 81       	ldd	r24, Z+4	; 0x04
     b8a:	95 81       	ldd	r25, Z+5	; 0x05
     b8c:	8e 87       	std	Y+14, r24	; 0x0e
     b8e:	9f 87       	std	Y+15, r25	; 0x0f
     b90:	89 81       	ldd	r24, Y+1	; 0x01
     b92:	9a 81       	ldd	r25, Y+2	; 0x02
     b94:	fc 01       	movw	r30, r24
     b96:	80 81       	ld	r24, Z
     b98:	91 81       	ldd	r25, Z+1	; 0x01
     b9a:	a2 81       	ldd	r26, Z+2	; 0x02
     b9c:	b3 81       	ldd	r27, Z+3	; 0x03
     b9e:	88 8b       	std	Y+16, r24	; 0x10
     ba0:	99 8b       	std	Y+17, r25	; 0x11
     ba2:	aa 8b       	std	Y+18, r26	; 0x12
     ba4:	bb 8b       	std	Y+19, r27	; 0x13
     ba6:	1f 82       	std	Y+7, r1	; 0x07
     ba8:	88 89       	ldd	r24, Y+16	; 0x10
     baa:	99 89       	ldd	r25, Y+17	; 0x11
     bac:	aa 89       	ldd	r26, Y+18	; 0x12
     bae:	bb 89       	ldd	r27, Y+19	; 0x13
     bb0:	88 27       	eor	r24, r24
     bb2:	99 27       	eor	r25, r25
     bb4:	aa 27       	eor	r26, r26
     bb6:	8c 8b       	std	Y+20, r24	; 0x14
     bb8:	9d 8b       	std	Y+21, r25	; 0x15
     bba:	ae 8b       	std	Y+22, r26	; 0x16
     bbc:	bf 8b       	std	Y+23, r27	; 0x17
     bbe:	88 89       	ldd	r24, Y+16	; 0x10
     bc0:	99 89       	ldd	r25, Y+17	; 0x11
     bc2:	aa 89       	ldd	r26, Y+18	; 0x12
     bc4:	bb 89       	ldd	r27, Y+19	; 0x13
     bc6:	bb 27       	eor	r27, r27
     bc8:	88 8b       	std	Y+16, r24	; 0x10
     bca:	99 8b       	std	Y+17, r25	; 0x11
     bcc:	aa 8b       	std	Y+18, r26	; 0x12
     bce:	bb 8b       	std	Y+19, r27	; 0x13
     bd0:	8c 89       	ldd	r24, Y+20	; 0x14
     bd2:	9d 89       	ldd	r25, Y+21	; 0x15
     bd4:	ae 89       	ldd	r26, Y+22	; 0x16
     bd6:	bf 89       	ldd	r27, Y+23	; 0x17
     bd8:	88 27       	eor	r24, r24
     bda:	99 27       	eor	r25, r25
     bdc:	aa 27       	eor	r26, r26
     bde:	b4 70       	andi	r27, 0x04	; 4
     be0:	89 2b       	or	r24, r25
     be2:	8a 2b       	or	r24, r26
     be4:	8b 2b       	or	r24, r27
     be6:	b1 f4       	brne	.+44     	; 0xc14 <xEventGroupSetBits+0x112>
     be8:	88 85       	ldd	r24, Y+8	; 0x08
     bea:	99 85       	ldd	r25, Y+9	; 0x09
     bec:	fc 01       	movw	r30, r24
     bee:	20 81       	ld	r18, Z
     bf0:	31 81       	ldd	r19, Z+1	; 0x01
     bf2:	42 81       	ldd	r20, Z+2	; 0x02
     bf4:	53 81       	ldd	r21, Z+3	; 0x03
     bf6:	88 89       	ldd	r24, Y+16	; 0x10
     bf8:	99 89       	ldd	r25, Y+17	; 0x11
     bfa:	aa 89       	ldd	r26, Y+18	; 0x12
     bfc:	bb 89       	ldd	r27, Y+19	; 0x13
     bfe:	82 23       	and	r24, r18
     c00:	93 23       	and	r25, r19
     c02:	a4 23       	and	r26, r20
     c04:	b5 23       	and	r27, r21
     c06:	89 2b       	or	r24, r25
     c08:	8a 2b       	or	r24, r26
     c0a:	8b 2b       	or	r24, r27
     c0c:	e9 f0       	breq	.+58     	; 0xc48 <xEventGroupSetBits+0x146>
     c0e:	81 e0       	ldi	r24, 0x01	; 1
     c10:	8f 83       	std	Y+7, r24	; 0x07
     c12:	1a c0       	rjmp	.+52     	; 0xc48 <xEventGroupSetBits+0x146>
     c14:	88 85       	ldd	r24, Y+8	; 0x08
     c16:	99 85       	ldd	r25, Y+9	; 0x09
     c18:	fc 01       	movw	r30, r24
     c1a:	20 81       	ld	r18, Z
     c1c:	31 81       	ldd	r19, Z+1	; 0x01
     c1e:	42 81       	ldd	r20, Z+2	; 0x02
     c20:	53 81       	ldd	r21, Z+3	; 0x03
     c22:	88 89       	ldd	r24, Y+16	; 0x10
     c24:	99 89       	ldd	r25, Y+17	; 0x11
     c26:	aa 89       	ldd	r26, Y+18	; 0x12
     c28:	bb 89       	ldd	r27, Y+19	; 0x13
     c2a:	28 23       	and	r18, r24
     c2c:	39 23       	and	r19, r25
     c2e:	4a 23       	and	r20, r26
     c30:	5b 23       	and	r21, r27
     c32:	88 89       	ldd	r24, Y+16	; 0x10
     c34:	99 89       	ldd	r25, Y+17	; 0x11
     c36:	aa 89       	ldd	r26, Y+18	; 0x12
     c38:	bb 89       	ldd	r27, Y+19	; 0x13
     c3a:	28 17       	cp	r18, r24
     c3c:	39 07       	cpc	r19, r25
     c3e:	4a 07       	cpc	r20, r26
     c40:	5b 07       	cpc	r21, r27
     c42:	11 f4       	brne	.+4      	; 0xc48 <xEventGroupSetBits+0x146>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	8f 83       	std	Y+7, r24	; 0x07
     c48:	8f 81       	ldd	r24, Y+7	; 0x07
     c4a:	88 23       	and	r24, r24
     c4c:	59 f1       	breq	.+86     	; 0xca4 <xEventGroupSetBits+0x1a2>
     c4e:	8c 89       	ldd	r24, Y+20	; 0x14
     c50:	9d 89       	ldd	r25, Y+21	; 0x15
     c52:	ae 89       	ldd	r26, Y+22	; 0x16
     c54:	bf 89       	ldd	r27, Y+23	; 0x17
     c56:	88 27       	eor	r24, r24
     c58:	99 27       	eor	r25, r25
     c5a:	aa 27       	eor	r26, r26
     c5c:	b1 70       	andi	r27, 0x01	; 1
     c5e:	89 2b       	or	r24, r25
     c60:	8a 2b       	or	r24, r26
     c62:	8b 2b       	or	r24, r27
     c64:	81 f0       	breq	.+32     	; 0xc86 <xEventGroupSetBits+0x184>
     c66:	2b 81       	ldd	r18, Y+3	; 0x03
     c68:	3c 81       	ldd	r19, Y+4	; 0x04
     c6a:	4d 81       	ldd	r20, Y+5	; 0x05
     c6c:	5e 81       	ldd	r21, Y+6	; 0x06
     c6e:	88 89       	ldd	r24, Y+16	; 0x10
     c70:	99 89       	ldd	r25, Y+17	; 0x11
     c72:	aa 89       	ldd	r26, Y+18	; 0x12
     c74:	bb 89       	ldd	r27, Y+19	; 0x13
     c76:	82 2b       	or	r24, r18
     c78:	93 2b       	or	r25, r19
     c7a:	a4 2b       	or	r26, r20
     c7c:	b5 2b       	or	r27, r21
     c7e:	8b 83       	std	Y+3, r24	; 0x03
     c80:	9c 83       	std	Y+4, r25	; 0x04
     c82:	ad 83       	std	Y+5, r26	; 0x05
     c84:	be 83       	std	Y+6, r27	; 0x06
     c86:	88 85       	ldd	r24, Y+8	; 0x08
     c88:	99 85       	ldd	r25, Y+9	; 0x09
     c8a:	fc 01       	movw	r30, r24
     c8c:	80 81       	ld	r24, Z
     c8e:	91 81       	ldd	r25, Z+1	; 0x01
     c90:	a2 81       	ldd	r26, Z+2	; 0x02
     c92:	b3 81       	ldd	r27, Z+3	; 0x03
     c94:	b2 60       	ori	r27, 0x02	; 2
     c96:	29 81       	ldd	r18, Y+1	; 0x01
     c98:	3a 81       	ldd	r19, Y+2	; 0x02
     c9a:	ac 01       	movw	r20, r24
     c9c:	bd 01       	movw	r22, r26
     c9e:	c9 01       	movw	r24, r18
     ca0:	0e 94 63 17 	call	0x2ec6	; 0x2ec6 <vTaskRemoveFromUnorderedEventList>
     ca4:	8e 85       	ldd	r24, Y+14	; 0x0e
     ca6:	9f 85       	ldd	r25, Y+15	; 0x0f
     ca8:	89 83       	std	Y+1, r24	; 0x01
     caa:	9a 83       	std	Y+2, r25	; 0x02
     cac:	29 81       	ldd	r18, Y+1	; 0x01
     cae:	3a 81       	ldd	r19, Y+2	; 0x02
     cb0:	8c 85       	ldd	r24, Y+12	; 0x0c
     cb2:	9d 85       	ldd	r25, Y+13	; 0x0d
     cb4:	28 17       	cp	r18, r24
     cb6:	39 07       	cpc	r19, r25
     cb8:	09 f0       	breq	.+2      	; 0xcbc <xEventGroupSetBits+0x1ba>
     cba:	63 cf       	rjmp	.-314    	; 0xb82 <xEventGroupSetBits+0x80>
     cbc:	88 85       	ldd	r24, Y+8	; 0x08
     cbe:	99 85       	ldd	r25, Y+9	; 0x09
     cc0:	fc 01       	movw	r30, r24
     cc2:	20 81       	ld	r18, Z
     cc4:	31 81       	ldd	r19, Z+1	; 0x01
     cc6:	42 81       	ldd	r20, Z+2	; 0x02
     cc8:	53 81       	ldd	r21, Z+3	; 0x03
     cca:	8b 81       	ldd	r24, Y+3	; 0x03
     ccc:	9c 81       	ldd	r25, Y+4	; 0x04
     cce:	ad 81       	ldd	r26, Y+5	; 0x05
     cd0:	be 81       	ldd	r27, Y+6	; 0x06
     cd2:	80 95       	com	r24
     cd4:	90 95       	com	r25
     cd6:	a0 95       	com	r26
     cd8:	b0 95       	com	r27
     cda:	82 23       	and	r24, r18
     cdc:	93 23       	and	r25, r19
     cde:	a4 23       	and	r26, r20
     ce0:	b5 23       	and	r27, r21
     ce2:	28 85       	ldd	r18, Y+8	; 0x08
     ce4:	39 85       	ldd	r19, Y+9	; 0x09
     ce6:	f9 01       	movw	r30, r18
     ce8:	80 83       	st	Z, r24
     cea:	91 83       	std	Z+1, r25	; 0x01
     cec:	a2 83       	std	Z+2, r26	; 0x02
     cee:	b3 83       	std	Z+3, r27	; 0x03
     cf0:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
     cf4:	88 85       	ldd	r24, Y+8	; 0x08
     cf6:	99 85       	ldd	r25, Y+9	; 0x09
     cf8:	fc 01       	movw	r30, r24
     cfa:	80 81       	ld	r24, Z
     cfc:	91 81       	ldd	r25, Z+1	; 0x01
     cfe:	a2 81       	ldd	r26, Z+2	; 0x02
     d00:	b3 81       	ldd	r27, Z+3	; 0x03
     d02:	bc 01       	movw	r22, r24
     d04:	cd 01       	movw	r24, r26
     d06:	6d 96       	adiw	r28, 0x1d	; 29
     d08:	cd bf       	out	0x3d, r28	; 61
     d0a:	de bf       	out	0x3e, r29	; 62
     d0c:	df 91       	pop	r29
     d0e:	cf 91       	pop	r28
     d10:	08 95       	ret

00000d12 <vEventGroupSetBitsCallback>:
     d12:	cf 93       	push	r28
     d14:	df 93       	push	r29
     d16:	00 d0       	rcall	.+0      	; 0xd18 <vEventGroupSetBitsCallback+0x6>
     d18:	00 d0       	rcall	.+0      	; 0xd1a <vEventGroupSetBitsCallback+0x8>
     d1a:	cd b7       	in	r28, 0x3d	; 61
     d1c:	de b7       	in	r29, 0x3e	; 62
     d1e:	89 83       	std	Y+1, r24	; 0x01
     d20:	9a 83       	std	Y+2, r25	; 0x02
     d22:	4b 83       	std	Y+3, r20	; 0x03
     d24:	5c 83       	std	Y+4, r21	; 0x04
     d26:	6d 83       	std	Y+5, r22	; 0x05
     d28:	7e 83       	std	Y+6, r23	; 0x06
     d2a:	8b 81       	ldd	r24, Y+3	; 0x03
     d2c:	9c 81       	ldd	r25, Y+4	; 0x04
     d2e:	ad 81       	ldd	r26, Y+5	; 0x05
     d30:	be 81       	ldd	r27, Y+6	; 0x06
     d32:	29 81       	ldd	r18, Y+1	; 0x01
     d34:	3a 81       	ldd	r19, Y+2	; 0x02
     d36:	ac 01       	movw	r20, r24
     d38:	bd 01       	movw	r22, r26
     d3a:	c9 01       	movw	r24, r18
     d3c:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
     d40:	00 00       	nop
     d42:	26 96       	adiw	r28, 0x06	; 6
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	de bf       	out	0x3e, r29	; 62
     d48:	df 91       	pop	r29
     d4a:	cf 91       	pop	r28
     d4c:	08 95       	ret

00000d4e <prvTestWaitCondition>:
     d4e:	0f 93       	push	r16
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	cd b7       	in	r28, 0x3d	; 61
     d56:	de b7       	in	r29, 0x3e	; 62
     d58:	2a 97       	sbiw	r28, 0x0a	; 10
     d5a:	cd bf       	out	0x3d, r28	; 61
     d5c:	de bf       	out	0x3e, r29	; 62
     d5e:	6a 83       	std	Y+2, r22	; 0x02
     d60:	7b 83       	std	Y+3, r23	; 0x03
     d62:	8c 83       	std	Y+4, r24	; 0x04
     d64:	9d 83       	std	Y+5, r25	; 0x05
     d66:	2e 83       	std	Y+6, r18	; 0x06
     d68:	3f 83       	std	Y+7, r19	; 0x07
     d6a:	48 87       	std	Y+8, r20	; 0x08
     d6c:	59 87       	std	Y+9, r21	; 0x09
     d6e:	0a 87       	std	Y+10, r16	; 0x0a
     d70:	19 82       	std	Y+1, r1	; 0x01
     d72:	8a 85       	ldd	r24, Y+10	; 0x0a
     d74:	88 23       	and	r24, r24
     d76:	99 f4       	brne	.+38     	; 0xd9e <prvTestWaitCondition+0x50>
     d78:	2a 81       	ldd	r18, Y+2	; 0x02
     d7a:	3b 81       	ldd	r19, Y+3	; 0x03
     d7c:	4c 81       	ldd	r20, Y+4	; 0x04
     d7e:	5d 81       	ldd	r21, Y+5	; 0x05
     d80:	8e 81       	ldd	r24, Y+6	; 0x06
     d82:	9f 81       	ldd	r25, Y+7	; 0x07
     d84:	a8 85       	ldd	r26, Y+8	; 0x08
     d86:	b9 85       	ldd	r27, Y+9	; 0x09
     d88:	82 23       	and	r24, r18
     d8a:	93 23       	and	r25, r19
     d8c:	a4 23       	and	r26, r20
     d8e:	b5 23       	and	r27, r21
     d90:	89 2b       	or	r24, r25
     d92:	8a 2b       	or	r24, r26
     d94:	8b 2b       	or	r24, r27
     d96:	d1 f0       	breq	.+52     	; 0xdcc <prvTestWaitCondition+0x7e>
     d98:	81 e0       	ldi	r24, 0x01	; 1
     d9a:	89 83       	std	Y+1, r24	; 0x01
     d9c:	17 c0       	rjmp	.+46     	; 0xdcc <prvTestWaitCondition+0x7e>
     d9e:	2a 81       	ldd	r18, Y+2	; 0x02
     da0:	3b 81       	ldd	r19, Y+3	; 0x03
     da2:	4c 81       	ldd	r20, Y+4	; 0x04
     da4:	5d 81       	ldd	r21, Y+5	; 0x05
     da6:	8e 81       	ldd	r24, Y+6	; 0x06
     da8:	9f 81       	ldd	r25, Y+7	; 0x07
     daa:	a8 85       	ldd	r26, Y+8	; 0x08
     dac:	b9 85       	ldd	r27, Y+9	; 0x09
     dae:	28 23       	and	r18, r24
     db0:	39 23       	and	r19, r25
     db2:	4a 23       	and	r20, r26
     db4:	5b 23       	and	r21, r27
     db6:	8e 81       	ldd	r24, Y+6	; 0x06
     db8:	9f 81       	ldd	r25, Y+7	; 0x07
     dba:	a8 85       	ldd	r26, Y+8	; 0x08
     dbc:	b9 85       	ldd	r27, Y+9	; 0x09
     dbe:	28 17       	cp	r18, r24
     dc0:	39 07       	cpc	r19, r25
     dc2:	4a 07       	cpc	r20, r26
     dc4:	5b 07       	cpc	r21, r27
     dc6:	11 f4       	brne	.+4      	; 0xdcc <prvTestWaitCondition+0x7e>
     dc8:	81 e0       	ldi	r24, 0x01	; 1
     dca:	89 83       	std	Y+1, r24	; 0x01
     dcc:	89 81       	ldd	r24, Y+1	; 0x01
     dce:	2a 96       	adiw	r28, 0x0a	; 10
     dd0:	cd bf       	out	0x3d, r28	; 61
     dd2:	de bf       	out	0x3e, r29	; 62
     dd4:	df 91       	pop	r29
     dd6:	cf 91       	pop	r28
     dd8:	0f 91       	pop	r16
     dda:	08 95       	ret

00000ddc <xEventGroupSetBitsFromISR>:
     ddc:	0f 93       	push	r16
     dde:	1f 93       	push	r17
     de0:	cf 93       	push	r28
     de2:	df 93       	push	r29
     de4:	cd b7       	in	r28, 0x3d	; 61
     de6:	de b7       	in	r29, 0x3e	; 62
     de8:	29 97       	sbiw	r28, 0x09	; 9
     dea:	cd bf       	out	0x3d, r28	; 61
     dec:	de bf       	out	0x3e, r29	; 62
     dee:	8a 83       	std	Y+2, r24	; 0x02
     df0:	9b 83       	std	Y+3, r25	; 0x03
     df2:	4c 83       	std	Y+4, r20	; 0x04
     df4:	5d 83       	std	Y+5, r21	; 0x05
     df6:	6e 83       	std	Y+6, r22	; 0x06
     df8:	7f 83       	std	Y+7, r23	; 0x07
     dfa:	28 87       	std	Y+8, r18	; 0x08
     dfc:	39 87       	std	Y+9, r19	; 0x09
     dfe:	28 85       	ldd	r18, Y+8	; 0x08
     e00:	39 85       	ldd	r19, Y+9	; 0x09
     e02:	8c 81       	ldd	r24, Y+4	; 0x04
     e04:	9d 81       	ldd	r25, Y+5	; 0x05
     e06:	ae 81       	ldd	r26, Y+6	; 0x06
     e08:	bf 81       	ldd	r27, Y+7	; 0x07
     e0a:	6a 81       	ldd	r22, Y+2	; 0x02
     e0c:	7b 81       	ldd	r23, Y+3	; 0x03
     e0e:	89 01       	movw	r16, r18
     e10:	9c 01       	movw	r18, r24
     e12:	ad 01       	movw	r20, r26
     e14:	89 e8       	ldi	r24, 0x89	; 137
     e16:	96 e0       	ldi	r25, 0x06	; 6
     e18:	0e 94 f0 1e 	call	0x3de0	; 0x3de0 <xTimerPendFunctionCallFromISR>
     e1c:	89 83       	std	Y+1, r24	; 0x01
     e1e:	89 81       	ldd	r24, Y+1	; 0x01
     e20:	29 96       	adiw	r28, 0x09	; 9
     e22:	cd bf       	out	0x3d, r28	; 61
     e24:	de bf       	out	0x3e, r29	; 62
     e26:	df 91       	pop	r29
     e28:	cf 91       	pop	r28
     e2a:	1f 91       	pop	r17
     e2c:	0f 91       	pop	r16
     e2e:	08 95       	ret

00000e30 <pvPortMalloc>:
     e30:	cf 93       	push	r28
     e32:	df 93       	push	r29
     e34:	00 d0       	rcall	.+0      	; 0xe36 <pvPortMalloc+0x6>
     e36:	1f 92       	push	r1
     e38:	cd b7       	in	r28, 0x3d	; 61
     e3a:	de b7       	in	r29, 0x3e	; 62
     e3c:	8b 83       	std	Y+3, r24	; 0x03
     e3e:	9c 83       	std	Y+4, r25	; 0x04
     e40:	19 82       	std	Y+1, r1	; 0x01
     e42:	1a 82       	std	Y+2, r1	; 0x02
     e44:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
     e48:	20 91 80 2c 	lds	r18, 0x2C80	; 0x802c80 <xNextFreeByte>
     e4c:	30 91 81 2c 	lds	r19, 0x2C81	; 0x802c81 <xNextFreeByte+0x1>
     e50:	8b 81       	ldd	r24, Y+3	; 0x03
     e52:	9c 81       	ldd	r25, Y+4	; 0x04
     e54:	82 0f       	add	r24, r18
     e56:	93 1f       	adc	r25, r19
     e58:	88 3b       	cpi	r24, 0xB8	; 184
     e5a:	9b 40       	sbci	r25, 0x0B	; 11
     e5c:	18 f5       	brcc	.+70     	; 0xea4 <pvPortMalloc+0x74>
     e5e:	20 91 80 2c 	lds	r18, 0x2C80	; 0x802c80 <xNextFreeByte>
     e62:	30 91 81 2c 	lds	r19, 0x2C81	; 0x802c81 <xNextFreeByte+0x1>
     e66:	8b 81       	ldd	r24, Y+3	; 0x03
     e68:	9c 81       	ldd	r25, Y+4	; 0x04
     e6a:	28 0f       	add	r18, r24
     e6c:	39 1f       	adc	r19, r25
     e6e:	80 91 80 2c 	lds	r24, 0x2C80	; 0x802c80 <xNextFreeByte>
     e72:	90 91 81 2c 	lds	r25, 0x2C81	; 0x802c81 <xNextFreeByte+0x1>
     e76:	82 17       	cp	r24, r18
     e78:	93 07       	cpc	r25, r19
     e7a:	a0 f4       	brcc	.+40     	; 0xea4 <pvPortMalloc+0x74>
     e7c:	80 91 80 2c 	lds	r24, 0x2C80	; 0x802c80 <xNextFreeByte>
     e80:	90 91 81 2c 	lds	r25, 0x2C81	; 0x802c81 <xNextFreeByte+0x1>
     e84:	88 53       	subi	r24, 0x38	; 56
     e86:	9f 4d       	sbci	r25, 0xDF	; 223
     e88:	89 83       	std	Y+1, r24	; 0x01
     e8a:	9a 83       	std	Y+2, r25	; 0x02
     e8c:	20 91 80 2c 	lds	r18, 0x2C80	; 0x802c80 <xNextFreeByte>
     e90:	30 91 81 2c 	lds	r19, 0x2C81	; 0x802c81 <xNextFreeByte+0x1>
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	9c 81       	ldd	r25, Y+4	; 0x04
     e98:	82 0f       	add	r24, r18
     e9a:	93 1f       	adc	r25, r19
     e9c:	80 93 80 2c 	sts	0x2C80, r24	; 0x802c80 <xNextFreeByte>
     ea0:	90 93 81 2c 	sts	0x2C81, r25	; 0x802c81 <xNextFreeByte+0x1>
     ea4:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
     ea8:	89 81       	ldd	r24, Y+1	; 0x01
     eaa:	9a 81       	ldd	r25, Y+2	; 0x02
     eac:	24 96       	adiw	r28, 0x04	; 4
     eae:	cd bf       	out	0x3d, r28	; 61
     eb0:	de bf       	out	0x3e, r29	; 62
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	08 95       	ret

00000eb8 <vPortFree>:
     eb8:	cf 93       	push	r28
     eba:	df 93       	push	r29
     ebc:	1f 92       	push	r1
     ebe:	1f 92       	push	r1
     ec0:	cd b7       	in	r28, 0x3d	; 61
     ec2:	de b7       	in	r29, 0x3e	; 62
     ec4:	89 83       	std	Y+1, r24	; 0x01
     ec6:	9a 83       	std	Y+2, r25	; 0x02
     ec8:	00 00       	nop
     eca:	0f 90       	pop	r0
     ecc:	0f 90       	pop	r0
     ece:	df 91       	pop	r29
     ed0:	cf 91       	pop	r28
     ed2:	08 95       	ret

00000ed4 <vListInitialise>:
     ed4:	cf 93       	push	r28
     ed6:	df 93       	push	r29
     ed8:	1f 92       	push	r1
     eda:	1f 92       	push	r1
     edc:	cd b7       	in	r28, 0x3d	; 61
     ede:	de b7       	in	r29, 0x3e	; 62
     ee0:	89 83       	std	Y+1, r24	; 0x01
     ee2:	9a 83       	std	Y+2, r25	; 0x02
     ee4:	89 81       	ldd	r24, Y+1	; 0x01
     ee6:	9a 81       	ldd	r25, Y+2	; 0x02
     ee8:	9c 01       	movw	r18, r24
     eea:	2d 5f       	subi	r18, 0xFD	; 253
     eec:	3f 4f       	sbci	r19, 0xFF	; 255
     eee:	89 81       	ldd	r24, Y+1	; 0x01
     ef0:	9a 81       	ldd	r25, Y+2	; 0x02
     ef2:	fc 01       	movw	r30, r24
     ef4:	21 83       	std	Z+1, r18	; 0x01
     ef6:	32 83       	std	Z+2, r19	; 0x02
     ef8:	29 81       	ldd	r18, Y+1	; 0x01
     efa:	3a 81       	ldd	r19, Y+2	; 0x02
     efc:	8f ef       	ldi	r24, 0xFF	; 255
     efe:	9f ef       	ldi	r25, 0xFF	; 255
     f00:	dc 01       	movw	r26, r24
     f02:	f9 01       	movw	r30, r18
     f04:	83 83       	std	Z+3, r24	; 0x03
     f06:	94 83       	std	Z+4, r25	; 0x04
     f08:	a5 83       	std	Z+5, r26	; 0x05
     f0a:	b6 83       	std	Z+6, r27	; 0x06
     f0c:	89 81       	ldd	r24, Y+1	; 0x01
     f0e:	9a 81       	ldd	r25, Y+2	; 0x02
     f10:	9c 01       	movw	r18, r24
     f12:	2d 5f       	subi	r18, 0xFD	; 253
     f14:	3f 4f       	sbci	r19, 0xFF	; 255
     f16:	89 81       	ldd	r24, Y+1	; 0x01
     f18:	9a 81       	ldd	r25, Y+2	; 0x02
     f1a:	fc 01       	movw	r30, r24
     f1c:	27 83       	std	Z+7, r18	; 0x07
     f1e:	30 87       	std	Z+8, r19	; 0x08
     f20:	89 81       	ldd	r24, Y+1	; 0x01
     f22:	9a 81       	ldd	r25, Y+2	; 0x02
     f24:	9c 01       	movw	r18, r24
     f26:	2d 5f       	subi	r18, 0xFD	; 253
     f28:	3f 4f       	sbci	r19, 0xFF	; 255
     f2a:	89 81       	ldd	r24, Y+1	; 0x01
     f2c:	9a 81       	ldd	r25, Y+2	; 0x02
     f2e:	fc 01       	movw	r30, r24
     f30:	21 87       	std	Z+9, r18	; 0x09
     f32:	32 87       	std	Z+10, r19	; 0x0a
     f34:	89 81       	ldd	r24, Y+1	; 0x01
     f36:	9a 81       	ldd	r25, Y+2	; 0x02
     f38:	fc 01       	movw	r30, r24
     f3a:	10 82       	st	Z, r1
     f3c:	00 00       	nop
     f3e:	0f 90       	pop	r0
     f40:	0f 90       	pop	r0
     f42:	df 91       	pop	r29
     f44:	cf 91       	pop	r28
     f46:	08 95       	ret

00000f48 <vListInitialiseItem>:
     f48:	cf 93       	push	r28
     f4a:	df 93       	push	r29
     f4c:	1f 92       	push	r1
     f4e:	1f 92       	push	r1
     f50:	cd b7       	in	r28, 0x3d	; 61
     f52:	de b7       	in	r29, 0x3e	; 62
     f54:	89 83       	std	Y+1, r24	; 0x01
     f56:	9a 83       	std	Y+2, r25	; 0x02
     f58:	89 81       	ldd	r24, Y+1	; 0x01
     f5a:	9a 81       	ldd	r25, Y+2	; 0x02
     f5c:	fc 01       	movw	r30, r24
     f5e:	12 86       	std	Z+10, r1	; 0x0a
     f60:	13 86       	std	Z+11, r1	; 0x0b
     f62:	00 00       	nop
     f64:	0f 90       	pop	r0
     f66:	0f 90       	pop	r0
     f68:	df 91       	pop	r29
     f6a:	cf 91       	pop	r28
     f6c:	08 95       	ret

00000f6e <vListInsertEnd>:
     f6e:	cf 93       	push	r28
     f70:	df 93       	push	r29
     f72:	00 d0       	rcall	.+0      	; 0xf74 <vListInsertEnd+0x6>
     f74:	00 d0       	rcall	.+0      	; 0xf76 <vListInsertEnd+0x8>
     f76:	cd b7       	in	r28, 0x3d	; 61
     f78:	de b7       	in	r29, 0x3e	; 62
     f7a:	8b 83       	std	Y+3, r24	; 0x03
     f7c:	9c 83       	std	Y+4, r25	; 0x04
     f7e:	6d 83       	std	Y+5, r22	; 0x05
     f80:	7e 83       	std	Y+6, r23	; 0x06
     f82:	8b 81       	ldd	r24, Y+3	; 0x03
     f84:	9c 81       	ldd	r25, Y+4	; 0x04
     f86:	fc 01       	movw	r30, r24
     f88:	81 81       	ldd	r24, Z+1	; 0x01
     f8a:	92 81       	ldd	r25, Z+2	; 0x02
     f8c:	89 83       	std	Y+1, r24	; 0x01
     f8e:	9a 83       	std	Y+2, r25	; 0x02
     f90:	8d 81       	ldd	r24, Y+5	; 0x05
     f92:	9e 81       	ldd	r25, Y+6	; 0x06
     f94:	29 81       	ldd	r18, Y+1	; 0x01
     f96:	3a 81       	ldd	r19, Y+2	; 0x02
     f98:	fc 01       	movw	r30, r24
     f9a:	24 83       	std	Z+4, r18	; 0x04
     f9c:	35 83       	std	Z+5, r19	; 0x05
     f9e:	89 81       	ldd	r24, Y+1	; 0x01
     fa0:	9a 81       	ldd	r25, Y+2	; 0x02
     fa2:	fc 01       	movw	r30, r24
     fa4:	26 81       	ldd	r18, Z+6	; 0x06
     fa6:	37 81       	ldd	r19, Z+7	; 0x07
     fa8:	8d 81       	ldd	r24, Y+5	; 0x05
     faa:	9e 81       	ldd	r25, Y+6	; 0x06
     fac:	fc 01       	movw	r30, r24
     fae:	26 83       	std	Z+6, r18	; 0x06
     fb0:	37 83       	std	Z+7, r19	; 0x07
     fb2:	89 81       	ldd	r24, Y+1	; 0x01
     fb4:	9a 81       	ldd	r25, Y+2	; 0x02
     fb6:	fc 01       	movw	r30, r24
     fb8:	86 81       	ldd	r24, Z+6	; 0x06
     fba:	97 81       	ldd	r25, Z+7	; 0x07
     fbc:	2d 81       	ldd	r18, Y+5	; 0x05
     fbe:	3e 81       	ldd	r19, Y+6	; 0x06
     fc0:	fc 01       	movw	r30, r24
     fc2:	24 83       	std	Z+4, r18	; 0x04
     fc4:	35 83       	std	Z+5, r19	; 0x05
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	9a 81       	ldd	r25, Y+2	; 0x02
     fca:	2d 81       	ldd	r18, Y+5	; 0x05
     fcc:	3e 81       	ldd	r19, Y+6	; 0x06
     fce:	fc 01       	movw	r30, r24
     fd0:	26 83       	std	Z+6, r18	; 0x06
     fd2:	37 83       	std	Z+7, r19	; 0x07
     fd4:	8d 81       	ldd	r24, Y+5	; 0x05
     fd6:	9e 81       	ldd	r25, Y+6	; 0x06
     fd8:	2b 81       	ldd	r18, Y+3	; 0x03
     fda:	3c 81       	ldd	r19, Y+4	; 0x04
     fdc:	fc 01       	movw	r30, r24
     fde:	22 87       	std	Z+10, r18	; 0x0a
     fe0:	33 87       	std	Z+11, r19	; 0x0b
     fe2:	8b 81       	ldd	r24, Y+3	; 0x03
     fe4:	9c 81       	ldd	r25, Y+4	; 0x04
     fe6:	fc 01       	movw	r30, r24
     fe8:	80 81       	ld	r24, Z
     fea:	21 e0       	ldi	r18, 0x01	; 1
     fec:	28 0f       	add	r18, r24
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	9c 81       	ldd	r25, Y+4	; 0x04
     ff2:	fc 01       	movw	r30, r24
     ff4:	20 83       	st	Z, r18
     ff6:	00 00       	nop
     ff8:	26 96       	adiw	r28, 0x06	; 6
     ffa:	cd bf       	out	0x3d, r28	; 61
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	df 91       	pop	r29
    1000:	cf 91       	pop	r28
    1002:	08 95       	ret

00001004 <vListInsert>:
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	cd b7       	in	r28, 0x3d	; 61
    100a:	de b7       	in	r29, 0x3e	; 62
    100c:	2a 97       	sbiw	r28, 0x0a	; 10
    100e:	cd bf       	out	0x3d, r28	; 61
    1010:	de bf       	out	0x3e, r29	; 62
    1012:	8f 83       	std	Y+7, r24	; 0x07
    1014:	98 87       	std	Y+8, r25	; 0x08
    1016:	69 87       	std	Y+9, r22	; 0x09
    1018:	7a 87       	std	Y+10, r23	; 0x0a
    101a:	89 85       	ldd	r24, Y+9	; 0x09
    101c:	9a 85       	ldd	r25, Y+10	; 0x0a
    101e:	fc 01       	movw	r30, r24
    1020:	80 81       	ld	r24, Z
    1022:	91 81       	ldd	r25, Z+1	; 0x01
    1024:	a2 81       	ldd	r26, Z+2	; 0x02
    1026:	b3 81       	ldd	r27, Z+3	; 0x03
    1028:	8b 83       	std	Y+3, r24	; 0x03
    102a:	9c 83       	std	Y+4, r25	; 0x04
    102c:	ad 83       	std	Y+5, r26	; 0x05
    102e:	be 83       	std	Y+6, r27	; 0x06
    1030:	8b 81       	ldd	r24, Y+3	; 0x03
    1032:	9c 81       	ldd	r25, Y+4	; 0x04
    1034:	ad 81       	ldd	r26, Y+5	; 0x05
    1036:	be 81       	ldd	r27, Y+6	; 0x06
    1038:	8f 3f       	cpi	r24, 0xFF	; 255
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	af 4f       	sbci	r26, 0xFF	; 255
    103e:	bf 4f       	sbci	r27, 0xFF	; 255
    1040:	41 f4       	brne	.+16     	; 0x1052 <vListInsert+0x4e>
    1042:	8f 81       	ldd	r24, Y+7	; 0x07
    1044:	98 85       	ldd	r25, Y+8	; 0x08
    1046:	fc 01       	movw	r30, r24
    1048:	81 85       	ldd	r24, Z+9	; 0x09
    104a:	92 85       	ldd	r25, Z+10	; 0x0a
    104c:	89 83       	std	Y+1, r24	; 0x01
    104e:	9a 83       	std	Y+2, r25	; 0x02
    1050:	20 c0       	rjmp	.+64     	; 0x1092 <vListInsert+0x8e>
    1052:	8f 81       	ldd	r24, Y+7	; 0x07
    1054:	98 85       	ldd	r25, Y+8	; 0x08
    1056:	03 96       	adiw	r24, 0x03	; 3
    1058:	89 83       	std	Y+1, r24	; 0x01
    105a:	9a 83       	std	Y+2, r25	; 0x02
    105c:	07 c0       	rjmp	.+14     	; 0x106c <vListInsert+0x68>
    105e:	89 81       	ldd	r24, Y+1	; 0x01
    1060:	9a 81       	ldd	r25, Y+2	; 0x02
    1062:	fc 01       	movw	r30, r24
    1064:	84 81       	ldd	r24, Z+4	; 0x04
    1066:	95 81       	ldd	r25, Z+5	; 0x05
    1068:	89 83       	std	Y+1, r24	; 0x01
    106a:	9a 83       	std	Y+2, r25	; 0x02
    106c:	89 81       	ldd	r24, Y+1	; 0x01
    106e:	9a 81       	ldd	r25, Y+2	; 0x02
    1070:	fc 01       	movw	r30, r24
    1072:	84 81       	ldd	r24, Z+4	; 0x04
    1074:	95 81       	ldd	r25, Z+5	; 0x05
    1076:	fc 01       	movw	r30, r24
    1078:	20 81       	ld	r18, Z
    107a:	31 81       	ldd	r19, Z+1	; 0x01
    107c:	42 81       	ldd	r20, Z+2	; 0x02
    107e:	53 81       	ldd	r21, Z+3	; 0x03
    1080:	8b 81       	ldd	r24, Y+3	; 0x03
    1082:	9c 81       	ldd	r25, Y+4	; 0x04
    1084:	ad 81       	ldd	r26, Y+5	; 0x05
    1086:	be 81       	ldd	r27, Y+6	; 0x06
    1088:	82 17       	cp	r24, r18
    108a:	93 07       	cpc	r25, r19
    108c:	a4 07       	cpc	r26, r20
    108e:	b5 07       	cpc	r27, r21
    1090:	30 f7       	brcc	.-52     	; 0x105e <vListInsert+0x5a>
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	9a 81       	ldd	r25, Y+2	; 0x02
    1096:	fc 01       	movw	r30, r24
    1098:	24 81       	ldd	r18, Z+4	; 0x04
    109a:	35 81       	ldd	r19, Z+5	; 0x05
    109c:	89 85       	ldd	r24, Y+9	; 0x09
    109e:	9a 85       	ldd	r25, Y+10	; 0x0a
    10a0:	fc 01       	movw	r30, r24
    10a2:	24 83       	std	Z+4, r18	; 0x04
    10a4:	35 83       	std	Z+5, r19	; 0x05
    10a6:	89 85       	ldd	r24, Y+9	; 0x09
    10a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10aa:	fc 01       	movw	r30, r24
    10ac:	84 81       	ldd	r24, Z+4	; 0x04
    10ae:	95 81       	ldd	r25, Z+5	; 0x05
    10b0:	29 85       	ldd	r18, Y+9	; 0x09
    10b2:	3a 85       	ldd	r19, Y+10	; 0x0a
    10b4:	fc 01       	movw	r30, r24
    10b6:	26 83       	std	Z+6, r18	; 0x06
    10b8:	37 83       	std	Z+7, r19	; 0x07
    10ba:	89 85       	ldd	r24, Y+9	; 0x09
    10bc:	9a 85       	ldd	r25, Y+10	; 0x0a
    10be:	29 81       	ldd	r18, Y+1	; 0x01
    10c0:	3a 81       	ldd	r19, Y+2	; 0x02
    10c2:	fc 01       	movw	r30, r24
    10c4:	26 83       	std	Z+6, r18	; 0x06
    10c6:	37 83       	std	Z+7, r19	; 0x07
    10c8:	89 81       	ldd	r24, Y+1	; 0x01
    10ca:	9a 81       	ldd	r25, Y+2	; 0x02
    10cc:	29 85       	ldd	r18, Y+9	; 0x09
    10ce:	3a 85       	ldd	r19, Y+10	; 0x0a
    10d0:	fc 01       	movw	r30, r24
    10d2:	24 83       	std	Z+4, r18	; 0x04
    10d4:	35 83       	std	Z+5, r19	; 0x05
    10d6:	89 85       	ldd	r24, Y+9	; 0x09
    10d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10da:	2f 81       	ldd	r18, Y+7	; 0x07
    10dc:	38 85       	ldd	r19, Y+8	; 0x08
    10de:	fc 01       	movw	r30, r24
    10e0:	22 87       	std	Z+10, r18	; 0x0a
    10e2:	33 87       	std	Z+11, r19	; 0x0b
    10e4:	8f 81       	ldd	r24, Y+7	; 0x07
    10e6:	98 85       	ldd	r25, Y+8	; 0x08
    10e8:	fc 01       	movw	r30, r24
    10ea:	80 81       	ld	r24, Z
    10ec:	21 e0       	ldi	r18, 0x01	; 1
    10ee:	28 0f       	add	r18, r24
    10f0:	8f 81       	ldd	r24, Y+7	; 0x07
    10f2:	98 85       	ldd	r25, Y+8	; 0x08
    10f4:	fc 01       	movw	r30, r24
    10f6:	20 83       	st	Z, r18
    10f8:	00 00       	nop
    10fa:	2a 96       	adiw	r28, 0x0a	; 10
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	de bf       	out	0x3e, r29	; 62
    1100:	df 91       	pop	r29
    1102:	cf 91       	pop	r28
    1104:	08 95       	ret

00001106 <uxListRemove>:
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	00 d0       	rcall	.+0      	; 0x110c <uxListRemove+0x6>
    110c:	1f 92       	push	r1
    110e:	cd b7       	in	r28, 0x3d	; 61
    1110:	de b7       	in	r29, 0x3e	; 62
    1112:	8b 83       	std	Y+3, r24	; 0x03
    1114:	9c 83       	std	Y+4, r25	; 0x04
    1116:	8b 81       	ldd	r24, Y+3	; 0x03
    1118:	9c 81       	ldd	r25, Y+4	; 0x04
    111a:	fc 01       	movw	r30, r24
    111c:	82 85       	ldd	r24, Z+10	; 0x0a
    111e:	93 85       	ldd	r25, Z+11	; 0x0b
    1120:	89 83       	std	Y+1, r24	; 0x01
    1122:	9a 83       	std	Y+2, r25	; 0x02
    1124:	8b 81       	ldd	r24, Y+3	; 0x03
    1126:	9c 81       	ldd	r25, Y+4	; 0x04
    1128:	fc 01       	movw	r30, r24
    112a:	84 81       	ldd	r24, Z+4	; 0x04
    112c:	95 81       	ldd	r25, Z+5	; 0x05
    112e:	2b 81       	ldd	r18, Y+3	; 0x03
    1130:	3c 81       	ldd	r19, Y+4	; 0x04
    1132:	f9 01       	movw	r30, r18
    1134:	26 81       	ldd	r18, Z+6	; 0x06
    1136:	37 81       	ldd	r19, Z+7	; 0x07
    1138:	fc 01       	movw	r30, r24
    113a:	26 83       	std	Z+6, r18	; 0x06
    113c:	37 83       	std	Z+7, r19	; 0x07
    113e:	8b 81       	ldd	r24, Y+3	; 0x03
    1140:	9c 81       	ldd	r25, Y+4	; 0x04
    1142:	fc 01       	movw	r30, r24
    1144:	86 81       	ldd	r24, Z+6	; 0x06
    1146:	97 81       	ldd	r25, Z+7	; 0x07
    1148:	2b 81       	ldd	r18, Y+3	; 0x03
    114a:	3c 81       	ldd	r19, Y+4	; 0x04
    114c:	f9 01       	movw	r30, r18
    114e:	24 81       	ldd	r18, Z+4	; 0x04
    1150:	35 81       	ldd	r19, Z+5	; 0x05
    1152:	fc 01       	movw	r30, r24
    1154:	24 83       	std	Z+4, r18	; 0x04
    1156:	35 83       	std	Z+5, r19	; 0x05
    1158:	89 81       	ldd	r24, Y+1	; 0x01
    115a:	9a 81       	ldd	r25, Y+2	; 0x02
    115c:	fc 01       	movw	r30, r24
    115e:	21 81       	ldd	r18, Z+1	; 0x01
    1160:	32 81       	ldd	r19, Z+2	; 0x02
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	9c 81       	ldd	r25, Y+4	; 0x04
    1166:	28 17       	cp	r18, r24
    1168:	39 07       	cpc	r19, r25
    116a:	51 f4       	brne	.+20     	; 0x1180 <uxListRemove+0x7a>
    116c:	8b 81       	ldd	r24, Y+3	; 0x03
    116e:	9c 81       	ldd	r25, Y+4	; 0x04
    1170:	fc 01       	movw	r30, r24
    1172:	26 81       	ldd	r18, Z+6	; 0x06
    1174:	37 81       	ldd	r19, Z+7	; 0x07
    1176:	89 81       	ldd	r24, Y+1	; 0x01
    1178:	9a 81       	ldd	r25, Y+2	; 0x02
    117a:	fc 01       	movw	r30, r24
    117c:	21 83       	std	Z+1, r18	; 0x01
    117e:	32 83       	std	Z+2, r19	; 0x02
    1180:	8b 81       	ldd	r24, Y+3	; 0x03
    1182:	9c 81       	ldd	r25, Y+4	; 0x04
    1184:	fc 01       	movw	r30, r24
    1186:	12 86       	std	Z+10, r1	; 0x0a
    1188:	13 86       	std	Z+11, r1	; 0x0b
    118a:	89 81       	ldd	r24, Y+1	; 0x01
    118c:	9a 81       	ldd	r25, Y+2	; 0x02
    118e:	fc 01       	movw	r30, r24
    1190:	80 81       	ld	r24, Z
    1192:	2f ef       	ldi	r18, 0xFF	; 255
    1194:	28 0f       	add	r18, r24
    1196:	89 81       	ldd	r24, Y+1	; 0x01
    1198:	9a 81       	ldd	r25, Y+2	; 0x02
    119a:	fc 01       	movw	r30, r24
    119c:	20 83       	st	Z, r18
    119e:	89 81       	ldd	r24, Y+1	; 0x01
    11a0:	9a 81       	ldd	r25, Y+2	; 0x02
    11a2:	fc 01       	movw	r30, r24
    11a4:	80 81       	ld	r24, Z
    11a6:	24 96       	adiw	r28, 0x04	; 4
    11a8:	cd bf       	out	0x3d, r28	; 61
    11aa:	de bf       	out	0x3e, r29	; 62
    11ac:	df 91       	pop	r29
    11ae:	cf 91       	pop	r28
    11b0:	08 95       	ret

000011b2 <_portSetInterruptMaskFromIsr>:
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	cd b7       	in	r28, 0x3d	; 61
    11ba:	de b7       	in	r29, 0x3e	; 62
    11bc:	80 ea       	ldi	r24, 0xA0	; 160
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	fc 01       	movw	r30, r24
    11c2:	12 81       	ldd	r17, Z+2	; 0x02
    11c4:	80 ea       	ldi	r24, 0xA0	; 160
    11c6:	90 e0       	ldi	r25, 0x00	; 0
    11c8:	20 ea       	ldi	r18, 0xA0	; 160
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	f9 01       	movw	r30, r18
    11ce:	22 81       	ldd	r18, Z+2	; 0x02
    11d0:	28 7f       	andi	r18, 0xF8	; 248
    11d2:	fc 01       	movw	r30, r24
    11d4:	22 83       	std	Z+2, r18	; 0x02
    11d6:	81 2f       	mov	r24, r17
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	1f 91       	pop	r17
    11de:	08 95       	ret

000011e0 <pxPortInitialiseStack>:
    11e0:	cf 93       	push	r28
    11e2:	df 93       	push	r29
    11e4:	cd b7       	in	r28, 0x3d	; 61
    11e6:	de b7       	in	r29, 0x3e	; 62
    11e8:	2a 97       	sbiw	r28, 0x0a	; 10
    11ea:	cd bf       	out	0x3d, r28	; 61
    11ec:	de bf       	out	0x3e, r29	; 62
    11ee:	8d 83       	std	Y+5, r24	; 0x05
    11f0:	9e 83       	std	Y+6, r25	; 0x06
    11f2:	6f 83       	std	Y+7, r22	; 0x07
    11f4:	78 87       	std	Y+8, r23	; 0x08
    11f6:	49 87       	std	Y+9, r20	; 0x09
    11f8:	5a 87       	std	Y+10, r21	; 0x0a
    11fa:	8d 81       	ldd	r24, Y+5	; 0x05
    11fc:	9e 81       	ldd	r25, Y+6	; 0x06
    11fe:	21 e1       	ldi	r18, 0x11	; 17
    1200:	fc 01       	movw	r30, r24
    1202:	20 83       	st	Z, r18
    1204:	8d 81       	ldd	r24, Y+5	; 0x05
    1206:	9e 81       	ldd	r25, Y+6	; 0x06
    1208:	01 97       	sbiw	r24, 0x01	; 1
    120a:	8d 83       	std	Y+5, r24	; 0x05
    120c:	9e 83       	std	Y+6, r25	; 0x06
    120e:	8d 81       	ldd	r24, Y+5	; 0x05
    1210:	9e 81       	ldd	r25, Y+6	; 0x06
    1212:	22 e2       	ldi	r18, 0x22	; 34
    1214:	fc 01       	movw	r30, r24
    1216:	20 83       	st	Z, r18
    1218:	8d 81       	ldd	r24, Y+5	; 0x05
    121a:	9e 81       	ldd	r25, Y+6	; 0x06
    121c:	01 97       	sbiw	r24, 0x01	; 1
    121e:	8d 83       	std	Y+5, r24	; 0x05
    1220:	9e 83       	std	Y+6, r25	; 0x06
    1222:	8d 81       	ldd	r24, Y+5	; 0x05
    1224:	9e 81       	ldd	r25, Y+6	; 0x06
    1226:	23 e3       	ldi	r18, 0x33	; 51
    1228:	fc 01       	movw	r30, r24
    122a:	20 83       	st	Z, r18
    122c:	8d 81       	ldd	r24, Y+5	; 0x05
    122e:	9e 81       	ldd	r25, Y+6	; 0x06
    1230:	01 97       	sbiw	r24, 0x01	; 1
    1232:	8d 83       	std	Y+5, r24	; 0x05
    1234:	9e 83       	std	Y+6, r25	; 0x06
    1236:	8f 81       	ldd	r24, Y+7	; 0x07
    1238:	98 85       	ldd	r25, Y+8	; 0x08
    123a:	cc 01       	movw	r24, r24
    123c:	a0 e0       	ldi	r26, 0x00	; 0
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	89 83       	std	Y+1, r24	; 0x01
    1242:	9a 83       	std	Y+2, r25	; 0x02
    1244:	ab 83       	std	Y+3, r26	; 0x03
    1246:	bc 83       	std	Y+4, r27	; 0x04
    1248:	29 81       	ldd	r18, Y+1	; 0x01
    124a:	8d 81       	ldd	r24, Y+5	; 0x05
    124c:	9e 81       	ldd	r25, Y+6	; 0x06
    124e:	fc 01       	movw	r30, r24
    1250:	20 83       	st	Z, r18
    1252:	8d 81       	ldd	r24, Y+5	; 0x05
    1254:	9e 81       	ldd	r25, Y+6	; 0x06
    1256:	01 97       	sbiw	r24, 0x01	; 1
    1258:	8d 83       	std	Y+5, r24	; 0x05
    125a:	9e 83       	std	Y+6, r25	; 0x06
    125c:	89 81       	ldd	r24, Y+1	; 0x01
    125e:	9a 81       	ldd	r25, Y+2	; 0x02
    1260:	ab 81       	ldd	r26, Y+3	; 0x03
    1262:	bc 81       	ldd	r27, Y+4	; 0x04
    1264:	89 2f       	mov	r24, r25
    1266:	9a 2f       	mov	r25, r26
    1268:	ab 2f       	mov	r26, r27
    126a:	bb 27       	eor	r27, r27
    126c:	89 83       	std	Y+1, r24	; 0x01
    126e:	9a 83       	std	Y+2, r25	; 0x02
    1270:	ab 83       	std	Y+3, r26	; 0x03
    1272:	bc 83       	std	Y+4, r27	; 0x04
    1274:	29 81       	ldd	r18, Y+1	; 0x01
    1276:	8d 81       	ldd	r24, Y+5	; 0x05
    1278:	9e 81       	ldd	r25, Y+6	; 0x06
    127a:	fc 01       	movw	r30, r24
    127c:	20 83       	st	Z, r18
    127e:	8d 81       	ldd	r24, Y+5	; 0x05
    1280:	9e 81       	ldd	r25, Y+6	; 0x06
    1282:	01 97       	sbiw	r24, 0x01	; 1
    1284:	8d 83       	std	Y+5, r24	; 0x05
    1286:	9e 83       	std	Y+6, r25	; 0x06
    1288:	89 81       	ldd	r24, Y+1	; 0x01
    128a:	9a 81       	ldd	r25, Y+2	; 0x02
    128c:	ab 81       	ldd	r26, Y+3	; 0x03
    128e:	bc 81       	ldd	r27, Y+4	; 0x04
    1290:	89 2f       	mov	r24, r25
    1292:	9a 2f       	mov	r25, r26
    1294:	ab 2f       	mov	r26, r27
    1296:	bb 27       	eor	r27, r27
    1298:	89 83       	std	Y+1, r24	; 0x01
    129a:	9a 83       	std	Y+2, r25	; 0x02
    129c:	ab 83       	std	Y+3, r26	; 0x03
    129e:	bc 83       	std	Y+4, r27	; 0x04
    12a0:	29 81       	ldd	r18, Y+1	; 0x01
    12a2:	8d 81       	ldd	r24, Y+5	; 0x05
    12a4:	9e 81       	ldd	r25, Y+6	; 0x06
    12a6:	fc 01       	movw	r30, r24
    12a8:	20 83       	st	Z, r18
    12aa:	8d 81       	ldd	r24, Y+5	; 0x05
    12ac:	9e 81       	ldd	r25, Y+6	; 0x06
    12ae:	01 97       	sbiw	r24, 0x01	; 1
    12b0:	8d 83       	std	Y+5, r24	; 0x05
    12b2:	9e 83       	std	Y+6, r25	; 0x06
    12b4:	8d 81       	ldd	r24, Y+5	; 0x05
    12b6:	9e 81       	ldd	r25, Y+6	; 0x06
    12b8:	21 e3       	ldi	r18, 0x31	; 49
    12ba:	fc 01       	movw	r30, r24
    12bc:	20 83       	st	Z, r18
    12be:	8d 81       	ldd	r24, Y+5	; 0x05
    12c0:	9e 81       	ldd	r25, Y+6	; 0x06
    12c2:	01 97       	sbiw	r24, 0x01	; 1
    12c4:	8d 83       	std	Y+5, r24	; 0x05
    12c6:	9e 83       	std	Y+6, r25	; 0x06
    12c8:	8d 81       	ldd	r24, Y+5	; 0x05
    12ca:	9e 81       	ldd	r25, Y+6	; 0x06
    12cc:	20 e8       	ldi	r18, 0x80	; 128
    12ce:	fc 01       	movw	r30, r24
    12d0:	20 83       	st	Z, r18
    12d2:	8d 81       	ldd	r24, Y+5	; 0x05
    12d4:	9e 81       	ldd	r25, Y+6	; 0x06
    12d6:	01 97       	sbiw	r24, 0x01	; 1
    12d8:	8d 83       	std	Y+5, r24	; 0x05
    12da:	9e 83       	std	Y+6, r25	; 0x06
    12dc:	8d 81       	ldd	r24, Y+5	; 0x05
    12de:	9e 81       	ldd	r25, Y+6	; 0x06
    12e0:	27 e8       	ldi	r18, 0x87	; 135
    12e2:	fc 01       	movw	r30, r24
    12e4:	20 83       	st	Z, r18
    12e6:	8d 81       	ldd	r24, Y+5	; 0x05
    12e8:	9e 81       	ldd	r25, Y+6	; 0x06
    12ea:	01 97       	sbiw	r24, 0x01	; 1
    12ec:	8d 83       	std	Y+5, r24	; 0x05
    12ee:	9e 83       	std	Y+6, r25	; 0x06
    12f0:	8d 81       	ldd	r24, Y+5	; 0x05
    12f2:	9e 81       	ldd	r25, Y+6	; 0x06
    12f4:	fc 01       	movw	r30, r24
    12f6:	10 82       	st	Z, r1
    12f8:	8d 81       	ldd	r24, Y+5	; 0x05
    12fa:	9e 81       	ldd	r25, Y+6	; 0x06
    12fc:	01 97       	sbiw	r24, 0x01	; 1
    12fe:	8d 83       	std	Y+5, r24	; 0x05
    1300:	9e 83       	std	Y+6, r25	; 0x06
    1302:	8d 81       	ldd	r24, Y+5	; 0x05
    1304:	9e 81       	ldd	r25, Y+6	; 0x06
    1306:	fc 01       	movw	r30, r24
    1308:	10 82       	st	Z, r1
    130a:	8d 81       	ldd	r24, Y+5	; 0x05
    130c:	9e 81       	ldd	r25, Y+6	; 0x06
    130e:	01 97       	sbiw	r24, 0x01	; 1
    1310:	8d 83       	std	Y+5, r24	; 0x05
    1312:	9e 83       	std	Y+6, r25	; 0x06
    1314:	8d 81       	ldd	r24, Y+5	; 0x05
    1316:	9e 81       	ldd	r25, Y+6	; 0x06
    1318:	22 e0       	ldi	r18, 0x02	; 2
    131a:	fc 01       	movw	r30, r24
    131c:	20 83       	st	Z, r18
    131e:	8d 81       	ldd	r24, Y+5	; 0x05
    1320:	9e 81       	ldd	r25, Y+6	; 0x06
    1322:	01 97       	sbiw	r24, 0x01	; 1
    1324:	8d 83       	std	Y+5, r24	; 0x05
    1326:	9e 83       	std	Y+6, r25	; 0x06
    1328:	8d 81       	ldd	r24, Y+5	; 0x05
    132a:	9e 81       	ldd	r25, Y+6	; 0x06
    132c:	23 e0       	ldi	r18, 0x03	; 3
    132e:	fc 01       	movw	r30, r24
    1330:	20 83       	st	Z, r18
    1332:	8d 81       	ldd	r24, Y+5	; 0x05
    1334:	9e 81       	ldd	r25, Y+6	; 0x06
    1336:	01 97       	sbiw	r24, 0x01	; 1
    1338:	8d 83       	std	Y+5, r24	; 0x05
    133a:	9e 83       	std	Y+6, r25	; 0x06
    133c:	8d 81       	ldd	r24, Y+5	; 0x05
    133e:	9e 81       	ldd	r25, Y+6	; 0x06
    1340:	24 e0       	ldi	r18, 0x04	; 4
    1342:	fc 01       	movw	r30, r24
    1344:	20 83       	st	Z, r18
    1346:	8d 81       	ldd	r24, Y+5	; 0x05
    1348:	9e 81       	ldd	r25, Y+6	; 0x06
    134a:	01 97       	sbiw	r24, 0x01	; 1
    134c:	8d 83       	std	Y+5, r24	; 0x05
    134e:	9e 83       	std	Y+6, r25	; 0x06
    1350:	8d 81       	ldd	r24, Y+5	; 0x05
    1352:	9e 81       	ldd	r25, Y+6	; 0x06
    1354:	25 e0       	ldi	r18, 0x05	; 5
    1356:	fc 01       	movw	r30, r24
    1358:	20 83       	st	Z, r18
    135a:	8d 81       	ldd	r24, Y+5	; 0x05
    135c:	9e 81       	ldd	r25, Y+6	; 0x06
    135e:	01 97       	sbiw	r24, 0x01	; 1
    1360:	8d 83       	std	Y+5, r24	; 0x05
    1362:	9e 83       	std	Y+6, r25	; 0x06
    1364:	8d 81       	ldd	r24, Y+5	; 0x05
    1366:	9e 81       	ldd	r25, Y+6	; 0x06
    1368:	26 e0       	ldi	r18, 0x06	; 6
    136a:	fc 01       	movw	r30, r24
    136c:	20 83       	st	Z, r18
    136e:	8d 81       	ldd	r24, Y+5	; 0x05
    1370:	9e 81       	ldd	r25, Y+6	; 0x06
    1372:	01 97       	sbiw	r24, 0x01	; 1
    1374:	8d 83       	std	Y+5, r24	; 0x05
    1376:	9e 83       	std	Y+6, r25	; 0x06
    1378:	8d 81       	ldd	r24, Y+5	; 0x05
    137a:	9e 81       	ldd	r25, Y+6	; 0x06
    137c:	27 e0       	ldi	r18, 0x07	; 7
    137e:	fc 01       	movw	r30, r24
    1380:	20 83       	st	Z, r18
    1382:	8d 81       	ldd	r24, Y+5	; 0x05
    1384:	9e 81       	ldd	r25, Y+6	; 0x06
    1386:	01 97       	sbiw	r24, 0x01	; 1
    1388:	8d 83       	std	Y+5, r24	; 0x05
    138a:	9e 83       	std	Y+6, r25	; 0x06
    138c:	8d 81       	ldd	r24, Y+5	; 0x05
    138e:	9e 81       	ldd	r25, Y+6	; 0x06
    1390:	28 e0       	ldi	r18, 0x08	; 8
    1392:	fc 01       	movw	r30, r24
    1394:	20 83       	st	Z, r18
    1396:	8d 81       	ldd	r24, Y+5	; 0x05
    1398:	9e 81       	ldd	r25, Y+6	; 0x06
    139a:	01 97       	sbiw	r24, 0x01	; 1
    139c:	8d 83       	std	Y+5, r24	; 0x05
    139e:	9e 83       	std	Y+6, r25	; 0x06
    13a0:	8d 81       	ldd	r24, Y+5	; 0x05
    13a2:	9e 81       	ldd	r25, Y+6	; 0x06
    13a4:	29 e0       	ldi	r18, 0x09	; 9
    13a6:	fc 01       	movw	r30, r24
    13a8:	20 83       	st	Z, r18
    13aa:	8d 81       	ldd	r24, Y+5	; 0x05
    13ac:	9e 81       	ldd	r25, Y+6	; 0x06
    13ae:	01 97       	sbiw	r24, 0x01	; 1
    13b0:	8d 83       	std	Y+5, r24	; 0x05
    13b2:	9e 83       	std	Y+6, r25	; 0x06
    13b4:	8d 81       	ldd	r24, Y+5	; 0x05
    13b6:	9e 81       	ldd	r25, Y+6	; 0x06
    13b8:	20 e1       	ldi	r18, 0x10	; 16
    13ba:	fc 01       	movw	r30, r24
    13bc:	20 83       	st	Z, r18
    13be:	8d 81       	ldd	r24, Y+5	; 0x05
    13c0:	9e 81       	ldd	r25, Y+6	; 0x06
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	8d 83       	std	Y+5, r24	; 0x05
    13c6:	9e 83       	std	Y+6, r25	; 0x06
    13c8:	8d 81       	ldd	r24, Y+5	; 0x05
    13ca:	9e 81       	ldd	r25, Y+6	; 0x06
    13cc:	21 e1       	ldi	r18, 0x11	; 17
    13ce:	fc 01       	movw	r30, r24
    13d0:	20 83       	st	Z, r18
    13d2:	8d 81       	ldd	r24, Y+5	; 0x05
    13d4:	9e 81       	ldd	r25, Y+6	; 0x06
    13d6:	01 97       	sbiw	r24, 0x01	; 1
    13d8:	8d 83       	std	Y+5, r24	; 0x05
    13da:	9e 83       	std	Y+6, r25	; 0x06
    13dc:	8d 81       	ldd	r24, Y+5	; 0x05
    13de:	9e 81       	ldd	r25, Y+6	; 0x06
    13e0:	22 e1       	ldi	r18, 0x12	; 18
    13e2:	fc 01       	movw	r30, r24
    13e4:	20 83       	st	Z, r18
    13e6:	8d 81       	ldd	r24, Y+5	; 0x05
    13e8:	9e 81       	ldd	r25, Y+6	; 0x06
    13ea:	01 97       	sbiw	r24, 0x01	; 1
    13ec:	8d 83       	std	Y+5, r24	; 0x05
    13ee:	9e 83       	std	Y+6, r25	; 0x06
    13f0:	8d 81       	ldd	r24, Y+5	; 0x05
    13f2:	9e 81       	ldd	r25, Y+6	; 0x06
    13f4:	23 e1       	ldi	r18, 0x13	; 19
    13f6:	fc 01       	movw	r30, r24
    13f8:	20 83       	st	Z, r18
    13fa:	8d 81       	ldd	r24, Y+5	; 0x05
    13fc:	9e 81       	ldd	r25, Y+6	; 0x06
    13fe:	01 97       	sbiw	r24, 0x01	; 1
    1400:	8d 83       	std	Y+5, r24	; 0x05
    1402:	9e 83       	std	Y+6, r25	; 0x06
    1404:	8d 81       	ldd	r24, Y+5	; 0x05
    1406:	9e 81       	ldd	r25, Y+6	; 0x06
    1408:	24 e1       	ldi	r18, 0x14	; 20
    140a:	fc 01       	movw	r30, r24
    140c:	20 83       	st	Z, r18
    140e:	8d 81       	ldd	r24, Y+5	; 0x05
    1410:	9e 81       	ldd	r25, Y+6	; 0x06
    1412:	01 97       	sbiw	r24, 0x01	; 1
    1414:	8d 83       	std	Y+5, r24	; 0x05
    1416:	9e 83       	std	Y+6, r25	; 0x06
    1418:	8d 81       	ldd	r24, Y+5	; 0x05
    141a:	9e 81       	ldd	r25, Y+6	; 0x06
    141c:	25 e1       	ldi	r18, 0x15	; 21
    141e:	fc 01       	movw	r30, r24
    1420:	20 83       	st	Z, r18
    1422:	8d 81       	ldd	r24, Y+5	; 0x05
    1424:	9e 81       	ldd	r25, Y+6	; 0x06
    1426:	01 97       	sbiw	r24, 0x01	; 1
    1428:	8d 83       	std	Y+5, r24	; 0x05
    142a:	9e 83       	std	Y+6, r25	; 0x06
    142c:	8d 81       	ldd	r24, Y+5	; 0x05
    142e:	9e 81       	ldd	r25, Y+6	; 0x06
    1430:	26 e1       	ldi	r18, 0x16	; 22
    1432:	fc 01       	movw	r30, r24
    1434:	20 83       	st	Z, r18
    1436:	8d 81       	ldd	r24, Y+5	; 0x05
    1438:	9e 81       	ldd	r25, Y+6	; 0x06
    143a:	01 97       	sbiw	r24, 0x01	; 1
    143c:	8d 83       	std	Y+5, r24	; 0x05
    143e:	9e 83       	std	Y+6, r25	; 0x06
    1440:	8d 81       	ldd	r24, Y+5	; 0x05
    1442:	9e 81       	ldd	r25, Y+6	; 0x06
    1444:	27 e1       	ldi	r18, 0x17	; 23
    1446:	fc 01       	movw	r30, r24
    1448:	20 83       	st	Z, r18
    144a:	8d 81       	ldd	r24, Y+5	; 0x05
    144c:	9e 81       	ldd	r25, Y+6	; 0x06
    144e:	01 97       	sbiw	r24, 0x01	; 1
    1450:	8d 83       	std	Y+5, r24	; 0x05
    1452:	9e 83       	std	Y+6, r25	; 0x06
    1454:	8d 81       	ldd	r24, Y+5	; 0x05
    1456:	9e 81       	ldd	r25, Y+6	; 0x06
    1458:	28 e1       	ldi	r18, 0x18	; 24
    145a:	fc 01       	movw	r30, r24
    145c:	20 83       	st	Z, r18
    145e:	8d 81       	ldd	r24, Y+5	; 0x05
    1460:	9e 81       	ldd	r25, Y+6	; 0x06
    1462:	01 97       	sbiw	r24, 0x01	; 1
    1464:	8d 83       	std	Y+5, r24	; 0x05
    1466:	9e 83       	std	Y+6, r25	; 0x06
    1468:	8d 81       	ldd	r24, Y+5	; 0x05
    146a:	9e 81       	ldd	r25, Y+6	; 0x06
    146c:	29 e1       	ldi	r18, 0x19	; 25
    146e:	fc 01       	movw	r30, r24
    1470:	20 83       	st	Z, r18
    1472:	8d 81       	ldd	r24, Y+5	; 0x05
    1474:	9e 81       	ldd	r25, Y+6	; 0x06
    1476:	01 97       	sbiw	r24, 0x01	; 1
    1478:	8d 83       	std	Y+5, r24	; 0x05
    147a:	9e 83       	std	Y+6, r25	; 0x06
    147c:	8d 81       	ldd	r24, Y+5	; 0x05
    147e:	9e 81       	ldd	r25, Y+6	; 0x06
    1480:	20 e2       	ldi	r18, 0x20	; 32
    1482:	fc 01       	movw	r30, r24
    1484:	20 83       	st	Z, r18
    1486:	8d 81       	ldd	r24, Y+5	; 0x05
    1488:	9e 81       	ldd	r25, Y+6	; 0x06
    148a:	01 97       	sbiw	r24, 0x01	; 1
    148c:	8d 83       	std	Y+5, r24	; 0x05
    148e:	9e 83       	std	Y+6, r25	; 0x06
    1490:	8d 81       	ldd	r24, Y+5	; 0x05
    1492:	9e 81       	ldd	r25, Y+6	; 0x06
    1494:	21 e2       	ldi	r18, 0x21	; 33
    1496:	fc 01       	movw	r30, r24
    1498:	20 83       	st	Z, r18
    149a:	8d 81       	ldd	r24, Y+5	; 0x05
    149c:	9e 81       	ldd	r25, Y+6	; 0x06
    149e:	01 97       	sbiw	r24, 0x01	; 1
    14a0:	8d 83       	std	Y+5, r24	; 0x05
    14a2:	9e 83       	std	Y+6, r25	; 0x06
    14a4:	8d 81       	ldd	r24, Y+5	; 0x05
    14a6:	9e 81       	ldd	r25, Y+6	; 0x06
    14a8:	22 e2       	ldi	r18, 0x22	; 34
    14aa:	fc 01       	movw	r30, r24
    14ac:	20 83       	st	Z, r18
    14ae:	8d 81       	ldd	r24, Y+5	; 0x05
    14b0:	9e 81       	ldd	r25, Y+6	; 0x06
    14b2:	01 97       	sbiw	r24, 0x01	; 1
    14b4:	8d 83       	std	Y+5, r24	; 0x05
    14b6:	9e 83       	std	Y+6, r25	; 0x06
    14b8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ba:	9e 81       	ldd	r25, Y+6	; 0x06
    14bc:	23 e2       	ldi	r18, 0x23	; 35
    14be:	fc 01       	movw	r30, r24
    14c0:	20 83       	st	Z, r18
    14c2:	8d 81       	ldd	r24, Y+5	; 0x05
    14c4:	9e 81       	ldd	r25, Y+6	; 0x06
    14c6:	01 97       	sbiw	r24, 0x01	; 1
    14c8:	8d 83       	std	Y+5, r24	; 0x05
    14ca:	9e 83       	std	Y+6, r25	; 0x06
    14cc:	89 85       	ldd	r24, Y+9	; 0x09
    14ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    14d0:	cc 01       	movw	r24, r24
    14d2:	a0 e0       	ldi	r26, 0x00	; 0
    14d4:	b0 e0       	ldi	r27, 0x00	; 0
    14d6:	89 83       	std	Y+1, r24	; 0x01
    14d8:	9a 83       	std	Y+2, r25	; 0x02
    14da:	ab 83       	std	Y+3, r26	; 0x03
    14dc:	bc 83       	std	Y+4, r27	; 0x04
    14de:	29 81       	ldd	r18, Y+1	; 0x01
    14e0:	8d 81       	ldd	r24, Y+5	; 0x05
    14e2:	9e 81       	ldd	r25, Y+6	; 0x06
    14e4:	fc 01       	movw	r30, r24
    14e6:	20 83       	st	Z, r18
    14e8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ea:	9e 81       	ldd	r25, Y+6	; 0x06
    14ec:	01 97       	sbiw	r24, 0x01	; 1
    14ee:	8d 83       	std	Y+5, r24	; 0x05
    14f0:	9e 83       	std	Y+6, r25	; 0x06
    14f2:	89 81       	ldd	r24, Y+1	; 0x01
    14f4:	9a 81       	ldd	r25, Y+2	; 0x02
    14f6:	ab 81       	ldd	r26, Y+3	; 0x03
    14f8:	bc 81       	ldd	r27, Y+4	; 0x04
    14fa:	89 2f       	mov	r24, r25
    14fc:	9a 2f       	mov	r25, r26
    14fe:	ab 2f       	mov	r26, r27
    1500:	bb 27       	eor	r27, r27
    1502:	89 83       	std	Y+1, r24	; 0x01
    1504:	9a 83       	std	Y+2, r25	; 0x02
    1506:	ab 83       	std	Y+3, r26	; 0x03
    1508:	bc 83       	std	Y+4, r27	; 0x04
    150a:	29 81       	ldd	r18, Y+1	; 0x01
    150c:	8d 81       	ldd	r24, Y+5	; 0x05
    150e:	9e 81       	ldd	r25, Y+6	; 0x06
    1510:	fc 01       	movw	r30, r24
    1512:	20 83       	st	Z, r18
    1514:	8d 81       	ldd	r24, Y+5	; 0x05
    1516:	9e 81       	ldd	r25, Y+6	; 0x06
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	8d 83       	std	Y+5, r24	; 0x05
    151c:	9e 83       	std	Y+6, r25	; 0x06
    151e:	8d 81       	ldd	r24, Y+5	; 0x05
    1520:	9e 81       	ldd	r25, Y+6	; 0x06
    1522:	26 e2       	ldi	r18, 0x26	; 38
    1524:	fc 01       	movw	r30, r24
    1526:	20 83       	st	Z, r18
    1528:	8d 81       	ldd	r24, Y+5	; 0x05
    152a:	9e 81       	ldd	r25, Y+6	; 0x06
    152c:	01 97       	sbiw	r24, 0x01	; 1
    152e:	8d 83       	std	Y+5, r24	; 0x05
    1530:	9e 83       	std	Y+6, r25	; 0x06
    1532:	8d 81       	ldd	r24, Y+5	; 0x05
    1534:	9e 81       	ldd	r25, Y+6	; 0x06
    1536:	27 e2       	ldi	r18, 0x27	; 39
    1538:	fc 01       	movw	r30, r24
    153a:	20 83       	st	Z, r18
    153c:	8d 81       	ldd	r24, Y+5	; 0x05
    153e:	9e 81       	ldd	r25, Y+6	; 0x06
    1540:	01 97       	sbiw	r24, 0x01	; 1
    1542:	8d 83       	std	Y+5, r24	; 0x05
    1544:	9e 83       	std	Y+6, r25	; 0x06
    1546:	8d 81       	ldd	r24, Y+5	; 0x05
    1548:	9e 81       	ldd	r25, Y+6	; 0x06
    154a:	28 e2       	ldi	r18, 0x28	; 40
    154c:	fc 01       	movw	r30, r24
    154e:	20 83       	st	Z, r18
    1550:	8d 81       	ldd	r24, Y+5	; 0x05
    1552:	9e 81       	ldd	r25, Y+6	; 0x06
    1554:	01 97       	sbiw	r24, 0x01	; 1
    1556:	8d 83       	std	Y+5, r24	; 0x05
    1558:	9e 83       	std	Y+6, r25	; 0x06
    155a:	8d 81       	ldd	r24, Y+5	; 0x05
    155c:	9e 81       	ldd	r25, Y+6	; 0x06
    155e:	29 e2       	ldi	r18, 0x29	; 41
    1560:	fc 01       	movw	r30, r24
    1562:	20 83       	st	Z, r18
    1564:	8d 81       	ldd	r24, Y+5	; 0x05
    1566:	9e 81       	ldd	r25, Y+6	; 0x06
    1568:	01 97       	sbiw	r24, 0x01	; 1
    156a:	8d 83       	std	Y+5, r24	; 0x05
    156c:	9e 83       	std	Y+6, r25	; 0x06
    156e:	8d 81       	ldd	r24, Y+5	; 0x05
    1570:	9e 81       	ldd	r25, Y+6	; 0x06
    1572:	20 e3       	ldi	r18, 0x30	; 48
    1574:	fc 01       	movw	r30, r24
    1576:	20 83       	st	Z, r18
    1578:	8d 81       	ldd	r24, Y+5	; 0x05
    157a:	9e 81       	ldd	r25, Y+6	; 0x06
    157c:	01 97       	sbiw	r24, 0x01	; 1
    157e:	8d 83       	std	Y+5, r24	; 0x05
    1580:	9e 83       	std	Y+6, r25	; 0x06
    1582:	8d 81       	ldd	r24, Y+5	; 0x05
    1584:	9e 81       	ldd	r25, Y+6	; 0x06
    1586:	2a 96       	adiw	r28, 0x0a	; 10
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	de bf       	out	0x3e, r29	; 62
    158c:	df 91       	pop	r29
    158e:	cf 91       	pop	r28
    1590:	08 95       	ret

00001592 <xPortStartScheduler>:
    1592:	cf 93       	push	r28
    1594:	df 93       	push	r29
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	0e 94 10 0c 	call	0x1820	; 0x1820 <prvSetupTimerInterrupt>
    159e:	a0 91 82 2c 	lds	r26, 0x2C82	; 0x802c82 <pxCurrentTCB>
    15a2:	b0 91 83 2c 	lds	r27, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    15a6:	0d 90       	ld	r0, X+
    15a8:	0d be       	out	0x3d, r0	; 61
    15aa:	0d 90       	ld	r0, X+
    15ac:	0e be       	out	0x3e, r0	; 62
    15ae:	ef 91       	pop	r30
    15b0:	df 91       	pop	r29
    15b2:	cf 91       	pop	r28
    15b4:	bf 91       	pop	r27
    15b6:	af 91       	pop	r26
    15b8:	9f 91       	pop	r25
    15ba:	8f 91       	pop	r24
    15bc:	7f 91       	pop	r23
    15be:	6f 91       	pop	r22
    15c0:	5f 91       	pop	r21
    15c2:	4f 91       	pop	r20
    15c4:	3f 91       	pop	r19
    15c6:	2f 91       	pop	r18
    15c8:	1f 91       	pop	r17
    15ca:	0f 91       	pop	r16
    15cc:	ff 90       	pop	r15
    15ce:	ef 90       	pop	r14
    15d0:	df 90       	pop	r13
    15d2:	cf 90       	pop	r12
    15d4:	bf 90       	pop	r11
    15d6:	af 90       	pop	r10
    15d8:	9f 90       	pop	r9
    15da:	8f 90       	pop	r8
    15dc:	7f 90       	pop	r7
    15de:	6f 90       	pop	r6
    15e0:	5f 90       	pop	r5
    15e2:	4f 90       	pop	r4
    15e4:	3f 90       	pop	r3
    15e6:	2f 90       	pop	r2
    15e8:	1f 90       	pop	r1
    15ea:	0f 90       	pop	r0
    15ec:	ff 91       	pop	r31
    15ee:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    15f2:	ff 91       	pop	r31
    15f4:	ff bf       	out	0x3f, r31	; 63
    15f6:	ff 91       	pop	r31
    15f8:	08 95       	ret
    15fa:	81 e0       	ldi	r24, 0x01	; 1
    15fc:	df 91       	pop	r29
    15fe:	cf 91       	pop	r28
    1600:	08 95       	ret

00001602 <vPortYield>:
    1602:	ff 93       	push	r31
    1604:	ff b7       	in	r31, 0x3f	; 63
    1606:	ff 93       	push	r31
    1608:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    160c:	ff 93       	push	r31
    160e:	f8 7f       	andi	r31, 0xF8	; 248
    1610:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1614:	0f 92       	push	r0
    1616:	1f 92       	push	r1
    1618:	11 24       	eor	r1, r1
    161a:	2f 92       	push	r2
    161c:	3f 92       	push	r3
    161e:	4f 92       	push	r4
    1620:	5f 92       	push	r5
    1622:	6f 92       	push	r6
    1624:	7f 92       	push	r7
    1626:	8f 92       	push	r8
    1628:	9f 92       	push	r9
    162a:	af 92       	push	r10
    162c:	bf 92       	push	r11
    162e:	cf 92       	push	r12
    1630:	df 92       	push	r13
    1632:	ef 92       	push	r14
    1634:	ff 92       	push	r15
    1636:	0f 93       	push	r16
    1638:	1f 93       	push	r17
    163a:	2f 93       	push	r18
    163c:	3f 93       	push	r19
    163e:	4f 93       	push	r20
    1640:	5f 93       	push	r21
    1642:	6f 93       	push	r22
    1644:	7f 93       	push	r23
    1646:	8f 93       	push	r24
    1648:	9f 93       	push	r25
    164a:	af 93       	push	r26
    164c:	bf 93       	push	r27
    164e:	cf 93       	push	r28
    1650:	df 93       	push	r29
    1652:	ef 93       	push	r30
    1654:	a0 91 82 2c 	lds	r26, 0x2C82	; 0x802c82 <pxCurrentTCB>
    1658:	b0 91 83 2c 	lds	r27, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    165c:	0d b6       	in	r0, 0x3d	; 61
    165e:	0d 92       	st	X+, r0
    1660:	0e b6       	in	r0, 0x3e	; 62
    1662:	0d 92       	st	X+, r0
    1664:	0e 94 90 15 	call	0x2b20	; 0x2b20 <vTaskSwitchContext>
    1668:	a0 91 82 2c 	lds	r26, 0x2C82	; 0x802c82 <pxCurrentTCB>
    166c:	b0 91 83 2c 	lds	r27, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    1670:	0d 90       	ld	r0, X+
    1672:	0d be       	out	0x3d, r0	; 61
    1674:	0d 90       	ld	r0, X+
    1676:	0e be       	out	0x3e, r0	; 62
    1678:	ef 91       	pop	r30
    167a:	df 91       	pop	r29
    167c:	cf 91       	pop	r28
    167e:	bf 91       	pop	r27
    1680:	af 91       	pop	r26
    1682:	9f 91       	pop	r25
    1684:	8f 91       	pop	r24
    1686:	7f 91       	pop	r23
    1688:	6f 91       	pop	r22
    168a:	5f 91       	pop	r21
    168c:	4f 91       	pop	r20
    168e:	3f 91       	pop	r19
    1690:	2f 91       	pop	r18
    1692:	1f 91       	pop	r17
    1694:	0f 91       	pop	r16
    1696:	ff 90       	pop	r15
    1698:	ef 90       	pop	r14
    169a:	df 90       	pop	r13
    169c:	cf 90       	pop	r12
    169e:	bf 90       	pop	r11
    16a0:	af 90       	pop	r10
    16a2:	9f 90       	pop	r9
    16a4:	8f 90       	pop	r8
    16a6:	7f 90       	pop	r7
    16a8:	6f 90       	pop	r6
    16aa:	5f 90       	pop	r5
    16ac:	4f 90       	pop	r4
    16ae:	3f 90       	pop	r3
    16b0:	2f 90       	pop	r2
    16b2:	1f 90       	pop	r1
    16b4:	0f 90       	pop	r0
    16b6:	ff 91       	pop	r31
    16b8:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    16bc:	ff 91       	pop	r31
    16be:	ff bf       	out	0x3f, r31	; 63
    16c0:	ff 91       	pop	r31
    16c2:	08 95       	ret
	...

000016c6 <portTaskSwitchContext>:
    16c6:	1f 93       	push	r17
    16c8:	cf 93       	push	r28
    16ca:	df 93       	push	r29
    16cc:	1f 92       	push	r1
    16ce:	cd b7       	in	r28, 0x3d	; 61
    16d0:	de b7       	in	r29, 0x3e	; 62
    16d2:	89 83       	std	Y+1, r24	; 0x01
    16d4:	80 91 49 2d 	lds	r24, 0x2D49	; 0x802d49 <intTaskSwitchPending>
    16d8:	98 2f       	mov	r25, r24
    16da:	89 81       	ldd	r24, Y+1	; 0x01
    16dc:	89 2b       	or	r24, r25
    16de:	80 93 49 2d 	sts	0x2D49, r24	; 0x802d49 <intTaskSwitchPending>
    16e2:	80 ea       	ldi	r24, 0xA0	; 160
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	fc 01       	movw	r30, r24
    16e8:	80 81       	ld	r24, Z
    16ea:	81 30       	cpi	r24, 0x01	; 1
    16ec:	61 f0       	breq	.+24     	; 0x1706 <portTaskSwitchContext+0x40>
    16ee:	80 ea       	ldi	r24, 0xA0	; 160
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	fc 01       	movw	r30, r24
    16f4:	80 81       	ld	r24, Z
    16f6:	82 30       	cpi	r24, 0x02	; 2
    16f8:	31 f0       	breq	.+12     	; 0x1706 <portTaskSwitchContext+0x40>
    16fa:	80 ea       	ldi	r24, 0xA0	; 160
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	fc 01       	movw	r30, r24
    1700:	80 81       	ld	r24, Z
    1702:	84 30       	cpi	r24, 0x04	; 4
    1704:	79 f4       	brne	.+30     	; 0x1724 <portTaskSwitchContext+0x5e>
    1706:	80 91 49 2d 	lds	r24, 0x2D49	; 0x802d49 <intTaskSwitchPending>
    170a:	88 23       	and	r24, r24
    170c:	59 f0       	breq	.+22     	; 0x1724 <portTaskSwitchContext+0x5e>
    170e:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_portSetInterruptMaskFromIsr>
    1712:	18 2f       	mov	r17, r24
    1714:	10 92 49 2d 	sts	0x2D49, r1	; 0x802d49 <intTaskSwitchPending>
    1718:	0e 94 90 15 	call	0x2b20	; 0x2b20 <vTaskSwitchContext>
    171c:	80 ea       	ldi	r24, 0xA0	; 160
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	fc 01       	movw	r30, r24
    1722:	12 83       	std	Z+2, r17	; 0x02
    1724:	00 00       	nop
    1726:	0f 90       	pop	r0
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	08 95       	ret

00001730 <portTaskIncrementTick>:
    1730:	1f 93       	push	r17
    1732:	cf 93       	push	r28
    1734:	df 93       	push	r29
    1736:	cd b7       	in	r28, 0x3d	; 61
    1738:	de b7       	in	r29, 0x3e	; 62
    173a:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_portSetInterruptMaskFromIsr>
    173e:	18 2f       	mov	r17, r24
    1740:	0e 94 80 14 	call	0x2900	; 0x2900 <xTaskIncrementTick>
    1744:	80 ea       	ldi	r24, 0xA0	; 160
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	fc 01       	movw	r30, r24
    174a:	12 83       	std	Z+2, r17	; 0x02
    174c:	00 00       	nop
    174e:	df 91       	pop	r29
    1750:	cf 91       	pop	r28
    1752:	1f 91       	pop	r17
    1754:	08 95       	ret

00001756 <__vector_14>:
    1756:	ff 93       	push	r31
    1758:	ff b7       	in	r31, 0x3f	; 63
    175a:	ff 93       	push	r31
    175c:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1760:	ff 93       	push	r31
    1762:	f8 7f       	andi	r31, 0xF8	; 248
    1764:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1768:	0f 92       	push	r0
    176a:	1f 92       	push	r1
    176c:	11 24       	eor	r1, r1
    176e:	2f 92       	push	r2
    1770:	3f 92       	push	r3
    1772:	4f 92       	push	r4
    1774:	5f 92       	push	r5
    1776:	6f 92       	push	r6
    1778:	7f 92       	push	r7
    177a:	8f 92       	push	r8
    177c:	9f 92       	push	r9
    177e:	af 92       	push	r10
    1780:	bf 92       	push	r11
    1782:	cf 92       	push	r12
    1784:	df 92       	push	r13
    1786:	ef 92       	push	r14
    1788:	ff 92       	push	r15
    178a:	0f 93       	push	r16
    178c:	1f 93       	push	r17
    178e:	2f 93       	push	r18
    1790:	3f 93       	push	r19
    1792:	4f 93       	push	r20
    1794:	5f 93       	push	r21
    1796:	6f 93       	push	r22
    1798:	7f 93       	push	r23
    179a:	8f 93       	push	r24
    179c:	9f 93       	push	r25
    179e:	af 93       	push	r26
    17a0:	bf 93       	push	r27
    17a2:	cf 93       	push	r28
    17a4:	df 93       	push	r29
    17a6:	ef 93       	push	r30
    17a8:	a0 91 82 2c 	lds	r26, 0x2C82	; 0x802c82 <pxCurrentTCB>
    17ac:	b0 91 83 2c 	lds	r27, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    17b0:	0d b6       	in	r0, 0x3d	; 61
    17b2:	0d 92       	st	X+, r0
    17b4:	0e b6       	in	r0, 0x3e	; 62
    17b6:	0d 92       	st	X+, r0
    17b8:	0e 94 98 0b 	call	0x1730	; 0x1730 <portTaskIncrementTick>
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <portTaskSwitchContext>
    17c2:	a0 91 82 2c 	lds	r26, 0x2C82	; 0x802c82 <pxCurrentTCB>
    17c6:	b0 91 83 2c 	lds	r27, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    17ca:	0d 90       	ld	r0, X+
    17cc:	0d be       	out	0x3d, r0	; 61
    17ce:	0d 90       	ld	r0, X+
    17d0:	0e be       	out	0x3e, r0	; 62
    17d2:	ef 91       	pop	r30
    17d4:	df 91       	pop	r29
    17d6:	cf 91       	pop	r28
    17d8:	bf 91       	pop	r27
    17da:	af 91       	pop	r26
    17dc:	9f 91       	pop	r25
    17de:	8f 91       	pop	r24
    17e0:	7f 91       	pop	r23
    17e2:	6f 91       	pop	r22
    17e4:	5f 91       	pop	r21
    17e6:	4f 91       	pop	r20
    17e8:	3f 91       	pop	r19
    17ea:	2f 91       	pop	r18
    17ec:	1f 91       	pop	r17
    17ee:	0f 91       	pop	r16
    17f0:	ff 90       	pop	r15
    17f2:	ef 90       	pop	r14
    17f4:	df 90       	pop	r13
    17f6:	cf 90       	pop	r12
    17f8:	bf 90       	pop	r11
    17fa:	af 90       	pop	r10
    17fc:	9f 90       	pop	r9
    17fe:	8f 90       	pop	r8
    1800:	7f 90       	pop	r7
    1802:	6f 90       	pop	r6
    1804:	5f 90       	pop	r5
    1806:	4f 90       	pop	r4
    1808:	3f 90       	pop	r3
    180a:	2f 90       	pop	r2
    180c:	1f 90       	pop	r1
    180e:	0f 90       	pop	r0
    1810:	ff 91       	pop	r31
    1812:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1816:	ff 91       	pop	r31
    1818:	ff bf       	out	0x3f, r31	; 63
    181a:	ff 91       	pop	r31
    181c:	18 95       	reti
	...

00001820 <prvSetupTimerInterrupt>:
    1820:	cf 93       	push	r28
    1822:	df 93       	push	r29
    1824:	00 d0       	rcall	.+0      	; 0x1826 <prvSetupTimerInterrupt+0x6>
    1826:	1f 92       	push	r1
    1828:	cd b7       	in	r28, 0x3d	; 61
    182a:	de b7       	in	r29, 0x3e	; 62
    182c:	80 e0       	ldi	r24, 0x00	; 0
    182e:	9d e7       	ldi	r25, 0x7D	; 125
    1830:	a0 e0       	ldi	r26, 0x00	; 0
    1832:	b0 e0       	ldi	r27, 0x00	; 0
    1834:	89 83       	std	Y+1, r24	; 0x01
    1836:	9a 83       	std	Y+2, r25	; 0x02
    1838:	ab 83       	std	Y+3, r26	; 0x03
    183a:	bc 83       	std	Y+4, r27	; 0x04
    183c:	89 81       	ldd	r24, Y+1	; 0x01
    183e:	9a 81       	ldd	r25, Y+2	; 0x02
    1840:	ab 81       	ldd	r26, Y+3	; 0x03
    1842:	bc 81       	ldd	r27, Y+4	; 0x04
    1844:	68 94       	set
    1846:	15 f8       	bld	r1, 5
    1848:	b6 95       	lsr	r27
    184a:	a7 95       	ror	r26
    184c:	97 95       	ror	r25
    184e:	87 95       	ror	r24
    1850:	16 94       	lsr	r1
    1852:	d1 f7       	brne	.-12     	; 0x1848 <prvSetupTimerInterrupt+0x28>
    1854:	89 83       	std	Y+1, r24	; 0x01
    1856:	9a 83       	std	Y+2, r25	; 0x02
    1858:	ab 83       	std	Y+3, r26	; 0x03
    185a:	bc 83       	std	Y+4, r27	; 0x04
    185c:	89 81       	ldd	r24, Y+1	; 0x01
    185e:	9a 81       	ldd	r25, Y+2	; 0x02
    1860:	ab 81       	ldd	r26, Y+3	; 0x03
    1862:	bc 81       	ldd	r27, Y+4	; 0x04
    1864:	01 97       	sbiw	r24, 0x01	; 1
    1866:	a1 09       	sbc	r26, r1
    1868:	b1 09       	sbc	r27, r1
    186a:	89 83       	std	Y+1, r24	; 0x01
    186c:	9a 83       	std	Y+2, r25	; 0x02
    186e:	ab 83       	std	Y+3, r26	; 0x03
    1870:	bc 83       	std	Y+4, r27	; 0x04
    1872:	80 e0       	ldi	r24, 0x00	; 0
    1874:	98 e0       	ldi	r25, 0x08	; 8
    1876:	29 81       	ldd	r18, Y+1	; 0x01
    1878:	3a 81       	ldd	r19, Y+2	; 0x02
    187a:	fc 01       	movw	r30, r24
    187c:	26 a3       	std	Z+38, r18	; 0x26
    187e:	37 a3       	std	Z+39, r19	; 0x27
    1880:	65 e0       	ldi	r22, 0x05	; 5
    1882:	80 e0       	ldi	r24, 0x00	; 0
    1884:	98 e0       	ldi	r25, 0x08	; 8
    1886:	0e 94 3d 03 	call	0x67a	; 0x67a <TC0_ConfigClockSource>
    188a:	61 e0       	ldi	r22, 0x01	; 1
    188c:	80 e0       	ldi	r24, 0x00	; 0
    188e:	98 e0       	ldi	r25, 0x08	; 8
    1890:	0e 94 75 03 	call	0x6ea	; 0x6ea <TC0_SetOverflowIntLevel>
    1894:	00 00       	nop
    1896:	24 96       	adiw	r28, 0x04	; 4
    1898:	cd bf       	out	0x3d, r28	; 61
    189a:	de bf       	out	0x3e, r29	; 62
    189c:	df 91       	pop	r29
    189e:	cf 91       	pop	r28
    18a0:	08 95       	ret

000018a2 <xQueueGenericReset>:
    18a2:	cf 93       	push	r28
    18a4:	df 93       	push	r29
    18a6:	cd b7       	in	r28, 0x3d	; 61
    18a8:	de b7       	in	r29, 0x3e	; 62
    18aa:	25 97       	sbiw	r28, 0x05	; 5
    18ac:	cd bf       	out	0x3d, r28	; 61
    18ae:	de bf       	out	0x3e, r29	; 62
    18b0:	8b 83       	std	Y+3, r24	; 0x03
    18b2:	9c 83       	std	Y+4, r25	; 0x04
    18b4:	6d 83       	std	Y+5, r22	; 0x05
    18b6:	8b 81       	ldd	r24, Y+3	; 0x03
    18b8:	9c 81       	ldd	r25, Y+4	; 0x04
    18ba:	89 83       	std	Y+1, r24	; 0x01
    18bc:	9a 83       	std	Y+2, r25	; 0x02
    18be:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    18c2:	ff 93       	push	r31
    18c4:	f8 7f       	andi	r31, 0xF8	; 248
    18c6:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    18ca:	89 81       	ldd	r24, Y+1	; 0x01
    18cc:	9a 81       	ldd	r25, Y+2	; 0x02
    18ce:	fc 01       	movw	r30, r24
    18d0:	80 81       	ld	r24, Z
    18d2:	91 81       	ldd	r25, Z+1	; 0x01
    18d4:	29 81       	ldd	r18, Y+1	; 0x01
    18d6:	3a 81       	ldd	r19, Y+2	; 0x02
    18d8:	f9 01       	movw	r30, r18
    18da:	27 8d       	ldd	r18, Z+31	; 0x1f
    18dc:	42 2f       	mov	r20, r18
    18de:	50 e0       	ldi	r21, 0x00	; 0
    18e0:	29 81       	ldd	r18, Y+1	; 0x01
    18e2:	3a 81       	ldd	r19, Y+2	; 0x02
    18e4:	f9 01       	movw	r30, r18
    18e6:	20 a1       	ldd	r18, Z+32	; 0x20
    18e8:	22 2f       	mov	r18, r18
    18ea:	30 e0       	ldi	r19, 0x00	; 0
    18ec:	42 9f       	mul	r20, r18
    18ee:	b0 01       	movw	r22, r0
    18f0:	43 9f       	mul	r20, r19
    18f2:	70 0d       	add	r23, r0
    18f4:	52 9f       	mul	r21, r18
    18f6:	70 0d       	add	r23, r0
    18f8:	11 24       	eor	r1, r1
    18fa:	9b 01       	movw	r18, r22
    18fc:	28 0f       	add	r18, r24
    18fe:	39 1f       	adc	r19, r25
    1900:	89 81       	ldd	r24, Y+1	; 0x01
    1902:	9a 81       	ldd	r25, Y+2	; 0x02
    1904:	fc 01       	movw	r30, r24
    1906:	22 83       	std	Z+2, r18	; 0x02
    1908:	33 83       	std	Z+3, r19	; 0x03
    190a:	89 81       	ldd	r24, Y+1	; 0x01
    190c:	9a 81       	ldd	r25, Y+2	; 0x02
    190e:	fc 01       	movw	r30, r24
    1910:	16 8e       	std	Z+30, r1	; 0x1e
    1912:	89 81       	ldd	r24, Y+1	; 0x01
    1914:	9a 81       	ldd	r25, Y+2	; 0x02
    1916:	fc 01       	movw	r30, r24
    1918:	20 81       	ld	r18, Z
    191a:	31 81       	ldd	r19, Z+1	; 0x01
    191c:	89 81       	ldd	r24, Y+1	; 0x01
    191e:	9a 81       	ldd	r25, Y+2	; 0x02
    1920:	fc 01       	movw	r30, r24
    1922:	24 83       	std	Z+4, r18	; 0x04
    1924:	35 83       	std	Z+5, r19	; 0x05
    1926:	89 81       	ldd	r24, Y+1	; 0x01
    1928:	9a 81       	ldd	r25, Y+2	; 0x02
    192a:	fc 01       	movw	r30, r24
    192c:	80 81       	ld	r24, Z
    192e:	91 81       	ldd	r25, Z+1	; 0x01
    1930:	29 81       	ldd	r18, Y+1	; 0x01
    1932:	3a 81       	ldd	r19, Y+2	; 0x02
    1934:	f9 01       	movw	r30, r18
    1936:	27 8d       	ldd	r18, Z+31	; 0x1f
    1938:	22 2f       	mov	r18, r18
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	a9 01       	movw	r20, r18
    193e:	41 50       	subi	r20, 0x01	; 1
    1940:	51 09       	sbc	r21, r1
    1942:	29 81       	ldd	r18, Y+1	; 0x01
    1944:	3a 81       	ldd	r19, Y+2	; 0x02
    1946:	f9 01       	movw	r30, r18
    1948:	20 a1       	ldd	r18, Z+32	; 0x20
    194a:	22 2f       	mov	r18, r18
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	42 9f       	mul	r20, r18
    1950:	b0 01       	movw	r22, r0
    1952:	43 9f       	mul	r20, r19
    1954:	70 0d       	add	r23, r0
    1956:	52 9f       	mul	r21, r18
    1958:	70 0d       	add	r23, r0
    195a:	11 24       	eor	r1, r1
    195c:	9b 01       	movw	r18, r22
    195e:	28 0f       	add	r18, r24
    1960:	39 1f       	adc	r19, r25
    1962:	89 81       	ldd	r24, Y+1	; 0x01
    1964:	9a 81       	ldd	r25, Y+2	; 0x02
    1966:	fc 01       	movw	r30, r24
    1968:	26 83       	std	Z+6, r18	; 0x06
    196a:	37 83       	std	Z+7, r19	; 0x07
    196c:	89 81       	ldd	r24, Y+1	; 0x01
    196e:	9a 81       	ldd	r25, Y+2	; 0x02
    1970:	2f ef       	ldi	r18, 0xFF	; 255
    1972:	fc 01       	movw	r30, r24
    1974:	21 a3       	std	Z+33, r18	; 0x21
    1976:	89 81       	ldd	r24, Y+1	; 0x01
    1978:	9a 81       	ldd	r25, Y+2	; 0x02
    197a:	2f ef       	ldi	r18, 0xFF	; 255
    197c:	fc 01       	movw	r30, r24
    197e:	22 a3       	std	Z+34, r18	; 0x22
    1980:	8d 81       	ldd	r24, Y+5	; 0x05
    1982:	88 23       	and	r24, r24
    1984:	81 f4       	brne	.+32     	; 0x19a6 <xQueueGenericReset+0x104>
    1986:	89 81       	ldd	r24, Y+1	; 0x01
    1988:	9a 81       	ldd	r25, Y+2	; 0x02
    198a:	fc 01       	movw	r30, r24
    198c:	80 85       	ldd	r24, Z+8	; 0x08
    198e:	88 23       	and	r24, r24
    1990:	a1 f0       	breq	.+40     	; 0x19ba <xQueueGenericReset+0x118>
    1992:	89 81       	ldd	r24, Y+1	; 0x01
    1994:	9a 81       	ldd	r25, Y+2	; 0x02
    1996:	08 96       	adiw	r24, 0x08	; 8
    1998:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <xTaskRemoveFromEventList>
    199c:	88 23       	and	r24, r24
    199e:	69 f0       	breq	.+26     	; 0x19ba <xQueueGenericReset+0x118>
    19a0:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    19a4:	0a c0       	rjmp	.+20     	; 0x19ba <xQueueGenericReset+0x118>
    19a6:	89 81       	ldd	r24, Y+1	; 0x01
    19a8:	9a 81       	ldd	r25, Y+2	; 0x02
    19aa:	08 96       	adiw	r24, 0x08	; 8
    19ac:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    19b0:	89 81       	ldd	r24, Y+1	; 0x01
    19b2:	9a 81       	ldd	r25, Y+2	; 0x02
    19b4:	43 96       	adiw	r24, 0x13	; 19
    19b6:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    19ba:	ff 91       	pop	r31
    19bc:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    19c0:	81 e0       	ldi	r24, 0x01	; 1
    19c2:	25 96       	adiw	r28, 0x05	; 5
    19c4:	cd bf       	out	0x3d, r28	; 61
    19c6:	de bf       	out	0x3e, r29	; 62
    19c8:	df 91       	pop	r29
    19ca:	cf 91       	pop	r28
    19cc:	08 95       	ret

000019ce <xQueueGenericCreate>:
    19ce:	0f 93       	push	r16
    19d0:	1f 93       	push	r17
    19d2:	cf 93       	push	r28
    19d4:	df 93       	push	r29
    19d6:	cd b7       	in	r28, 0x3d	; 61
    19d8:	de b7       	in	r29, 0x3e	; 62
    19da:	29 97       	sbiw	r28, 0x09	; 9
    19dc:	cd bf       	out	0x3d, r28	; 61
    19de:	de bf       	out	0x3e, r29	; 62
    19e0:	8f 83       	std	Y+7, r24	; 0x07
    19e2:	68 87       	std	Y+8, r22	; 0x08
    19e4:	49 87       	std	Y+9, r20	; 0x09
    19e6:	88 85       	ldd	r24, Y+8	; 0x08
    19e8:	88 23       	and	r24, r24
    19ea:	19 f4       	brne	.+6      	; 0x19f2 <xQueueGenericCreate+0x24>
    19ec:	19 82       	std	Y+1, r1	; 0x01
    19ee:	1a 82       	std	Y+2, r1	; 0x02
    19f0:	0f c0       	rjmp	.+30     	; 0x1a10 <xQueueGenericCreate+0x42>
    19f2:	8f 81       	ldd	r24, Y+7	; 0x07
    19f4:	48 2f       	mov	r20, r24
    19f6:	50 e0       	ldi	r21, 0x00	; 0
    19f8:	88 85       	ldd	r24, Y+8	; 0x08
    19fa:	28 2f       	mov	r18, r24
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	42 9f       	mul	r20, r18
    1a00:	c0 01       	movw	r24, r0
    1a02:	43 9f       	mul	r20, r19
    1a04:	90 0d       	add	r25, r0
    1a06:	52 9f       	mul	r21, r18
    1a08:	90 0d       	add	r25, r0
    1a0a:	11 24       	eor	r1, r1
    1a0c:	89 83       	std	Y+1, r24	; 0x01
    1a0e:	9a 83       	std	Y+2, r25	; 0x02
    1a10:	89 81       	ldd	r24, Y+1	; 0x01
    1a12:	9a 81       	ldd	r25, Y+2	; 0x02
    1a14:	85 96       	adiw	r24, 0x25	; 37
    1a16:	0e 94 18 07 	call	0xe30	; 0xe30 <pvPortMalloc>
    1a1a:	8b 83       	std	Y+3, r24	; 0x03
    1a1c:	9c 83       	std	Y+4, r25	; 0x04
    1a1e:	8b 81       	ldd	r24, Y+3	; 0x03
    1a20:	9c 81       	ldd	r25, Y+4	; 0x04
    1a22:	89 2b       	or	r24, r25
    1a24:	81 f0       	breq	.+32     	; 0x1a46 <xQueueGenericCreate+0x78>
    1a26:	8b 81       	ldd	r24, Y+3	; 0x03
    1a28:	9c 81       	ldd	r25, Y+4	; 0x04
    1a2a:	85 96       	adiw	r24, 0x25	; 37
    1a2c:	8d 83       	std	Y+5, r24	; 0x05
    1a2e:	9e 83       	std	Y+6, r25	; 0x06
    1a30:	2b 81       	ldd	r18, Y+3	; 0x03
    1a32:	3c 81       	ldd	r19, Y+4	; 0x04
    1a34:	8d 81       	ldd	r24, Y+5	; 0x05
    1a36:	9e 81       	ldd	r25, Y+6	; 0x06
    1a38:	89 01       	movw	r16, r18
    1a3a:	29 85       	ldd	r18, Y+9	; 0x09
    1a3c:	ac 01       	movw	r20, r24
    1a3e:	68 85       	ldd	r22, Y+8	; 0x08
    1a40:	8f 81       	ldd	r24, Y+7	; 0x07
    1a42:	0e 94 2d 0d 	call	0x1a5a	; 0x1a5a <prvInitialiseNewQueue>
    1a46:	8b 81       	ldd	r24, Y+3	; 0x03
    1a48:	9c 81       	ldd	r25, Y+4	; 0x04
    1a4a:	29 96       	adiw	r28, 0x09	; 9
    1a4c:	cd bf       	out	0x3d, r28	; 61
    1a4e:	de bf       	out	0x3e, r29	; 62
    1a50:	df 91       	pop	r29
    1a52:	cf 91       	pop	r28
    1a54:	1f 91       	pop	r17
    1a56:	0f 91       	pop	r16
    1a58:	08 95       	ret

00001a5a <prvInitialiseNewQueue>:
    1a5a:	0f 93       	push	r16
    1a5c:	1f 93       	push	r17
    1a5e:	cf 93       	push	r28
    1a60:	df 93       	push	r29
    1a62:	cd b7       	in	r28, 0x3d	; 61
    1a64:	de b7       	in	r29, 0x3e	; 62
    1a66:	27 97       	sbiw	r28, 0x07	; 7
    1a68:	cd bf       	out	0x3d, r28	; 61
    1a6a:	de bf       	out	0x3e, r29	; 62
    1a6c:	89 83       	std	Y+1, r24	; 0x01
    1a6e:	6a 83       	std	Y+2, r22	; 0x02
    1a70:	4b 83       	std	Y+3, r20	; 0x03
    1a72:	5c 83       	std	Y+4, r21	; 0x04
    1a74:	2d 83       	std	Y+5, r18	; 0x05
    1a76:	0e 83       	std	Y+6, r16	; 0x06
    1a78:	1f 83       	std	Y+7, r17	; 0x07
    1a7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a7c:	88 23       	and	r24, r24
    1a7e:	41 f4       	brne	.+16     	; 0x1a90 <prvInitialiseNewQueue+0x36>
    1a80:	8e 81       	ldd	r24, Y+6	; 0x06
    1a82:	9f 81       	ldd	r25, Y+7	; 0x07
    1a84:	2e 81       	ldd	r18, Y+6	; 0x06
    1a86:	3f 81       	ldd	r19, Y+7	; 0x07
    1a88:	fc 01       	movw	r30, r24
    1a8a:	20 83       	st	Z, r18
    1a8c:	31 83       	std	Z+1, r19	; 0x01
    1a8e:	07 c0       	rjmp	.+14     	; 0x1a9e <prvInitialiseNewQueue+0x44>
    1a90:	8e 81       	ldd	r24, Y+6	; 0x06
    1a92:	9f 81       	ldd	r25, Y+7	; 0x07
    1a94:	2b 81       	ldd	r18, Y+3	; 0x03
    1a96:	3c 81       	ldd	r19, Y+4	; 0x04
    1a98:	fc 01       	movw	r30, r24
    1a9a:	20 83       	st	Z, r18
    1a9c:	31 83       	std	Z+1, r19	; 0x01
    1a9e:	8e 81       	ldd	r24, Y+6	; 0x06
    1aa0:	9f 81       	ldd	r25, Y+7	; 0x07
    1aa2:	29 81       	ldd	r18, Y+1	; 0x01
    1aa4:	fc 01       	movw	r30, r24
    1aa6:	27 8f       	std	Z+31, r18	; 0x1f
    1aa8:	8e 81       	ldd	r24, Y+6	; 0x06
    1aaa:	9f 81       	ldd	r25, Y+7	; 0x07
    1aac:	2a 81       	ldd	r18, Y+2	; 0x02
    1aae:	fc 01       	movw	r30, r24
    1ab0:	20 a3       	std	Z+32, r18	; 0x20
    1ab2:	8e 81       	ldd	r24, Y+6	; 0x06
    1ab4:	9f 81       	ldd	r25, Y+7	; 0x07
    1ab6:	61 e0       	ldi	r22, 0x01	; 1
    1ab8:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <xQueueGenericReset>
    1abc:	8e 81       	ldd	r24, Y+6	; 0x06
    1abe:	9f 81       	ldd	r25, Y+7	; 0x07
    1ac0:	2d 81       	ldd	r18, Y+5	; 0x05
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	24 a3       	std	Z+36, r18	; 0x24
    1ac6:	00 00       	nop
    1ac8:	27 96       	adiw	r28, 0x07	; 7
    1aca:	cd bf       	out	0x3d, r28	; 61
    1acc:	de bf       	out	0x3e, r29	; 62
    1ace:	df 91       	pop	r29
    1ad0:	cf 91       	pop	r28
    1ad2:	1f 91       	pop	r17
    1ad4:	0f 91       	pop	r16
    1ad6:	08 95       	ret

00001ad8 <xQueueGenericSend>:
    1ad8:	0f 93       	push	r16
    1ada:	cf 93       	push	r28
    1adc:	df 93       	push	r29
    1ade:	cd b7       	in	r28, 0x3d	; 61
    1ae0:	de b7       	in	r29, 0x3e	; 62
    1ae2:	62 97       	sbiw	r28, 0x12	; 18
    1ae4:	cd bf       	out	0x3d, r28	; 61
    1ae6:	de bf       	out	0x3e, r29	; 62
    1ae8:	8a 87       	std	Y+10, r24	; 0x0a
    1aea:	9b 87       	std	Y+11, r25	; 0x0b
    1aec:	6c 87       	std	Y+12, r22	; 0x0c
    1aee:	7d 87       	std	Y+13, r23	; 0x0d
    1af0:	2e 87       	std	Y+14, r18	; 0x0e
    1af2:	3f 87       	std	Y+15, r19	; 0x0f
    1af4:	48 8b       	std	Y+16, r20	; 0x10
    1af6:	59 8b       	std	Y+17, r21	; 0x11
    1af8:	0a 8b       	std	Y+18, r16	; 0x12
    1afa:	19 82       	std	Y+1, r1	; 0x01
    1afc:	8a 85       	ldd	r24, Y+10	; 0x0a
    1afe:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b00:	8a 83       	std	Y+2, r24	; 0x02
    1b02:	9b 83       	std	Y+3, r25	; 0x03
    1b04:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1b08:	ff 93       	push	r31
    1b0a:	f8 7f       	andi	r31, 0xF8	; 248
    1b0c:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1b10:	8a 81       	ldd	r24, Y+2	; 0x02
    1b12:	9b 81       	ldd	r25, Y+3	; 0x03
    1b14:	fc 01       	movw	r30, r24
    1b16:	26 8d       	ldd	r18, Z+30	; 0x1e
    1b18:	8a 81       	ldd	r24, Y+2	; 0x02
    1b1a:	9b 81       	ldd	r25, Y+3	; 0x03
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	87 8d       	ldd	r24, Z+31	; 0x1f
    1b20:	28 17       	cp	r18, r24
    1b22:	18 f0       	brcs	.+6      	; 0x1b2a <xQueueGenericSend+0x52>
    1b24:	8a 89       	ldd	r24, Y+18	; 0x12
    1b26:	82 30       	cpi	r24, 0x02	; 2
    1b28:	19 f5       	brne	.+70     	; 0x1b70 <xQueueGenericSend+0x98>
    1b2a:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b2c:	3d 85       	ldd	r19, Y+13	; 0x0d
    1b2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1b30:	9b 81       	ldd	r25, Y+3	; 0x03
    1b32:	4a 89       	ldd	r20, Y+18	; 0x12
    1b34:	b9 01       	movw	r22, r18
    1b36:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <prvCopyDataToQueue>
    1b3a:	8c 83       	std	Y+4, r24	; 0x04
    1b3c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b3e:	9b 81       	ldd	r25, Y+3	; 0x03
    1b40:	fc 01       	movw	r30, r24
    1b42:	83 89       	ldd	r24, Z+19	; 0x13
    1b44:	88 23       	and	r24, r24
    1b46:	51 f0       	breq	.+20     	; 0x1b5c <xQueueGenericSend+0x84>
    1b48:	8a 81       	ldd	r24, Y+2	; 0x02
    1b4a:	9b 81       	ldd	r25, Y+3	; 0x03
    1b4c:	43 96       	adiw	r24, 0x13	; 19
    1b4e:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <xTaskRemoveFromEventList>
    1b52:	88 23       	and	r24, r24
    1b54:	41 f0       	breq	.+16     	; 0x1b66 <xQueueGenericSend+0x8e>
    1b56:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    1b5a:	05 c0       	rjmp	.+10     	; 0x1b66 <xQueueGenericSend+0x8e>
    1b5c:	8c 81       	ldd	r24, Y+4	; 0x04
    1b5e:	88 23       	and	r24, r24
    1b60:	11 f0       	breq	.+4      	; 0x1b66 <xQueueGenericSend+0x8e>
    1b62:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    1b66:	ff 91       	pop	r31
    1b68:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1b6c:	81 e0       	ldi	r24, 0x01	; 1
    1b6e:	6f c0       	rjmp	.+222    	; 0x1c4e <xQueueGenericSend+0x176>
    1b70:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b72:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b74:	a8 89       	ldd	r26, Y+16	; 0x10
    1b76:	b9 89       	ldd	r27, Y+17	; 0x11
    1b78:	89 2b       	or	r24, r25
    1b7a:	8a 2b       	or	r24, r26
    1b7c:	8b 2b       	or	r24, r27
    1b7e:	29 f4       	brne	.+10     	; 0x1b8a <xQueueGenericSend+0xb2>
    1b80:	ff 91       	pop	r31
    1b82:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1b86:	80 e0       	ldi	r24, 0x00	; 0
    1b88:	62 c0       	rjmp	.+196    	; 0x1c4e <xQueueGenericSend+0x176>
    1b8a:	89 81       	ldd	r24, Y+1	; 0x01
    1b8c:	88 23       	and	r24, r24
    1b8e:	31 f4       	brne	.+12     	; 0x1b9c <xQueueGenericSend+0xc4>
    1b90:	ce 01       	movw	r24, r28
    1b92:	05 96       	adiw	r24, 0x05	; 5
    1b94:	0e 94 c6 17 	call	0x2f8c	; 0x2f8c <vTaskInternalSetTimeOutState>
    1b98:	81 e0       	ldi	r24, 0x01	; 1
    1b9a:	89 83       	std	Y+1, r24	; 0x01
    1b9c:	ff 91       	pop	r31
    1b9e:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1ba2:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
    1ba6:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1baa:	ff 93       	push	r31
    1bac:	f8 7f       	andi	r31, 0xF8	; 248
    1bae:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb4:	9b 81       	ldd	r25, Y+3	; 0x03
    1bb6:	fc 01       	movw	r30, r24
    1bb8:	81 a1       	ldd	r24, Z+33	; 0x21
    1bba:	8f 3f       	cpi	r24, 0xFF	; 255
    1bbc:	21 f4       	brne	.+8      	; 0x1bc6 <xQueueGenericSend+0xee>
    1bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc0:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc2:	fc 01       	movw	r30, r24
    1bc4:	11 a2       	std	Z+33, r1	; 0x21
    1bc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bca:	fc 01       	movw	r30, r24
    1bcc:	82 a1       	ldd	r24, Z+34	; 0x22
    1bce:	8f 3f       	cpi	r24, 0xFF	; 255
    1bd0:	21 f4       	brne	.+8      	; 0x1bda <xQueueGenericSend+0x102>
    1bd2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bd4:	9b 81       	ldd	r25, Y+3	; 0x03
    1bd6:	fc 01       	movw	r30, r24
    1bd8:	12 a2       	std	Z+34, r1	; 0x22
    1bda:	ff 91       	pop	r31
    1bdc:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1be0:	9e 01       	movw	r18, r28
    1be2:	22 5f       	subi	r18, 0xF2	; 242
    1be4:	3f 4f       	sbci	r19, 0xFF	; 255
    1be6:	ce 01       	movw	r24, r28
    1be8:	05 96       	adiw	r24, 0x05	; 5
    1bea:	b9 01       	movw	r22, r18
    1bec:	0e 94 e9 17 	call	0x2fd2	; 0x2fd2 <xTaskCheckForTimeOut>
    1bf0:	88 23       	and	r24, r24
    1bf2:	31 f5       	brne	.+76     	; 0x1c40 <xQueueGenericSend+0x168>
    1bf4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf6:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf8:	0e 94 f5 10 	call	0x21ea	; 0x21ea <prvIsQueueFull>
    1bfc:	88 23       	and	r24, r24
    1bfe:	c9 f0       	breq	.+50     	; 0x1c32 <xQueueGenericSend+0x15a>
    1c00:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c02:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c04:	a8 89       	ldd	r26, Y+16	; 0x10
    1c06:	b9 89       	ldd	r27, Y+17	; 0x11
    1c08:	2a 81       	ldd	r18, Y+2	; 0x02
    1c0a:	3b 81       	ldd	r19, Y+3	; 0x03
    1c0c:	28 5f       	subi	r18, 0xF8	; 248
    1c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c10:	ac 01       	movw	r20, r24
    1c12:	bd 01       	movw	r22, r26
    1c14:	c9 01       	movw	r24, r18
    1c16:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <vTaskPlaceOnEventList>
    1c1a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c1c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c1e:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    1c22:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    1c26:	88 23       	and	r24, r24
    1c28:	09 f0       	breq	.+2      	; 0x1c2c <xQueueGenericSend+0x154>
    1c2a:	6c cf       	rjmp	.-296    	; 0x1b04 <xQueueGenericSend+0x2c>
    1c2c:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    1c30:	69 cf       	rjmp	.-302    	; 0x1b04 <xQueueGenericSend+0x2c>
    1c32:	8a 81       	ldd	r24, Y+2	; 0x02
    1c34:	9b 81       	ldd	r25, Y+3	; 0x03
    1c36:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    1c3a:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    1c3e:	62 cf       	rjmp	.-316    	; 0x1b04 <xQueueGenericSend+0x2c>
    1c40:	8a 81       	ldd	r24, Y+2	; 0x02
    1c42:	9b 81       	ldd	r25, Y+3	; 0x03
    1c44:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    1c48:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	62 96       	adiw	r28, 0x12	; 18
    1c50:	cd bf       	out	0x3d, r28	; 61
    1c52:	de bf       	out	0x3e, r29	; 62
    1c54:	df 91       	pop	r29
    1c56:	cf 91       	pop	r28
    1c58:	0f 91       	pop	r16
    1c5a:	08 95       	ret

00001c5c <xQueueGenericSendFromISR>:
    1c5c:	cf 93       	push	r28
    1c5e:	df 93       	push	r29
    1c60:	cd b7       	in	r28, 0x3d	; 61
    1c62:	de b7       	in	r29, 0x3e	; 62
    1c64:	2c 97       	sbiw	r28, 0x0c	; 12
    1c66:	cd bf       	out	0x3d, r28	; 61
    1c68:	de bf       	out	0x3e, r29	; 62
    1c6a:	8e 83       	std	Y+6, r24	; 0x06
    1c6c:	9f 83       	std	Y+7, r25	; 0x07
    1c6e:	68 87       	std	Y+8, r22	; 0x08
    1c70:	79 87       	std	Y+9, r23	; 0x09
    1c72:	4a 87       	std	Y+10, r20	; 0x0a
    1c74:	5b 87       	std	Y+11, r21	; 0x0b
    1c76:	2c 87       	std	Y+12, r18	; 0x0c
    1c78:	8e 81       	ldd	r24, Y+6	; 0x06
    1c7a:	9f 81       	ldd	r25, Y+7	; 0x07
    1c7c:	8a 83       	std	Y+2, r24	; 0x02
    1c7e:	9b 83       	std	Y+3, r25	; 0x03
    1c80:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_portSetInterruptMaskFromIsr>
    1c84:	8c 83       	std	Y+4, r24	; 0x04
    1c86:	8a 81       	ldd	r24, Y+2	; 0x02
    1c88:	9b 81       	ldd	r25, Y+3	; 0x03
    1c8a:	fc 01       	movw	r30, r24
    1c8c:	26 8d       	ldd	r18, Z+30	; 0x1e
    1c8e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c90:	9b 81       	ldd	r25, Y+3	; 0x03
    1c92:	fc 01       	movw	r30, r24
    1c94:	87 8d       	ldd	r24, Z+31	; 0x1f
    1c96:	28 17       	cp	r18, r24
    1c98:	18 f0       	brcs	.+6      	; 0x1ca0 <xQueueGenericSendFromISR+0x44>
    1c9a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c9c:	82 30       	cpi	r24, 0x02	; 2
    1c9e:	89 f5       	brne	.+98     	; 0x1d02 <xQueueGenericSendFromISR+0xa6>
    1ca0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ca2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ca4:	fc 01       	movw	r30, r24
    1ca6:	82 a1       	ldd	r24, Z+34	; 0x22
    1ca8:	8d 83       	std	Y+5, r24	; 0x05
    1caa:	28 85       	ldd	r18, Y+8	; 0x08
    1cac:	39 85       	ldd	r19, Y+9	; 0x09
    1cae:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb0:	9b 81       	ldd	r25, Y+3	; 0x03
    1cb2:	4c 85       	ldd	r20, Y+12	; 0x0c
    1cb4:	b9 01       	movw	r22, r18
    1cb6:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <prvCopyDataToQueue>
    1cba:	8d 81       	ldd	r24, Y+5	; 0x05
    1cbc:	8f 3f       	cpi	r24, 0xFF	; 255
    1cbe:	b9 f4       	brne	.+46     	; 0x1cee <xQueueGenericSendFromISR+0x92>
    1cc0:	8a 81       	ldd	r24, Y+2	; 0x02
    1cc2:	9b 81       	ldd	r25, Y+3	; 0x03
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	83 89       	ldd	r24, Z+19	; 0x13
    1cc8:	88 23       	and	r24, r24
    1cca:	c1 f0       	breq	.+48     	; 0x1cfc <xQueueGenericSendFromISR+0xa0>
    1ccc:	8a 81       	ldd	r24, Y+2	; 0x02
    1cce:	9b 81       	ldd	r25, Y+3	; 0x03
    1cd0:	43 96       	adiw	r24, 0x13	; 19
    1cd2:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <xTaskRemoveFromEventList>
    1cd6:	88 23       	and	r24, r24
    1cd8:	89 f0       	breq	.+34     	; 0x1cfc <xQueueGenericSendFromISR+0xa0>
    1cda:	8a 85       	ldd	r24, Y+10	; 0x0a
    1cdc:	9b 85       	ldd	r25, Y+11	; 0x0b
    1cde:	89 2b       	or	r24, r25
    1ce0:	69 f0       	breq	.+26     	; 0x1cfc <xQueueGenericSendFromISR+0xa0>
    1ce2:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ce4:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ce6:	21 e0       	ldi	r18, 0x01	; 1
    1ce8:	fc 01       	movw	r30, r24
    1cea:	20 83       	st	Z, r18
    1cec:	07 c0       	rjmp	.+14     	; 0x1cfc <xQueueGenericSendFromISR+0xa0>
    1cee:	8d 81       	ldd	r24, Y+5	; 0x05
    1cf0:	8f 5f       	subi	r24, 0xFF	; 255
    1cf2:	28 2f       	mov	r18, r24
    1cf4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf6:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf8:	fc 01       	movw	r30, r24
    1cfa:	22 a3       	std	Z+34, r18	; 0x22
    1cfc:	81 e0       	ldi	r24, 0x01	; 1
    1cfe:	89 83       	std	Y+1, r24	; 0x01
    1d00:	01 c0       	rjmp	.+2      	; 0x1d04 <xQueueGenericSendFromISR+0xa8>
    1d02:	19 82       	std	Y+1, r1	; 0x01
    1d04:	80 ea       	ldi	r24, 0xA0	; 160
    1d06:	90 e0       	ldi	r25, 0x00	; 0
    1d08:	2c 81       	ldd	r18, Y+4	; 0x04
    1d0a:	fc 01       	movw	r30, r24
    1d0c:	22 83       	std	Z+2, r18	; 0x02
    1d0e:	89 81       	ldd	r24, Y+1	; 0x01
    1d10:	2c 96       	adiw	r28, 0x0c	; 12
    1d12:	cd bf       	out	0x3d, r28	; 61
    1d14:	de bf       	out	0x3e, r29	; 62
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	08 95       	ret

00001d1c <xQueueReceive>:
    1d1c:	cf 93       	push	r28
    1d1e:	df 93       	push	r29
    1d20:	cd b7       	in	r28, 0x3d	; 61
    1d22:	de b7       	in	r29, 0x3e	; 62
    1d24:	61 97       	sbiw	r28, 0x11	; 17
    1d26:	cd bf       	out	0x3d, r28	; 61
    1d28:	de bf       	out	0x3e, r29	; 62
    1d2a:	8a 87       	std	Y+10, r24	; 0x0a
    1d2c:	9b 87       	std	Y+11, r25	; 0x0b
    1d2e:	6c 87       	std	Y+12, r22	; 0x0c
    1d30:	7d 87       	std	Y+13, r23	; 0x0d
    1d32:	2e 87       	std	Y+14, r18	; 0x0e
    1d34:	3f 87       	std	Y+15, r19	; 0x0f
    1d36:	48 8b       	std	Y+16, r20	; 0x10
    1d38:	59 8b       	std	Y+17, r21	; 0x11
    1d3a:	19 82       	std	Y+1, r1	; 0x01
    1d3c:	8a 85       	ldd	r24, Y+10	; 0x0a
    1d3e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1d40:	8a 83       	std	Y+2, r24	; 0x02
    1d42:	9b 83       	std	Y+3, r25	; 0x03
    1d44:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1d48:	ff 93       	push	r31
    1d4a:	f8 7f       	andi	r31, 0xF8	; 248
    1d4c:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1d50:	8a 81       	ldd	r24, Y+2	; 0x02
    1d52:	9b 81       	ldd	r25, Y+3	; 0x03
    1d54:	fc 01       	movw	r30, r24
    1d56:	86 8d       	ldd	r24, Z+30	; 0x1e
    1d58:	8c 83       	std	Y+4, r24	; 0x04
    1d5a:	8c 81       	ldd	r24, Y+4	; 0x04
    1d5c:	88 23       	and	r24, r24
    1d5e:	11 f1       	breq	.+68     	; 0x1da4 <xQueueReceive+0x88>
    1d60:	2c 85       	ldd	r18, Y+12	; 0x0c
    1d62:	3d 85       	ldd	r19, Y+13	; 0x0d
    1d64:	8a 81       	ldd	r24, Y+2	; 0x02
    1d66:	9b 81       	ldd	r25, Y+3	; 0x03
    1d68:	b9 01       	movw	r22, r18
    1d6a:	0e 94 1f 10 	call	0x203e	; 0x203e <prvCopyDataFromQueue>
    1d6e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d70:	2f ef       	ldi	r18, 0xFF	; 255
    1d72:	28 0f       	add	r18, r24
    1d74:	8a 81       	ldd	r24, Y+2	; 0x02
    1d76:	9b 81       	ldd	r25, Y+3	; 0x03
    1d78:	fc 01       	movw	r30, r24
    1d7a:	26 8f       	std	Z+30, r18	; 0x1e
    1d7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d7e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d80:	fc 01       	movw	r30, r24
    1d82:	80 85       	ldd	r24, Z+8	; 0x08
    1d84:	88 23       	and	r24, r24
    1d86:	49 f0       	breq	.+18     	; 0x1d9a <xQueueReceive+0x7e>
    1d88:	8a 81       	ldd	r24, Y+2	; 0x02
    1d8a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d8c:	08 96       	adiw	r24, 0x08	; 8
    1d8e:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <xTaskRemoveFromEventList>
    1d92:	88 23       	and	r24, r24
    1d94:	11 f0       	breq	.+4      	; 0x1d9a <xQueueReceive+0x7e>
    1d96:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    1d9a:	ff 91       	pop	r31
    1d9c:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	76 c0       	rjmp	.+236    	; 0x1e90 <xQueueReceive+0x174>
    1da4:	8e 85       	ldd	r24, Y+14	; 0x0e
    1da6:	9f 85       	ldd	r25, Y+15	; 0x0f
    1da8:	a8 89       	ldd	r26, Y+16	; 0x10
    1daa:	b9 89       	ldd	r27, Y+17	; 0x11
    1dac:	89 2b       	or	r24, r25
    1dae:	8a 2b       	or	r24, r26
    1db0:	8b 2b       	or	r24, r27
    1db2:	29 f4       	brne	.+10     	; 0x1dbe <xQueueReceive+0xa2>
    1db4:	ff 91       	pop	r31
    1db6:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1dba:	80 e0       	ldi	r24, 0x00	; 0
    1dbc:	69 c0       	rjmp	.+210    	; 0x1e90 <xQueueReceive+0x174>
    1dbe:	89 81       	ldd	r24, Y+1	; 0x01
    1dc0:	88 23       	and	r24, r24
    1dc2:	31 f4       	brne	.+12     	; 0x1dd0 <xQueueReceive+0xb4>
    1dc4:	ce 01       	movw	r24, r28
    1dc6:	05 96       	adiw	r24, 0x05	; 5
    1dc8:	0e 94 c6 17 	call	0x2f8c	; 0x2f8c <vTaskInternalSetTimeOutState>
    1dcc:	81 e0       	ldi	r24, 0x01	; 1
    1dce:	89 83       	std	Y+1, r24	; 0x01
    1dd0:	ff 91       	pop	r31
    1dd2:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1dd6:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
    1dda:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1dde:	ff 93       	push	r31
    1de0:	f8 7f       	andi	r31, 0xF8	; 248
    1de2:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1de6:	8a 81       	ldd	r24, Y+2	; 0x02
    1de8:	9b 81       	ldd	r25, Y+3	; 0x03
    1dea:	fc 01       	movw	r30, r24
    1dec:	81 a1       	ldd	r24, Z+33	; 0x21
    1dee:	8f 3f       	cpi	r24, 0xFF	; 255
    1df0:	21 f4       	brne	.+8      	; 0x1dfa <xQueueReceive+0xde>
    1df2:	8a 81       	ldd	r24, Y+2	; 0x02
    1df4:	9b 81       	ldd	r25, Y+3	; 0x03
    1df6:	fc 01       	movw	r30, r24
    1df8:	11 a2       	std	Z+33, r1	; 0x21
    1dfa:	8a 81       	ldd	r24, Y+2	; 0x02
    1dfc:	9b 81       	ldd	r25, Y+3	; 0x03
    1dfe:	fc 01       	movw	r30, r24
    1e00:	82 a1       	ldd	r24, Z+34	; 0x22
    1e02:	8f 3f       	cpi	r24, 0xFF	; 255
    1e04:	21 f4       	brne	.+8      	; 0x1e0e <xQueueReceive+0xf2>
    1e06:	8a 81       	ldd	r24, Y+2	; 0x02
    1e08:	9b 81       	ldd	r25, Y+3	; 0x03
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	12 a2       	std	Z+34, r1	; 0x22
    1e0e:	ff 91       	pop	r31
    1e10:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1e14:	9e 01       	movw	r18, r28
    1e16:	22 5f       	subi	r18, 0xF2	; 242
    1e18:	3f 4f       	sbci	r19, 0xFF	; 255
    1e1a:	ce 01       	movw	r24, r28
    1e1c:	05 96       	adiw	r24, 0x05	; 5
    1e1e:	b9 01       	movw	r22, r18
    1e20:	0e 94 e9 17 	call	0x2fd2	; 0x2fd2 <xTaskCheckForTimeOut>
    1e24:	88 23       	and	r24, r24
    1e26:	31 f5       	brne	.+76     	; 0x1e74 <xQueueReceive+0x158>
    1e28:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2a:	9b 81       	ldd	r25, Y+3	; 0x03
    1e2c:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <prvIsQueueEmpty>
    1e30:	88 23       	and	r24, r24
    1e32:	c9 f0       	breq	.+50     	; 0x1e66 <xQueueReceive+0x14a>
    1e34:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e36:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e38:	a8 89       	ldd	r26, Y+16	; 0x10
    1e3a:	b9 89       	ldd	r27, Y+17	; 0x11
    1e3c:	2a 81       	ldd	r18, Y+2	; 0x02
    1e3e:	3b 81       	ldd	r19, Y+3	; 0x03
    1e40:	2d 5e       	subi	r18, 0xED	; 237
    1e42:	3f 4f       	sbci	r19, 0xFF	; 255
    1e44:	ac 01       	movw	r20, r24
    1e46:	bd 01       	movw	r22, r26
    1e48:	c9 01       	movw	r24, r18
    1e4a:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <vTaskPlaceOnEventList>
    1e4e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e50:	9b 81       	ldd	r25, Y+3	; 0x03
    1e52:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    1e56:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    1e5a:	88 23       	and	r24, r24
    1e5c:	09 f0       	breq	.+2      	; 0x1e60 <xQueueReceive+0x144>
    1e5e:	72 cf       	rjmp	.-284    	; 0x1d44 <xQueueReceive+0x28>
    1e60:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    1e64:	6f cf       	rjmp	.-290    	; 0x1d44 <xQueueReceive+0x28>
    1e66:	8a 81       	ldd	r24, Y+2	; 0x02
    1e68:	9b 81       	ldd	r25, Y+3	; 0x03
    1e6a:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    1e6e:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    1e72:	68 cf       	rjmp	.-304    	; 0x1d44 <xQueueReceive+0x28>
    1e74:	8a 81       	ldd	r24, Y+2	; 0x02
    1e76:	9b 81       	ldd	r25, Y+3	; 0x03
    1e78:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    1e7c:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    1e80:	8a 81       	ldd	r24, Y+2	; 0x02
    1e82:	9b 81       	ldd	r25, Y+3	; 0x03
    1e84:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <prvIsQueueEmpty>
    1e88:	88 23       	and	r24, r24
    1e8a:	09 f4       	brne	.+2      	; 0x1e8e <xQueueReceive+0x172>
    1e8c:	5b cf       	rjmp	.-330    	; 0x1d44 <xQueueReceive+0x28>
    1e8e:	80 e0       	ldi	r24, 0x00	; 0
    1e90:	61 96       	adiw	r28, 0x11	; 17
    1e92:	cd bf       	out	0x3d, r28	; 61
    1e94:	de bf       	out	0x3e, r29	; 62
    1e96:	df 91       	pop	r29
    1e98:	cf 91       	pop	r28
    1e9a:	08 95       	ret

00001e9c <uxQueueMessagesWaiting>:
    1e9c:	cf 93       	push	r28
    1e9e:	df 93       	push	r29
    1ea0:	00 d0       	rcall	.+0      	; 0x1ea2 <uxQueueMessagesWaiting+0x6>
    1ea2:	cd b7       	in	r28, 0x3d	; 61
    1ea4:	de b7       	in	r29, 0x3e	; 62
    1ea6:	8a 83       	std	Y+2, r24	; 0x02
    1ea8:	9b 83       	std	Y+3, r25	; 0x03
    1eaa:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1eae:	ff 93       	push	r31
    1eb0:	f8 7f       	andi	r31, 0xF8	; 248
    1eb2:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1eb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1eb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1eba:	fc 01       	movw	r30, r24
    1ebc:	86 8d       	ldd	r24, Z+30	; 0x1e
    1ebe:	89 83       	std	Y+1, r24	; 0x01
    1ec0:	ff 91       	pop	r31
    1ec2:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    1ec6:	89 81       	ldd	r24, Y+1	; 0x01
    1ec8:	23 96       	adiw	r28, 0x03	; 3
    1eca:	cd bf       	out	0x3d, r28	; 61
    1ecc:	de bf       	out	0x3e, r29	; 62
    1ece:	df 91       	pop	r29
    1ed0:	cf 91       	pop	r28
    1ed2:	08 95       	ret

00001ed4 <prvCopyDataToQueue>:
    1ed4:	cf 93       	push	r28
    1ed6:	df 93       	push	r29
    1ed8:	cd b7       	in	r28, 0x3d	; 61
    1eda:	de b7       	in	r29, 0x3e	; 62
    1edc:	27 97       	sbiw	r28, 0x07	; 7
    1ede:	cd bf       	out	0x3d, r28	; 61
    1ee0:	de bf       	out	0x3e, r29	; 62
    1ee2:	8b 83       	std	Y+3, r24	; 0x03
    1ee4:	9c 83       	std	Y+4, r25	; 0x04
    1ee6:	6d 83       	std	Y+5, r22	; 0x05
    1ee8:	7e 83       	std	Y+6, r23	; 0x06
    1eea:	4f 83       	std	Y+7, r20	; 0x07
    1eec:	1a 82       	std	Y+2, r1	; 0x02
    1eee:	8b 81       	ldd	r24, Y+3	; 0x03
    1ef0:	9c 81       	ldd	r25, Y+4	; 0x04
    1ef2:	fc 01       	movw	r30, r24
    1ef4:	86 8d       	ldd	r24, Z+30	; 0x1e
    1ef6:	89 83       	std	Y+1, r24	; 0x01
    1ef8:	8b 81       	ldd	r24, Y+3	; 0x03
    1efa:	9c 81       	ldd	r25, Y+4	; 0x04
    1efc:	fc 01       	movw	r30, r24
    1efe:	80 a1       	ldd	r24, Z+32	; 0x20
    1f00:	88 23       	and	r24, r24
    1f02:	09 f4       	brne	.+2      	; 0x1f06 <prvCopyDataToQueue+0x32>
    1f04:	8e c0       	rjmp	.+284    	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    1f06:	8f 81       	ldd	r24, Y+7	; 0x07
    1f08:	88 23       	and	r24, r24
    1f0a:	d9 f5       	brne	.+118    	; 0x1f82 <prvCopyDataToQueue+0xae>
    1f0c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f0e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f10:	fc 01       	movw	r30, r24
    1f12:	80 a1       	ldd	r24, Z+32	; 0x20
    1f14:	48 2f       	mov	r20, r24
    1f16:	50 e0       	ldi	r21, 0x00	; 0
    1f18:	8b 81       	ldd	r24, Y+3	; 0x03
    1f1a:	9c 81       	ldd	r25, Y+4	; 0x04
    1f1c:	fc 01       	movw	r30, r24
    1f1e:	84 81       	ldd	r24, Z+4	; 0x04
    1f20:	95 81       	ldd	r25, Z+5	; 0x05
    1f22:	2d 81       	ldd	r18, Y+5	; 0x05
    1f24:	3e 81       	ldd	r19, Y+6	; 0x06
    1f26:	b9 01       	movw	r22, r18
    1f28:	0e 94 f0 31 	call	0x63e0	; 0x63e0 <memcpy>
    1f2c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f2e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f30:	fc 01       	movw	r30, r24
    1f32:	24 81       	ldd	r18, Z+4	; 0x04
    1f34:	35 81       	ldd	r19, Z+5	; 0x05
    1f36:	8b 81       	ldd	r24, Y+3	; 0x03
    1f38:	9c 81       	ldd	r25, Y+4	; 0x04
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	80 a1       	ldd	r24, Z+32	; 0x20
    1f3e:	88 2f       	mov	r24, r24
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	28 0f       	add	r18, r24
    1f44:	39 1f       	adc	r19, r25
    1f46:	8b 81       	ldd	r24, Y+3	; 0x03
    1f48:	9c 81       	ldd	r25, Y+4	; 0x04
    1f4a:	fc 01       	movw	r30, r24
    1f4c:	24 83       	std	Z+4, r18	; 0x04
    1f4e:	35 83       	std	Z+5, r19	; 0x05
    1f50:	8b 81       	ldd	r24, Y+3	; 0x03
    1f52:	9c 81       	ldd	r25, Y+4	; 0x04
    1f54:	fc 01       	movw	r30, r24
    1f56:	24 81       	ldd	r18, Z+4	; 0x04
    1f58:	35 81       	ldd	r19, Z+5	; 0x05
    1f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5c:	9c 81       	ldd	r25, Y+4	; 0x04
    1f5e:	fc 01       	movw	r30, r24
    1f60:	82 81       	ldd	r24, Z+2	; 0x02
    1f62:	93 81       	ldd	r25, Z+3	; 0x03
    1f64:	28 17       	cp	r18, r24
    1f66:	39 07       	cpc	r19, r25
    1f68:	08 f4       	brcc	.+2      	; 0x1f6c <prvCopyDataToQueue+0x98>
    1f6a:	5b c0       	rjmp	.+182    	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    1f6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1f6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1f70:	fc 01       	movw	r30, r24
    1f72:	20 81       	ld	r18, Z
    1f74:	31 81       	ldd	r19, Z+1	; 0x01
    1f76:	8b 81       	ldd	r24, Y+3	; 0x03
    1f78:	9c 81       	ldd	r25, Y+4	; 0x04
    1f7a:	fc 01       	movw	r30, r24
    1f7c:	24 83       	std	Z+4, r18	; 0x04
    1f7e:	35 83       	std	Z+5, r19	; 0x05
    1f80:	50 c0       	rjmp	.+160    	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    1f82:	8b 81       	ldd	r24, Y+3	; 0x03
    1f84:	9c 81       	ldd	r25, Y+4	; 0x04
    1f86:	fc 01       	movw	r30, r24
    1f88:	80 a1       	ldd	r24, Z+32	; 0x20
    1f8a:	48 2f       	mov	r20, r24
    1f8c:	50 e0       	ldi	r21, 0x00	; 0
    1f8e:	8b 81       	ldd	r24, Y+3	; 0x03
    1f90:	9c 81       	ldd	r25, Y+4	; 0x04
    1f92:	fc 01       	movw	r30, r24
    1f94:	86 81       	ldd	r24, Z+6	; 0x06
    1f96:	97 81       	ldd	r25, Z+7	; 0x07
    1f98:	2d 81       	ldd	r18, Y+5	; 0x05
    1f9a:	3e 81       	ldd	r19, Y+6	; 0x06
    1f9c:	b9 01       	movw	r22, r18
    1f9e:	0e 94 f0 31 	call	0x63e0	; 0x63e0 <memcpy>
    1fa2:	8b 81       	ldd	r24, Y+3	; 0x03
    1fa4:	9c 81       	ldd	r25, Y+4	; 0x04
    1fa6:	fc 01       	movw	r30, r24
    1fa8:	26 81       	ldd	r18, Z+6	; 0x06
    1faa:	37 81       	ldd	r19, Z+7	; 0x07
    1fac:	8b 81       	ldd	r24, Y+3	; 0x03
    1fae:	9c 81       	ldd	r25, Y+4	; 0x04
    1fb0:	fc 01       	movw	r30, r24
    1fb2:	80 a1       	ldd	r24, Z+32	; 0x20
    1fb4:	88 2f       	mov	r24, r24
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	91 95       	neg	r25
    1fba:	81 95       	neg	r24
    1fbc:	91 09       	sbc	r25, r1
    1fbe:	28 0f       	add	r18, r24
    1fc0:	39 1f       	adc	r19, r25
    1fc2:	8b 81       	ldd	r24, Y+3	; 0x03
    1fc4:	9c 81       	ldd	r25, Y+4	; 0x04
    1fc6:	fc 01       	movw	r30, r24
    1fc8:	26 83       	std	Z+6, r18	; 0x06
    1fca:	37 83       	std	Z+7, r19	; 0x07
    1fcc:	8b 81       	ldd	r24, Y+3	; 0x03
    1fce:	9c 81       	ldd	r25, Y+4	; 0x04
    1fd0:	fc 01       	movw	r30, r24
    1fd2:	26 81       	ldd	r18, Z+6	; 0x06
    1fd4:	37 81       	ldd	r19, Z+7	; 0x07
    1fd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fd8:	9c 81       	ldd	r25, Y+4	; 0x04
    1fda:	fc 01       	movw	r30, r24
    1fdc:	80 81       	ld	r24, Z
    1fde:	91 81       	ldd	r25, Z+1	; 0x01
    1fe0:	28 17       	cp	r18, r24
    1fe2:	39 07       	cpc	r19, r25
    1fe4:	a8 f4       	brcc	.+42     	; 0x2010 <__DATA_REGION_LENGTH__+0x10>
    1fe6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fe8:	9c 81       	ldd	r25, Y+4	; 0x04
    1fea:	fc 01       	movw	r30, r24
    1fec:	22 81       	ldd	r18, Z+2	; 0x02
    1fee:	33 81       	ldd	r19, Z+3	; 0x03
    1ff0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ff2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ff4:	fc 01       	movw	r30, r24
    1ff6:	80 a1       	ldd	r24, Z+32	; 0x20
    1ff8:	88 2f       	mov	r24, r24
    1ffa:	90 e0       	ldi	r25, 0x00	; 0
    1ffc:	91 95       	neg	r25
    1ffe:	81 95       	neg	r24
    2000:	91 09       	sbc	r25, r1
    2002:	28 0f       	add	r18, r24
    2004:	39 1f       	adc	r19, r25
    2006:	8b 81       	ldd	r24, Y+3	; 0x03
    2008:	9c 81       	ldd	r25, Y+4	; 0x04
    200a:	fc 01       	movw	r30, r24
    200c:	26 83       	std	Z+6, r18	; 0x06
    200e:	37 83       	std	Z+7, r19	; 0x07
    2010:	8f 81       	ldd	r24, Y+7	; 0x07
    2012:	82 30       	cpi	r24, 0x02	; 2
    2014:	31 f4       	brne	.+12     	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    2016:	89 81       	ldd	r24, Y+1	; 0x01
    2018:	88 23       	and	r24, r24
    201a:	19 f0       	breq	.+6      	; 0x2022 <__DATA_REGION_LENGTH__+0x22>
    201c:	89 81       	ldd	r24, Y+1	; 0x01
    201e:	81 50       	subi	r24, 0x01	; 1
    2020:	89 83       	std	Y+1, r24	; 0x01
    2022:	89 81       	ldd	r24, Y+1	; 0x01
    2024:	21 e0       	ldi	r18, 0x01	; 1
    2026:	28 0f       	add	r18, r24
    2028:	8b 81       	ldd	r24, Y+3	; 0x03
    202a:	9c 81       	ldd	r25, Y+4	; 0x04
    202c:	fc 01       	movw	r30, r24
    202e:	26 8f       	std	Z+30, r18	; 0x1e
    2030:	8a 81       	ldd	r24, Y+2	; 0x02
    2032:	27 96       	adiw	r28, 0x07	; 7
    2034:	cd bf       	out	0x3d, r28	; 61
    2036:	de bf       	out	0x3e, r29	; 62
    2038:	df 91       	pop	r29
    203a:	cf 91       	pop	r28
    203c:	08 95       	ret

0000203e <prvCopyDataFromQueue>:
    203e:	cf 93       	push	r28
    2040:	df 93       	push	r29
    2042:	00 d0       	rcall	.+0      	; 0x2044 <prvCopyDataFromQueue+0x6>
    2044:	1f 92       	push	r1
    2046:	cd b7       	in	r28, 0x3d	; 61
    2048:	de b7       	in	r29, 0x3e	; 62
    204a:	89 83       	std	Y+1, r24	; 0x01
    204c:	9a 83       	std	Y+2, r25	; 0x02
    204e:	6b 83       	std	Y+3, r22	; 0x03
    2050:	7c 83       	std	Y+4, r23	; 0x04
    2052:	89 81       	ldd	r24, Y+1	; 0x01
    2054:	9a 81       	ldd	r25, Y+2	; 0x02
    2056:	fc 01       	movw	r30, r24
    2058:	80 a1       	ldd	r24, Z+32	; 0x20
    205a:	88 23       	and	r24, r24
    205c:	c9 f1       	breq	.+114    	; 0x20d0 <prvCopyDataFromQueue+0x92>
    205e:	89 81       	ldd	r24, Y+1	; 0x01
    2060:	9a 81       	ldd	r25, Y+2	; 0x02
    2062:	fc 01       	movw	r30, r24
    2064:	26 81       	ldd	r18, Z+6	; 0x06
    2066:	37 81       	ldd	r19, Z+7	; 0x07
    2068:	89 81       	ldd	r24, Y+1	; 0x01
    206a:	9a 81       	ldd	r25, Y+2	; 0x02
    206c:	fc 01       	movw	r30, r24
    206e:	80 a1       	ldd	r24, Z+32	; 0x20
    2070:	88 2f       	mov	r24, r24
    2072:	90 e0       	ldi	r25, 0x00	; 0
    2074:	28 0f       	add	r18, r24
    2076:	39 1f       	adc	r19, r25
    2078:	89 81       	ldd	r24, Y+1	; 0x01
    207a:	9a 81       	ldd	r25, Y+2	; 0x02
    207c:	fc 01       	movw	r30, r24
    207e:	26 83       	std	Z+6, r18	; 0x06
    2080:	37 83       	std	Z+7, r19	; 0x07
    2082:	89 81       	ldd	r24, Y+1	; 0x01
    2084:	9a 81       	ldd	r25, Y+2	; 0x02
    2086:	fc 01       	movw	r30, r24
    2088:	26 81       	ldd	r18, Z+6	; 0x06
    208a:	37 81       	ldd	r19, Z+7	; 0x07
    208c:	89 81       	ldd	r24, Y+1	; 0x01
    208e:	9a 81       	ldd	r25, Y+2	; 0x02
    2090:	fc 01       	movw	r30, r24
    2092:	82 81       	ldd	r24, Z+2	; 0x02
    2094:	93 81       	ldd	r25, Z+3	; 0x03
    2096:	28 17       	cp	r18, r24
    2098:	39 07       	cpc	r19, r25
    209a:	50 f0       	brcs	.+20     	; 0x20b0 <prvCopyDataFromQueue+0x72>
    209c:	89 81       	ldd	r24, Y+1	; 0x01
    209e:	9a 81       	ldd	r25, Y+2	; 0x02
    20a0:	fc 01       	movw	r30, r24
    20a2:	20 81       	ld	r18, Z
    20a4:	31 81       	ldd	r19, Z+1	; 0x01
    20a6:	89 81       	ldd	r24, Y+1	; 0x01
    20a8:	9a 81       	ldd	r25, Y+2	; 0x02
    20aa:	fc 01       	movw	r30, r24
    20ac:	26 83       	std	Z+6, r18	; 0x06
    20ae:	37 83       	std	Z+7, r19	; 0x07
    20b0:	89 81       	ldd	r24, Y+1	; 0x01
    20b2:	9a 81       	ldd	r25, Y+2	; 0x02
    20b4:	fc 01       	movw	r30, r24
    20b6:	80 a1       	ldd	r24, Z+32	; 0x20
    20b8:	48 2f       	mov	r20, r24
    20ba:	50 e0       	ldi	r21, 0x00	; 0
    20bc:	89 81       	ldd	r24, Y+1	; 0x01
    20be:	9a 81       	ldd	r25, Y+2	; 0x02
    20c0:	fc 01       	movw	r30, r24
    20c2:	26 81       	ldd	r18, Z+6	; 0x06
    20c4:	37 81       	ldd	r19, Z+7	; 0x07
    20c6:	8b 81       	ldd	r24, Y+3	; 0x03
    20c8:	9c 81       	ldd	r25, Y+4	; 0x04
    20ca:	b9 01       	movw	r22, r18
    20cc:	0e 94 f0 31 	call	0x63e0	; 0x63e0 <memcpy>
    20d0:	00 00       	nop
    20d2:	24 96       	adiw	r28, 0x04	; 4
    20d4:	cd bf       	out	0x3d, r28	; 61
    20d6:	de bf       	out	0x3e, r29	; 62
    20d8:	df 91       	pop	r29
    20da:	cf 91       	pop	r28
    20dc:	08 95       	ret

000020de <prvUnlockQueue>:
    20de:	cf 93       	push	r28
    20e0:	df 93       	push	r29
    20e2:	00 d0       	rcall	.+0      	; 0x20e4 <prvUnlockQueue+0x6>
    20e4:	1f 92       	push	r1
    20e6:	cd b7       	in	r28, 0x3d	; 61
    20e8:	de b7       	in	r29, 0x3e	; 62
    20ea:	8b 83       	std	Y+3, r24	; 0x03
    20ec:	9c 83       	std	Y+4, r25	; 0x04
    20ee:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    20f2:	ff 93       	push	r31
    20f4:	f8 7f       	andi	r31, 0xF8	; 248
    20f6:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    20fa:	8b 81       	ldd	r24, Y+3	; 0x03
    20fc:	9c 81       	ldd	r25, Y+4	; 0x04
    20fe:	fc 01       	movw	r30, r24
    2100:	82 a1       	ldd	r24, Z+34	; 0x22
    2102:	89 83       	std	Y+1, r24	; 0x01
    2104:	12 c0       	rjmp	.+36     	; 0x212a <prvUnlockQueue+0x4c>
    2106:	8b 81       	ldd	r24, Y+3	; 0x03
    2108:	9c 81       	ldd	r25, Y+4	; 0x04
    210a:	fc 01       	movw	r30, r24
    210c:	83 89       	ldd	r24, Z+19	; 0x13
    210e:	88 23       	and	r24, r24
    2110:	81 f0       	breq	.+32     	; 0x2132 <prvUnlockQueue+0x54>
    2112:	8b 81       	ldd	r24, Y+3	; 0x03
    2114:	9c 81       	ldd	r25, Y+4	; 0x04
    2116:	43 96       	adiw	r24, 0x13	; 19
    2118:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <xTaskRemoveFromEventList>
    211c:	88 23       	and	r24, r24
    211e:	11 f0       	breq	.+4      	; 0x2124 <prvUnlockQueue+0x46>
    2120:	0e 94 91 18 	call	0x3122	; 0x3122 <vTaskMissedYield>
    2124:	89 81       	ldd	r24, Y+1	; 0x01
    2126:	81 50       	subi	r24, 0x01	; 1
    2128:	89 83       	std	Y+1, r24	; 0x01
    212a:	89 81       	ldd	r24, Y+1	; 0x01
    212c:	18 16       	cp	r1, r24
    212e:	5c f3       	brlt	.-42     	; 0x2106 <prvUnlockQueue+0x28>
    2130:	01 c0       	rjmp	.+2      	; 0x2134 <prvUnlockQueue+0x56>
    2132:	00 00       	nop
    2134:	8b 81       	ldd	r24, Y+3	; 0x03
    2136:	9c 81       	ldd	r25, Y+4	; 0x04
    2138:	2f ef       	ldi	r18, 0xFF	; 255
    213a:	fc 01       	movw	r30, r24
    213c:	22 a3       	std	Z+34, r18	; 0x22
    213e:	ff 91       	pop	r31
    2140:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2144:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2148:	ff 93       	push	r31
    214a:	f8 7f       	andi	r31, 0xF8	; 248
    214c:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2150:	8b 81       	ldd	r24, Y+3	; 0x03
    2152:	9c 81       	ldd	r25, Y+4	; 0x04
    2154:	fc 01       	movw	r30, r24
    2156:	81 a1       	ldd	r24, Z+33	; 0x21
    2158:	8a 83       	std	Y+2, r24	; 0x02
    215a:	12 c0       	rjmp	.+36     	; 0x2180 <prvUnlockQueue+0xa2>
    215c:	8b 81       	ldd	r24, Y+3	; 0x03
    215e:	9c 81       	ldd	r25, Y+4	; 0x04
    2160:	fc 01       	movw	r30, r24
    2162:	80 85       	ldd	r24, Z+8	; 0x08
    2164:	88 23       	and	r24, r24
    2166:	81 f0       	breq	.+32     	; 0x2188 <prvUnlockQueue+0xaa>
    2168:	8b 81       	ldd	r24, Y+3	; 0x03
    216a:	9c 81       	ldd	r25, Y+4	; 0x04
    216c:	08 96       	adiw	r24, 0x08	; 8
    216e:	0e 94 fb 16 	call	0x2df6	; 0x2df6 <xTaskRemoveFromEventList>
    2172:	88 23       	and	r24, r24
    2174:	11 f0       	breq	.+4      	; 0x217a <prvUnlockQueue+0x9c>
    2176:	0e 94 91 18 	call	0x3122	; 0x3122 <vTaskMissedYield>
    217a:	8a 81       	ldd	r24, Y+2	; 0x02
    217c:	81 50       	subi	r24, 0x01	; 1
    217e:	8a 83       	std	Y+2, r24	; 0x02
    2180:	8a 81       	ldd	r24, Y+2	; 0x02
    2182:	18 16       	cp	r1, r24
    2184:	5c f3       	brlt	.-42     	; 0x215c <prvUnlockQueue+0x7e>
    2186:	01 c0       	rjmp	.+2      	; 0x218a <prvUnlockQueue+0xac>
    2188:	00 00       	nop
    218a:	8b 81       	ldd	r24, Y+3	; 0x03
    218c:	9c 81       	ldd	r25, Y+4	; 0x04
    218e:	2f ef       	ldi	r18, 0xFF	; 255
    2190:	fc 01       	movw	r30, r24
    2192:	21 a3       	std	Z+33, r18	; 0x21
    2194:	ff 91       	pop	r31
    2196:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    219a:	00 00       	nop
    219c:	24 96       	adiw	r28, 0x04	; 4
    219e:	cd bf       	out	0x3d, r28	; 61
    21a0:	de bf       	out	0x3e, r29	; 62
    21a2:	df 91       	pop	r29
    21a4:	cf 91       	pop	r28
    21a6:	08 95       	ret

000021a8 <prvIsQueueEmpty>:
    21a8:	cf 93       	push	r28
    21aa:	df 93       	push	r29
    21ac:	00 d0       	rcall	.+0      	; 0x21ae <prvIsQueueEmpty+0x6>
    21ae:	cd b7       	in	r28, 0x3d	; 61
    21b0:	de b7       	in	r29, 0x3e	; 62
    21b2:	8a 83       	std	Y+2, r24	; 0x02
    21b4:	9b 83       	std	Y+3, r25	; 0x03
    21b6:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    21ba:	ff 93       	push	r31
    21bc:	f8 7f       	andi	r31, 0xF8	; 248
    21be:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    21c2:	8a 81       	ldd	r24, Y+2	; 0x02
    21c4:	9b 81       	ldd	r25, Y+3	; 0x03
    21c6:	fc 01       	movw	r30, r24
    21c8:	86 8d       	ldd	r24, Z+30	; 0x1e
    21ca:	88 23       	and	r24, r24
    21cc:	19 f4       	brne	.+6      	; 0x21d4 <prvIsQueueEmpty+0x2c>
    21ce:	81 e0       	ldi	r24, 0x01	; 1
    21d0:	89 83       	std	Y+1, r24	; 0x01
    21d2:	01 c0       	rjmp	.+2      	; 0x21d6 <prvIsQueueEmpty+0x2e>
    21d4:	19 82       	std	Y+1, r1	; 0x01
    21d6:	ff 91       	pop	r31
    21d8:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    21dc:	89 81       	ldd	r24, Y+1	; 0x01
    21de:	23 96       	adiw	r28, 0x03	; 3
    21e0:	cd bf       	out	0x3d, r28	; 61
    21e2:	de bf       	out	0x3e, r29	; 62
    21e4:	df 91       	pop	r29
    21e6:	cf 91       	pop	r28
    21e8:	08 95       	ret

000021ea <prvIsQueueFull>:
    21ea:	cf 93       	push	r28
    21ec:	df 93       	push	r29
    21ee:	00 d0       	rcall	.+0      	; 0x21f0 <prvIsQueueFull+0x6>
    21f0:	cd b7       	in	r28, 0x3d	; 61
    21f2:	de b7       	in	r29, 0x3e	; 62
    21f4:	8a 83       	std	Y+2, r24	; 0x02
    21f6:	9b 83       	std	Y+3, r25	; 0x03
    21f8:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    21fc:	ff 93       	push	r31
    21fe:	f8 7f       	andi	r31, 0xF8	; 248
    2200:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2204:	8a 81       	ldd	r24, Y+2	; 0x02
    2206:	9b 81       	ldd	r25, Y+3	; 0x03
    2208:	fc 01       	movw	r30, r24
    220a:	26 8d       	ldd	r18, Z+30	; 0x1e
    220c:	8a 81       	ldd	r24, Y+2	; 0x02
    220e:	9b 81       	ldd	r25, Y+3	; 0x03
    2210:	fc 01       	movw	r30, r24
    2212:	87 8d       	ldd	r24, Z+31	; 0x1f
    2214:	28 17       	cp	r18, r24
    2216:	19 f4       	brne	.+6      	; 0x221e <prvIsQueueFull+0x34>
    2218:	81 e0       	ldi	r24, 0x01	; 1
    221a:	89 83       	std	Y+1, r24	; 0x01
    221c:	01 c0       	rjmp	.+2      	; 0x2220 <prvIsQueueFull+0x36>
    221e:	19 82       	std	Y+1, r1	; 0x01
    2220:	ff 91       	pop	r31
    2222:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2226:	89 81       	ldd	r24, Y+1	; 0x01
    2228:	23 96       	adiw	r28, 0x03	; 3
    222a:	cd bf       	out	0x3d, r28	; 61
    222c:	de bf       	out	0x3e, r29	; 62
    222e:	df 91       	pop	r29
    2230:	cf 91       	pop	r28
    2232:	08 95       	ret

00002234 <vQueueWaitForMessageRestricted>:
    2234:	cf 93       	push	r28
    2236:	df 93       	push	r29
    2238:	cd b7       	in	r28, 0x3d	; 61
    223a:	de b7       	in	r29, 0x3e	; 62
    223c:	29 97       	sbiw	r28, 0x09	; 9
    223e:	cd bf       	out	0x3d, r28	; 61
    2240:	de bf       	out	0x3e, r29	; 62
    2242:	8b 83       	std	Y+3, r24	; 0x03
    2244:	9c 83       	std	Y+4, r25	; 0x04
    2246:	4d 83       	std	Y+5, r20	; 0x05
    2248:	5e 83       	std	Y+6, r21	; 0x06
    224a:	6f 83       	std	Y+7, r22	; 0x07
    224c:	78 87       	std	Y+8, r23	; 0x08
    224e:	29 87       	std	Y+9, r18	; 0x09
    2250:	8b 81       	ldd	r24, Y+3	; 0x03
    2252:	9c 81       	ldd	r25, Y+4	; 0x04
    2254:	89 83       	std	Y+1, r24	; 0x01
    2256:	9a 83       	std	Y+2, r25	; 0x02
    2258:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    225c:	ff 93       	push	r31
    225e:	f8 7f       	andi	r31, 0xF8	; 248
    2260:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2264:	89 81       	ldd	r24, Y+1	; 0x01
    2266:	9a 81       	ldd	r25, Y+2	; 0x02
    2268:	fc 01       	movw	r30, r24
    226a:	81 a1       	ldd	r24, Z+33	; 0x21
    226c:	8f 3f       	cpi	r24, 0xFF	; 255
    226e:	21 f4       	brne	.+8      	; 0x2278 <vQueueWaitForMessageRestricted+0x44>
    2270:	89 81       	ldd	r24, Y+1	; 0x01
    2272:	9a 81       	ldd	r25, Y+2	; 0x02
    2274:	fc 01       	movw	r30, r24
    2276:	11 a2       	std	Z+33, r1	; 0x21
    2278:	89 81       	ldd	r24, Y+1	; 0x01
    227a:	9a 81       	ldd	r25, Y+2	; 0x02
    227c:	fc 01       	movw	r30, r24
    227e:	82 a1       	ldd	r24, Z+34	; 0x22
    2280:	8f 3f       	cpi	r24, 0xFF	; 255
    2282:	21 f4       	brne	.+8      	; 0x228c <vQueueWaitForMessageRestricted+0x58>
    2284:	89 81       	ldd	r24, Y+1	; 0x01
    2286:	9a 81       	ldd	r25, Y+2	; 0x02
    2288:	fc 01       	movw	r30, r24
    228a:	12 a2       	std	Z+34, r1	; 0x22
    228c:	ff 91       	pop	r31
    228e:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2292:	89 81       	ldd	r24, Y+1	; 0x01
    2294:	9a 81       	ldd	r25, Y+2	; 0x02
    2296:	fc 01       	movw	r30, r24
    2298:	86 8d       	ldd	r24, Z+30	; 0x1e
    229a:	88 23       	and	r24, r24
    229c:	71 f4       	brne	.+28     	; 0x22ba <vQueueWaitForMessageRestricted+0x86>
    229e:	89 81       	ldd	r24, Y+1	; 0x01
    22a0:	9a 81       	ldd	r25, Y+2	; 0x02
    22a2:	fc 01       	movw	r30, r24
    22a4:	73 96       	adiw	r30, 0x13	; 19
    22a6:	8d 81       	ldd	r24, Y+5	; 0x05
    22a8:	9e 81       	ldd	r25, Y+6	; 0x06
    22aa:	af 81       	ldd	r26, Y+7	; 0x07
    22ac:	b8 85       	ldd	r27, Y+8	; 0x08
    22ae:	29 85       	ldd	r18, Y+9	; 0x09
    22b0:	ac 01       	movw	r20, r24
    22b2:	bd 01       	movw	r22, r26
    22b4:	cf 01       	movw	r24, r30
    22b6:	0e 94 c7 16 	call	0x2d8e	; 0x2d8e <vTaskPlaceOnEventListRestricted>
    22ba:	89 81       	ldd	r24, Y+1	; 0x01
    22bc:	9a 81       	ldd	r25, Y+2	; 0x02
    22be:	0e 94 6f 10 	call	0x20de	; 0x20de <prvUnlockQueue>
    22c2:	00 00       	nop
    22c4:	29 96       	adiw	r28, 0x09	; 9
    22c6:	cd bf       	out	0x3d, r28	; 61
    22c8:	de bf       	out	0x3e, r29	; 62
    22ca:	df 91       	pop	r29
    22cc:	cf 91       	pop	r28
    22ce:	08 95       	ret

000022d0 <xTaskCreate>:
    22d0:	8f 92       	push	r8
    22d2:	9f 92       	push	r9
    22d4:	af 92       	push	r10
    22d6:	bf 92       	push	r11
    22d8:	cf 92       	push	r12
    22da:	df 92       	push	r13
    22dc:	ef 92       	push	r14
    22de:	ff 92       	push	r15
    22e0:	0f 93       	push	r16
    22e2:	1f 93       	push	r17
    22e4:	cf 93       	push	r28
    22e6:	df 93       	push	r29
    22e8:	cd b7       	in	r28, 0x3d	; 61
    22ea:	de b7       	in	r29, 0x3e	; 62
    22ec:	60 97       	sbiw	r28, 0x10	; 16
    22ee:	cd bf       	out	0x3d, r28	; 61
    22f0:	de bf       	out	0x3e, r29	; 62
    22f2:	8e 83       	std	Y+6, r24	; 0x06
    22f4:	9f 83       	std	Y+7, r25	; 0x07
    22f6:	68 87       	std	Y+8, r22	; 0x08
    22f8:	79 87       	std	Y+9, r23	; 0x09
    22fa:	4a 87       	std	Y+10, r20	; 0x0a
    22fc:	5b 87       	std	Y+11, r21	; 0x0b
    22fe:	2c 87       	std	Y+12, r18	; 0x0c
    2300:	3d 87       	std	Y+13, r19	; 0x0d
    2302:	0e 87       	std	Y+14, r16	; 0x0e
    2304:	ef 86       	std	Y+15, r14	; 0x0f
    2306:	f8 8a       	std	Y+16, r15	; 0x10
    2308:	8a 85       	ldd	r24, Y+10	; 0x0a
    230a:	9b 85       	ldd	r25, Y+11	; 0x0b
    230c:	0e 94 18 07 	call	0xe30	; 0xe30 <pvPortMalloc>
    2310:	8c 83       	std	Y+4, r24	; 0x04
    2312:	9d 83       	std	Y+5, r25	; 0x05
    2314:	8c 81       	ldd	r24, Y+4	; 0x04
    2316:	9d 81       	ldd	r25, Y+5	; 0x05
    2318:	89 2b       	or	r24, r25
    231a:	b9 f0       	breq	.+46     	; 0x234a <xTaskCreate+0x7a>
    231c:	8c e2       	ldi	r24, 0x2C	; 44
    231e:	90 e0       	ldi	r25, 0x00	; 0
    2320:	0e 94 18 07 	call	0xe30	; 0xe30 <pvPortMalloc>
    2324:	89 83       	std	Y+1, r24	; 0x01
    2326:	9a 83       	std	Y+2, r25	; 0x02
    2328:	89 81       	ldd	r24, Y+1	; 0x01
    232a:	9a 81       	ldd	r25, Y+2	; 0x02
    232c:	89 2b       	or	r24, r25
    232e:	41 f0       	breq	.+16     	; 0x2340 <xTaskCreate+0x70>
    2330:	89 81       	ldd	r24, Y+1	; 0x01
    2332:	9a 81       	ldd	r25, Y+2	; 0x02
    2334:	2c 81       	ldd	r18, Y+4	; 0x04
    2336:	3d 81       	ldd	r19, Y+5	; 0x05
    2338:	fc 01       	movw	r30, r24
    233a:	23 8f       	std	Z+27, r18	; 0x1b
    233c:	34 8f       	std	Z+28, r19	; 0x1c
    233e:	07 c0       	rjmp	.+14     	; 0x234e <xTaskCreate+0x7e>
    2340:	8c 81       	ldd	r24, Y+4	; 0x04
    2342:	9d 81       	ldd	r25, Y+5	; 0x05
    2344:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <vPortFree>
    2348:	02 c0       	rjmp	.+4      	; 0x234e <xTaskCreate+0x7e>
    234a:	19 82       	std	Y+1, r1	; 0x01
    234c:	1a 82       	std	Y+2, r1	; 0x02
    234e:	89 81       	ldd	r24, Y+1	; 0x01
    2350:	9a 81       	ldd	r25, Y+2	; 0x02
    2352:	89 2b       	or	r24, r25
    2354:	09 f1       	breq	.+66     	; 0x2398 <xTaskCreate+0xc8>
    2356:	8a 85       	ldd	r24, Y+10	; 0x0a
    2358:	9b 85       	ldd	r25, Y+11	; 0x0b
    235a:	cc 01       	movw	r24, r24
    235c:	a0 e0       	ldi	r26, 0x00	; 0
    235e:	b0 e0       	ldi	r27, 0x00	; 0
    2360:	09 81       	ldd	r16, Y+1	; 0x01
    2362:	1a 81       	ldd	r17, Y+2	; 0x02
    2364:	4f 85       	ldd	r20, Y+15	; 0x0f
    2366:	58 89       	ldd	r21, Y+16	; 0x10
    2368:	2c 85       	ldd	r18, Y+12	; 0x0c
    236a:	3d 85       	ldd	r19, Y+13	; 0x0d
    236c:	68 85       	ldd	r22, Y+8	; 0x08
    236e:	79 85       	ldd	r23, Y+9	; 0x09
    2370:	ee 81       	ldd	r30, Y+6	; 0x06
    2372:	ff 81       	ldd	r31, Y+7	; 0x07
    2374:	81 2c       	mov	r8, r1
    2376:	91 2c       	mov	r9, r1
    2378:	58 01       	movw	r10, r16
    237a:	6a 01       	movw	r12, r20
    237c:	ee 84       	ldd	r14, Y+14	; 0x0e
    237e:	89 01       	movw	r16, r18
    2380:	9c 01       	movw	r18, r24
    2382:	ad 01       	movw	r20, r26
    2384:	cf 01       	movw	r24, r30
    2386:	0e 94 df 11 	call	0x23be	; 0x23be <prvInitialiseNewTask>
    238a:	89 81       	ldd	r24, Y+1	; 0x01
    238c:	9a 81       	ldd	r25, Y+2	; 0x02
    238e:	0e 94 b5 12 	call	0x256a	; 0x256a <prvAddNewTaskToReadyList>
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	8b 83       	std	Y+3, r24	; 0x03
    2396:	02 c0       	rjmp	.+4      	; 0x239c <xTaskCreate+0xcc>
    2398:	8f ef       	ldi	r24, 0xFF	; 255
    239a:	8b 83       	std	Y+3, r24	; 0x03
    239c:	8b 81       	ldd	r24, Y+3	; 0x03
    239e:	60 96       	adiw	r28, 0x10	; 16
    23a0:	cd bf       	out	0x3d, r28	; 61
    23a2:	de bf       	out	0x3e, r29	; 62
    23a4:	df 91       	pop	r29
    23a6:	cf 91       	pop	r28
    23a8:	1f 91       	pop	r17
    23aa:	0f 91       	pop	r16
    23ac:	ff 90       	pop	r15
    23ae:	ef 90       	pop	r14
    23b0:	df 90       	pop	r13
    23b2:	cf 90       	pop	r12
    23b4:	bf 90       	pop	r11
    23b6:	af 90       	pop	r10
    23b8:	9f 90       	pop	r9
    23ba:	8f 90       	pop	r8
    23bc:	08 95       	ret

000023be <prvInitialiseNewTask>:
    23be:	8f 92       	push	r8
    23c0:	9f 92       	push	r9
    23c2:	af 92       	push	r10
    23c4:	bf 92       	push	r11
    23c6:	cf 92       	push	r12
    23c8:	df 92       	push	r13
    23ca:	ef 92       	push	r14
    23cc:	ff 92       	push	r15
    23ce:	0f 93       	push	r16
    23d0:	1f 93       	push	r17
    23d2:	cf 93       	push	r28
    23d4:	df 93       	push	r29
    23d6:	cd b7       	in	r28, 0x3d	; 61
    23d8:	de b7       	in	r29, 0x3e	; 62
    23da:	64 97       	sbiw	r28, 0x14	; 20
    23dc:	cd bf       	out	0x3d, r28	; 61
    23de:	de bf       	out	0x3e, r29	; 62
    23e0:	8c 83       	std	Y+4, r24	; 0x04
    23e2:	9d 83       	std	Y+5, r25	; 0x05
    23e4:	6e 83       	std	Y+6, r22	; 0x06
    23e6:	7f 83       	std	Y+7, r23	; 0x07
    23e8:	28 87       	std	Y+8, r18	; 0x08
    23ea:	39 87       	std	Y+9, r19	; 0x09
    23ec:	4a 87       	std	Y+10, r20	; 0x0a
    23ee:	5b 87       	std	Y+11, r21	; 0x0b
    23f0:	0c 87       	std	Y+12, r16	; 0x0c
    23f2:	1d 87       	std	Y+13, r17	; 0x0d
    23f4:	ee 86       	std	Y+14, r14	; 0x0e
    23f6:	cf 86       	std	Y+15, r12	; 0x0f
    23f8:	d8 8a       	std	Y+16, r13	; 0x10
    23fa:	a9 8a       	std	Y+17, r10	; 0x11
    23fc:	ba 8a       	std	Y+18, r11	; 0x12
    23fe:	8b 8a       	std	Y+19, r8	; 0x13
    2400:	9c 8a       	std	Y+20, r9	; 0x14
    2402:	28 85       	ldd	r18, Y+8	; 0x08
    2404:	39 85       	ldd	r19, Y+9	; 0x09
    2406:	89 89       	ldd	r24, Y+17	; 0x11
    2408:	9a 89       	ldd	r25, Y+18	; 0x12
    240a:	fc 01       	movw	r30, r24
    240c:	83 8d       	ldd	r24, Z+27	; 0x1b
    240e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2410:	a9 01       	movw	r20, r18
    2412:	65 ea       	ldi	r22, 0xA5	; 165
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	0e 94 f9 31 	call	0x63f2	; 0x63f2 <memset>
    241a:	89 89       	ldd	r24, Y+17	; 0x11
    241c:	9a 89       	ldd	r25, Y+18	; 0x12
    241e:	fc 01       	movw	r30, r24
    2420:	23 8d       	ldd	r18, Z+27	; 0x1b
    2422:	34 8d       	ldd	r19, Z+28	; 0x1c
    2424:	88 85       	ldd	r24, Y+8	; 0x08
    2426:	99 85       	ldd	r25, Y+9	; 0x09
    2428:	01 97       	sbiw	r24, 0x01	; 1
    242a:	82 0f       	add	r24, r18
    242c:	93 1f       	adc	r25, r19
    242e:	8a 83       	std	Y+2, r24	; 0x02
    2430:	9b 83       	std	Y+3, r25	; 0x03
    2432:	19 82       	std	Y+1, r1	; 0x01
    2434:	21 c0       	rjmp	.+66     	; 0x2478 <prvInitialiseNewTask+0xba>
    2436:	89 81       	ldd	r24, Y+1	; 0x01
    2438:	88 2f       	mov	r24, r24
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	29 81       	ldd	r18, Y+1	; 0x01
    243e:	22 2f       	mov	r18, r18
    2440:	30 e0       	ldi	r19, 0x00	; 0
    2442:	4e 81       	ldd	r20, Y+6	; 0x06
    2444:	5f 81       	ldd	r21, Y+7	; 0x07
    2446:	24 0f       	add	r18, r20
    2448:	35 1f       	adc	r19, r21
    244a:	f9 01       	movw	r30, r18
    244c:	40 81       	ld	r20, Z
    244e:	29 89       	ldd	r18, Y+17	; 0x11
    2450:	3a 89       	ldd	r19, Y+18	; 0x12
    2452:	82 0f       	add	r24, r18
    2454:	93 1f       	adc	r25, r19
    2456:	4d 96       	adiw	r24, 0x1d	; 29
    2458:	fc 01       	movw	r30, r24
    245a:	40 83       	st	Z, r20
    245c:	89 81       	ldd	r24, Y+1	; 0x01
    245e:	88 2f       	mov	r24, r24
    2460:	90 e0       	ldi	r25, 0x00	; 0
    2462:	2e 81       	ldd	r18, Y+6	; 0x06
    2464:	3f 81       	ldd	r19, Y+7	; 0x07
    2466:	82 0f       	add	r24, r18
    2468:	93 1f       	adc	r25, r19
    246a:	fc 01       	movw	r30, r24
    246c:	80 81       	ld	r24, Z
    246e:	88 23       	and	r24, r24
    2470:	39 f0       	breq	.+14     	; 0x2480 <prvInitialiseNewTask+0xc2>
    2472:	89 81       	ldd	r24, Y+1	; 0x01
    2474:	8f 5f       	subi	r24, 0xFF	; 255
    2476:	89 83       	std	Y+1, r24	; 0x01
    2478:	89 81       	ldd	r24, Y+1	; 0x01
    247a:	88 30       	cpi	r24, 0x08	; 8
    247c:	e0 f2       	brcs	.-72     	; 0x2436 <prvInitialiseNewTask+0x78>
    247e:	01 c0       	rjmp	.+2      	; 0x2482 <prvInitialiseNewTask+0xc4>
    2480:	00 00       	nop
    2482:	89 89       	ldd	r24, Y+17	; 0x11
    2484:	9a 89       	ldd	r25, Y+18	; 0x12
    2486:	fc 01       	movw	r30, r24
    2488:	14 a2       	std	Z+36, r1	; 0x24
    248a:	8e 85       	ldd	r24, Y+14	; 0x0e
    248c:	84 30       	cpi	r24, 0x04	; 4
    248e:	10 f0       	brcs	.+4      	; 0x2494 <prvInitialiseNewTask+0xd6>
    2490:	83 e0       	ldi	r24, 0x03	; 3
    2492:	8e 87       	std	Y+14, r24	; 0x0e
    2494:	89 89       	ldd	r24, Y+17	; 0x11
    2496:	9a 89       	ldd	r25, Y+18	; 0x12
    2498:	2e 85       	ldd	r18, Y+14	; 0x0e
    249a:	fc 01       	movw	r30, r24
    249c:	22 8f       	std	Z+26, r18	; 0x1a
    249e:	89 89       	ldd	r24, Y+17	; 0x11
    24a0:	9a 89       	ldd	r25, Y+18	; 0x12
    24a2:	02 96       	adiw	r24, 0x02	; 2
    24a4:	0e 94 a4 07 	call	0xf48	; 0xf48 <vListInitialiseItem>
    24a8:	89 89       	ldd	r24, Y+17	; 0x11
    24aa:	9a 89       	ldd	r25, Y+18	; 0x12
    24ac:	0e 96       	adiw	r24, 0x0e	; 14
    24ae:	0e 94 a4 07 	call	0xf48	; 0xf48 <vListInitialiseItem>
    24b2:	89 89       	ldd	r24, Y+17	; 0x11
    24b4:	9a 89       	ldd	r25, Y+18	; 0x12
    24b6:	29 89       	ldd	r18, Y+17	; 0x11
    24b8:	3a 89       	ldd	r19, Y+18	; 0x12
    24ba:	fc 01       	movw	r30, r24
    24bc:	22 87       	std	Z+10, r18	; 0x0a
    24be:	33 87       	std	Z+11, r19	; 0x0b
    24c0:	8e 85       	ldd	r24, Y+14	; 0x0e
    24c2:	88 2f       	mov	r24, r24
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	a0 e0       	ldi	r26, 0x00	; 0
    24c8:	b0 e0       	ldi	r27, 0x00	; 0
    24ca:	24 e0       	ldi	r18, 0x04	; 4
    24cc:	30 e0       	ldi	r19, 0x00	; 0
    24ce:	40 e0       	ldi	r20, 0x00	; 0
    24d0:	50 e0       	ldi	r21, 0x00	; 0
    24d2:	79 01       	movw	r14, r18
    24d4:	8a 01       	movw	r16, r20
    24d6:	e8 1a       	sub	r14, r24
    24d8:	f9 0a       	sbc	r15, r25
    24da:	0a 0b       	sbc	r16, r26
    24dc:	1b 0b       	sbc	r17, r27
    24de:	d8 01       	movw	r26, r16
    24e0:	c7 01       	movw	r24, r14
    24e2:	29 89       	ldd	r18, Y+17	; 0x11
    24e4:	3a 89       	ldd	r19, Y+18	; 0x12
    24e6:	f9 01       	movw	r30, r18
    24e8:	86 87       	std	Z+14, r24	; 0x0e
    24ea:	97 87       	std	Z+15, r25	; 0x0f
    24ec:	a0 8b       	std	Z+16, r26	; 0x10
    24ee:	b1 8b       	std	Z+17, r27	; 0x11
    24f0:	89 89       	ldd	r24, Y+17	; 0x11
    24f2:	9a 89       	ldd	r25, Y+18	; 0x12
    24f4:	29 89       	ldd	r18, Y+17	; 0x11
    24f6:	3a 89       	ldd	r19, Y+18	; 0x12
    24f8:	fc 01       	movw	r30, r24
    24fa:	26 8b       	std	Z+22, r18	; 0x16
    24fc:	37 8b       	std	Z+23, r19	; 0x17
    24fe:	89 89       	ldd	r24, Y+17	; 0x11
    2500:	9a 89       	ldd	r25, Y+18	; 0x12
    2502:	fc 01       	movw	r30, r24
    2504:	17 a2       	std	Z+39, r1	; 0x27
    2506:	10 a6       	std	Z+40, r1	; 0x28
    2508:	11 a6       	std	Z+41, r1	; 0x29
    250a:	12 a6       	std	Z+42, r1	; 0x2a
    250c:	89 89       	ldd	r24, Y+17	; 0x11
    250e:	9a 89       	ldd	r25, Y+18	; 0x12
    2510:	fc 01       	movw	r30, r24
    2512:	13 a6       	std	Z+43, r1	; 0x2b
    2514:	4c 85       	ldd	r20, Y+12	; 0x0c
    2516:	5d 85       	ldd	r21, Y+13	; 0x0d
    2518:	2c 81       	ldd	r18, Y+4	; 0x04
    251a:	3d 81       	ldd	r19, Y+5	; 0x05
    251c:	8a 81       	ldd	r24, Y+2	; 0x02
    251e:	9b 81       	ldd	r25, Y+3	; 0x03
    2520:	b9 01       	movw	r22, r18
    2522:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <pxPortInitialiseStack>
    2526:	9c 01       	movw	r18, r24
    2528:	89 89       	ldd	r24, Y+17	; 0x11
    252a:	9a 89       	ldd	r25, Y+18	; 0x12
    252c:	fc 01       	movw	r30, r24
    252e:	20 83       	st	Z, r18
    2530:	31 83       	std	Z+1, r19	; 0x01
    2532:	8f 85       	ldd	r24, Y+15	; 0x0f
    2534:	98 89       	ldd	r25, Y+16	; 0x10
    2536:	89 2b       	or	r24, r25
    2538:	39 f0       	breq	.+14     	; 0x2548 <prvInitialiseNewTask+0x18a>
    253a:	8f 85       	ldd	r24, Y+15	; 0x0f
    253c:	98 89       	ldd	r25, Y+16	; 0x10
    253e:	29 89       	ldd	r18, Y+17	; 0x11
    2540:	3a 89       	ldd	r19, Y+18	; 0x12
    2542:	fc 01       	movw	r30, r24
    2544:	20 83       	st	Z, r18
    2546:	31 83       	std	Z+1, r19	; 0x01
    2548:	00 00       	nop
    254a:	64 96       	adiw	r28, 0x14	; 20
    254c:	cd bf       	out	0x3d, r28	; 61
    254e:	de bf       	out	0x3e, r29	; 62
    2550:	df 91       	pop	r29
    2552:	cf 91       	pop	r28
    2554:	1f 91       	pop	r17
    2556:	0f 91       	pop	r16
    2558:	ff 90       	pop	r15
    255a:	ef 90       	pop	r14
    255c:	df 90       	pop	r13
    255e:	cf 90       	pop	r12
    2560:	bf 90       	pop	r11
    2562:	af 90       	pop	r10
    2564:	9f 90       	pop	r9
    2566:	8f 90       	pop	r8
    2568:	08 95       	ret

0000256a <prvAddNewTaskToReadyList>:
    256a:	cf 93       	push	r28
    256c:	df 93       	push	r29
    256e:	1f 92       	push	r1
    2570:	1f 92       	push	r1
    2572:	cd b7       	in	r28, 0x3d	; 61
    2574:	de b7       	in	r29, 0x3e	; 62
    2576:	89 83       	std	Y+1, r24	; 0x01
    2578:	9a 83       	std	Y+2, r25	; 0x02
    257a:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    257e:	ff 93       	push	r31
    2580:	f8 7f       	andi	r31, 0xF8	; 248
    2582:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2586:	80 91 e0 2c 	lds	r24, 0x2CE0	; 0x802ce0 <uxCurrentNumberOfTasks>
    258a:	8f 5f       	subi	r24, 0xFF	; 255
    258c:	80 93 e0 2c 	sts	0x2CE0, r24	; 0x802ce0 <uxCurrentNumberOfTasks>
    2590:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2594:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2598:	89 2b       	or	r24, r25
    259a:	69 f4       	brne	.+26     	; 0x25b6 <prvAddNewTaskToReadyList+0x4c>
    259c:	89 81       	ldd	r24, Y+1	; 0x01
    259e:	9a 81       	ldd	r25, Y+2	; 0x02
    25a0:	80 93 82 2c 	sts	0x2C82, r24	; 0x802c82 <pxCurrentTCB>
    25a4:	90 93 83 2c 	sts	0x2C83, r25	; 0x802c83 <pxCurrentTCB+0x1>
    25a8:	80 91 e0 2c 	lds	r24, 0x2CE0	; 0x802ce0 <uxCurrentNumberOfTasks>
    25ac:	81 30       	cpi	r24, 0x01	; 1
    25ae:	c9 f4       	brne	.+50     	; 0x25e2 <prvAddNewTaskToReadyList+0x78>
    25b0:	0e 94 ad 18 	call	0x315a	; 0x315a <prvInitialiseTaskLists>
    25b4:	16 c0       	rjmp	.+44     	; 0x25e2 <prvAddNewTaskToReadyList+0x78>
    25b6:	80 91 e6 2c 	lds	r24, 0x2CE6	; 0x802ce6 <xSchedulerRunning>
    25ba:	88 23       	and	r24, r24
    25bc:	91 f4       	brne	.+36     	; 0x25e2 <prvAddNewTaskToReadyList+0x78>
    25be:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    25c2:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    25c6:	fc 01       	movw	r30, r24
    25c8:	22 8d       	ldd	r18, Z+26	; 0x1a
    25ca:	89 81       	ldd	r24, Y+1	; 0x01
    25cc:	9a 81       	ldd	r25, Y+2	; 0x02
    25ce:	fc 01       	movw	r30, r24
    25d0:	82 8d       	ldd	r24, Z+26	; 0x1a
    25d2:	82 17       	cp	r24, r18
    25d4:	30 f0       	brcs	.+12     	; 0x25e2 <prvAddNewTaskToReadyList+0x78>
    25d6:	89 81       	ldd	r24, Y+1	; 0x01
    25d8:	9a 81       	ldd	r25, Y+2	; 0x02
    25da:	80 93 82 2c 	sts	0x2C82, r24	; 0x802c82 <pxCurrentTCB>
    25de:	90 93 83 2c 	sts	0x2C83, r25	; 0x802c83 <pxCurrentTCB+0x1>
    25e2:	80 91 ea 2c 	lds	r24, 0x2CEA	; 0x802cea <uxTaskNumber>
    25e6:	8f 5f       	subi	r24, 0xFF	; 255
    25e8:	80 93 ea 2c 	sts	0x2CEA, r24	; 0x802cea <uxTaskNumber>
    25ec:	20 91 ea 2c 	lds	r18, 0x2CEA	; 0x802cea <uxTaskNumber>
    25f0:	89 81       	ldd	r24, Y+1	; 0x01
    25f2:	9a 81       	ldd	r25, Y+2	; 0x02
    25f4:	fc 01       	movw	r30, r24
    25f6:	25 a3       	std	Z+37, r18	; 0x25
    25f8:	89 81       	ldd	r24, Y+1	; 0x01
    25fa:	9a 81       	ldd	r25, Y+2	; 0x02
    25fc:	fc 01       	movw	r30, r24
    25fe:	92 8d       	ldd	r25, Z+26	; 0x1a
    2600:	80 91 e5 2c 	lds	r24, 0x2CE5	; 0x802ce5 <uxTopReadyPriority>
    2604:	89 17       	cp	r24, r25
    2606:	30 f4       	brcc	.+12     	; 0x2614 <prvAddNewTaskToReadyList+0xaa>
    2608:	89 81       	ldd	r24, Y+1	; 0x01
    260a:	9a 81       	ldd	r25, Y+2	; 0x02
    260c:	fc 01       	movw	r30, r24
    260e:	82 8d       	ldd	r24, Z+26	; 0x1a
    2610:	80 93 e5 2c 	sts	0x2CE5, r24	; 0x802ce5 <uxTopReadyPriority>
    2614:	89 81       	ldd	r24, Y+1	; 0x01
    2616:	9a 81       	ldd	r25, Y+2	; 0x02
    2618:	ac 01       	movw	r20, r24
    261a:	4e 5f       	subi	r20, 0xFE	; 254
    261c:	5f 4f       	sbci	r21, 0xFF	; 255
    261e:	89 81       	ldd	r24, Y+1	; 0x01
    2620:	9a 81       	ldd	r25, Y+2	; 0x02
    2622:	fc 01       	movw	r30, r24
    2624:	82 8d       	ldd	r24, Z+26	; 0x1a
    2626:	28 2f       	mov	r18, r24
    2628:	30 e0       	ldi	r19, 0x00	; 0
    262a:	6b e0       	ldi	r22, 0x0B	; 11
    262c:	62 9f       	mul	r22, r18
    262e:	c0 01       	movw	r24, r0
    2630:	63 9f       	mul	r22, r19
    2632:	90 0d       	add	r25, r0
    2634:	11 24       	eor	r1, r1
    2636:	8c 57       	subi	r24, 0x7C	; 124
    2638:	93 4d       	sbci	r25, 0xD3	; 211
    263a:	ba 01       	movw	r22, r20
    263c:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2640:	ff 91       	pop	r31
    2642:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2646:	80 91 e6 2c 	lds	r24, 0x2CE6	; 0x802ce6 <xSchedulerRunning>
    264a:	88 23       	and	r24, r24
    264c:	71 f0       	breq	.+28     	; 0x266a <prvAddNewTaskToReadyList+0x100>
    264e:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2652:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2656:	fc 01       	movw	r30, r24
    2658:	22 8d       	ldd	r18, Z+26	; 0x1a
    265a:	89 81       	ldd	r24, Y+1	; 0x01
    265c:	9a 81       	ldd	r25, Y+2	; 0x02
    265e:	fc 01       	movw	r30, r24
    2660:	82 8d       	ldd	r24, Z+26	; 0x1a
    2662:	28 17       	cp	r18, r24
    2664:	10 f4       	brcc	.+4      	; 0x266a <prvAddNewTaskToReadyList+0x100>
    2666:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    266a:	00 00       	nop
    266c:	0f 90       	pop	r0
    266e:	0f 90       	pop	r0
    2670:	df 91       	pop	r29
    2672:	cf 91       	pop	r28
    2674:	08 95       	ret

00002676 <vTaskDelay>:
    2676:	cf 93       	push	r28
    2678:	df 93       	push	r29
    267a:	cd b7       	in	r28, 0x3d	; 61
    267c:	de b7       	in	r29, 0x3e	; 62
    267e:	25 97       	sbiw	r28, 0x05	; 5
    2680:	cd bf       	out	0x3d, r28	; 61
    2682:	de bf       	out	0x3e, r29	; 62
    2684:	6a 83       	std	Y+2, r22	; 0x02
    2686:	7b 83       	std	Y+3, r23	; 0x03
    2688:	8c 83       	std	Y+4, r24	; 0x04
    268a:	9d 83       	std	Y+5, r25	; 0x05
    268c:	19 82       	std	Y+1, r1	; 0x01
    268e:	8a 81       	ldd	r24, Y+2	; 0x02
    2690:	9b 81       	ldd	r25, Y+3	; 0x03
    2692:	ac 81       	ldd	r26, Y+4	; 0x04
    2694:	bd 81       	ldd	r27, Y+5	; 0x05
    2696:	89 2b       	or	r24, r25
    2698:	8a 2b       	or	r24, r26
    269a:	8b 2b       	or	r24, r27
    269c:	71 f0       	breq	.+28     	; 0x26ba <vTaskDelay+0x44>
    269e:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
    26a2:	8a 81       	ldd	r24, Y+2	; 0x02
    26a4:	9b 81       	ldd	r25, Y+3	; 0x03
    26a6:	ac 81       	ldd	r26, Y+4	; 0x04
    26a8:	bd 81       	ldd	r27, Y+5	; 0x05
    26aa:	40 e0       	ldi	r20, 0x00	; 0
    26ac:	bc 01       	movw	r22, r24
    26ae:	cd 01       	movw	r24, r26
    26b0:	0e 94 8a 19 	call	0x3314	; 0x3314 <prvAddCurrentTaskToDelayedList>
    26b4:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    26b8:	89 83       	std	Y+1, r24	; 0x01
    26ba:	89 81       	ldd	r24, Y+1	; 0x01
    26bc:	88 23       	and	r24, r24
    26be:	11 f4       	brne	.+4      	; 0x26c4 <vTaskDelay+0x4e>
    26c0:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    26c4:	00 00       	nop
    26c6:	25 96       	adiw	r28, 0x05	; 5
    26c8:	cd bf       	out	0x3d, r28	; 61
    26ca:	de bf       	out	0x3e, r29	; 62
    26cc:	df 91       	pop	r29
    26ce:	cf 91       	pop	r28
    26d0:	08 95       	ret

000026d2 <vTaskStartScheduler>:
    26d2:	ef 92       	push	r14
    26d4:	ff 92       	push	r15
    26d6:	0f 93       	push	r16
    26d8:	cf 93       	push	r28
    26da:	df 93       	push	r29
    26dc:	1f 92       	push	r1
    26de:	cd b7       	in	r28, 0x3d	; 61
    26e0:	de b7       	in	r29, 0x3e	; 62
    26e2:	0f 2e       	mov	r0, r31
    26e4:	ff ee       	ldi	r31, 0xEF	; 239
    26e6:	ef 2e       	mov	r14, r31
    26e8:	fc e2       	ldi	r31, 0x2C	; 44
    26ea:	ff 2e       	mov	r15, r31
    26ec:	f0 2d       	mov	r31, r0
    26ee:	00 e0       	ldi	r16, 0x00	; 0
    26f0:	20 e0       	ldi	r18, 0x00	; 0
    26f2:	30 e0       	ldi	r19, 0x00	; 0
    26f4:	48 ec       	ldi	r20, 0xC8	; 200
    26f6:	50 e0       	ldi	r21, 0x00	; 0
    26f8:	60 e0       	ldi	r22, 0x00	; 0
    26fa:	70 e2       	ldi	r23, 0x20	; 32
    26fc:	8c e9       	ldi	r24, 0x9C	; 156
    26fe:	98 e1       	ldi	r25, 0x18	; 24
    2700:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
    2704:	89 83       	std	Y+1, r24	; 0x01
    2706:	89 81       	ldd	r24, Y+1	; 0x01
    2708:	81 30       	cpi	r24, 0x01	; 1
    270a:	19 f4       	brne	.+6      	; 0x2712 <vTaskStartScheduler+0x40>
    270c:	0e 94 2b 1a 	call	0x3456	; 0x3456 <xTimerCreateTimerTask>
    2710:	89 83       	std	Y+1, r24	; 0x01
    2712:	89 81       	ldd	r24, Y+1	; 0x01
    2714:	81 30       	cpi	r24, 0x01	; 1
    2716:	09 f5       	brne	.+66     	; 0x275a <vTaskStartScheduler+0x88>
    2718:	80 ea       	ldi	r24, 0xA0	; 160
    271a:	90 e0       	ldi	r25, 0x00	; 0
    271c:	20 ea       	ldi	r18, 0xA0	; 160
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	f9 01       	movw	r30, r18
    2722:	22 81       	ldd	r18, Z+2	; 0x02
    2724:	28 7f       	andi	r18, 0xF8	; 248
    2726:	fc 01       	movw	r30, r24
    2728:	22 83       	std	Z+2, r18	; 0x02
    272a:	8f ef       	ldi	r24, 0xFF	; 255
    272c:	9f ef       	ldi	r25, 0xFF	; 255
    272e:	dc 01       	movw	r26, r24
    2730:	80 93 eb 2c 	sts	0x2CEB, r24	; 0x802ceb <xNextTaskUnblockTime>
    2734:	90 93 ec 2c 	sts	0x2CEC, r25	; 0x802cec <xNextTaskUnblockTime+0x1>
    2738:	a0 93 ed 2c 	sts	0x2CED, r26	; 0x802ced <xNextTaskUnblockTime+0x2>
    273c:	b0 93 ee 2c 	sts	0x2CEE, r27	; 0x802cee <xNextTaskUnblockTime+0x3>
    2740:	81 e0       	ldi	r24, 0x01	; 1
    2742:	80 93 e6 2c 	sts	0x2CE6, r24	; 0x802ce6 <xSchedulerRunning>
    2746:	10 92 e1 2c 	sts	0x2CE1, r1	; 0x802ce1 <xTickCount>
    274a:	10 92 e2 2c 	sts	0x2CE2, r1	; 0x802ce2 <xTickCount+0x1>
    274e:	10 92 e3 2c 	sts	0x2CE3, r1	; 0x802ce3 <xTickCount+0x2>
    2752:	10 92 e4 2c 	sts	0x2CE4, r1	; 0x802ce4 <xTickCount+0x3>
    2756:	0e 94 c9 0a 	call	0x1592	; 0x1592 <xPortStartScheduler>
    275a:	00 00       	nop
    275c:	0f 90       	pop	r0
    275e:	df 91       	pop	r29
    2760:	cf 91       	pop	r28
    2762:	0f 91       	pop	r16
    2764:	ff 90       	pop	r15
    2766:	ef 90       	pop	r14
    2768:	08 95       	ret

0000276a <vTaskSuspendAll>:
    276a:	cf 93       	push	r28
    276c:	df 93       	push	r29
    276e:	cd b7       	in	r28, 0x3d	; 61
    2770:	de b7       	in	r29, 0x3e	; 62
    2772:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    2776:	8f 5f       	subi	r24, 0xFF	; 255
    2778:	80 93 f1 2c 	sts	0x2CF1, r24	; 0x802cf1 <uxSchedulerSuspended>
    277c:	00 00       	nop
    277e:	df 91       	pop	r29
    2780:	cf 91       	pop	r28
    2782:	08 95       	ret

00002784 <xTaskResumeAll>:
    2784:	cf 93       	push	r28
    2786:	df 93       	push	r29
    2788:	00 d0       	rcall	.+0      	; 0x278a <xTaskResumeAll+0x6>
    278a:	1f 92       	push	r1
    278c:	cd b7       	in	r28, 0x3d	; 61
    278e:	de b7       	in	r29, 0x3e	; 62
    2790:	19 82       	std	Y+1, r1	; 0x01
    2792:	1a 82       	std	Y+2, r1	; 0x02
    2794:	1b 82       	std	Y+3, r1	; 0x03
    2796:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    279a:	ff 93       	push	r31
    279c:	f8 7f       	andi	r31, 0xF8	; 248
    279e:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    27a2:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    27a6:	81 50       	subi	r24, 0x01	; 1
    27a8:	80 93 f1 2c 	sts	0x2CF1, r24	; 0x802cf1 <uxSchedulerSuspended>
    27ac:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    27b0:	88 23       	and	r24, r24
    27b2:	09 f0       	breq	.+2      	; 0x27b6 <xTaskResumeAll+0x32>
    27b4:	74 c0       	rjmp	.+232    	; 0x289e <xTaskResumeAll+0x11a>
    27b6:	80 91 e0 2c 	lds	r24, 0x2CE0	; 0x802ce0 <uxCurrentNumberOfTasks>
    27ba:	88 23       	and	r24, r24
    27bc:	09 f4       	brne	.+2      	; 0x27c0 <xTaskResumeAll+0x3c>
    27be:	6f c0       	rjmp	.+222    	; 0x289e <xTaskResumeAll+0x11a>
    27c0:	46 c0       	rjmp	.+140    	; 0x284e <xTaskResumeAll+0xca>
    27c2:	80 91 d1 2c 	lds	r24, 0x2CD1	; 0x802cd1 <xPendingReadyList+0x7>
    27c6:	90 91 d2 2c 	lds	r25, 0x2CD2	; 0x802cd2 <xPendingReadyList+0x8>
    27ca:	fc 01       	movw	r30, r24
    27cc:	80 85       	ldd	r24, Z+8	; 0x08
    27ce:	91 85       	ldd	r25, Z+9	; 0x09
    27d0:	89 83       	std	Y+1, r24	; 0x01
    27d2:	9a 83       	std	Y+2, r25	; 0x02
    27d4:	89 81       	ldd	r24, Y+1	; 0x01
    27d6:	9a 81       	ldd	r25, Y+2	; 0x02
    27d8:	0e 96       	adiw	r24, 0x0e	; 14
    27da:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    27de:	89 81       	ldd	r24, Y+1	; 0x01
    27e0:	9a 81       	ldd	r25, Y+2	; 0x02
    27e2:	02 96       	adiw	r24, 0x02	; 2
    27e4:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    27e8:	89 81       	ldd	r24, Y+1	; 0x01
    27ea:	9a 81       	ldd	r25, Y+2	; 0x02
    27ec:	fc 01       	movw	r30, r24
    27ee:	92 8d       	ldd	r25, Z+26	; 0x1a
    27f0:	80 91 e5 2c 	lds	r24, 0x2CE5	; 0x802ce5 <uxTopReadyPriority>
    27f4:	89 17       	cp	r24, r25
    27f6:	30 f4       	brcc	.+12     	; 0x2804 <xTaskResumeAll+0x80>
    27f8:	89 81       	ldd	r24, Y+1	; 0x01
    27fa:	9a 81       	ldd	r25, Y+2	; 0x02
    27fc:	fc 01       	movw	r30, r24
    27fe:	82 8d       	ldd	r24, Z+26	; 0x1a
    2800:	80 93 e5 2c 	sts	0x2CE5, r24	; 0x802ce5 <uxTopReadyPriority>
    2804:	89 81       	ldd	r24, Y+1	; 0x01
    2806:	9a 81       	ldd	r25, Y+2	; 0x02
    2808:	ac 01       	movw	r20, r24
    280a:	4e 5f       	subi	r20, 0xFE	; 254
    280c:	5f 4f       	sbci	r21, 0xFF	; 255
    280e:	89 81       	ldd	r24, Y+1	; 0x01
    2810:	9a 81       	ldd	r25, Y+2	; 0x02
    2812:	fc 01       	movw	r30, r24
    2814:	82 8d       	ldd	r24, Z+26	; 0x1a
    2816:	28 2f       	mov	r18, r24
    2818:	30 e0       	ldi	r19, 0x00	; 0
    281a:	6b e0       	ldi	r22, 0x0B	; 11
    281c:	62 9f       	mul	r22, r18
    281e:	c0 01       	movw	r24, r0
    2820:	63 9f       	mul	r22, r19
    2822:	90 0d       	add	r25, r0
    2824:	11 24       	eor	r1, r1
    2826:	8c 57       	subi	r24, 0x7C	; 124
    2828:	93 4d       	sbci	r25, 0xD3	; 211
    282a:	ba 01       	movw	r22, r20
    282c:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2830:	89 81       	ldd	r24, Y+1	; 0x01
    2832:	9a 81       	ldd	r25, Y+2	; 0x02
    2834:	fc 01       	movw	r30, r24
    2836:	22 8d       	ldd	r18, Z+26	; 0x1a
    2838:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    283c:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2840:	fc 01       	movw	r30, r24
    2842:	82 8d       	ldd	r24, Z+26	; 0x1a
    2844:	28 17       	cp	r18, r24
    2846:	18 f0       	brcs	.+6      	; 0x284e <xTaskResumeAll+0xca>
    2848:	81 e0       	ldi	r24, 0x01	; 1
    284a:	80 93 e8 2c 	sts	0x2CE8, r24	; 0x802ce8 <xYieldPending>
    284e:	80 91 ca 2c 	lds	r24, 0x2CCA	; 0x802cca <xPendingReadyList>
    2852:	88 23       	and	r24, r24
    2854:	09 f0       	breq	.+2      	; 0x2858 <xTaskResumeAll+0xd4>
    2856:	b5 cf       	rjmp	.-150    	; 0x27c2 <xTaskResumeAll+0x3e>
    2858:	89 81       	ldd	r24, Y+1	; 0x01
    285a:	9a 81       	ldd	r25, Y+2	; 0x02
    285c:	89 2b       	or	r24, r25
    285e:	11 f0       	breq	.+4      	; 0x2864 <xTaskResumeAll+0xe0>
    2860:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <prvResetNextTaskUnblockTime>
    2864:	80 91 e7 2c 	lds	r24, 0x2CE7	; 0x802ce7 <uxPendedTicks>
    2868:	8c 83       	std	Y+4, r24	; 0x04
    286a:	8c 81       	ldd	r24, Y+4	; 0x04
    286c:	88 23       	and	r24, r24
    286e:	79 f0       	breq	.+30     	; 0x288e <xTaskResumeAll+0x10a>
    2870:	0e 94 80 14 	call	0x2900	; 0x2900 <xTaskIncrementTick>
    2874:	88 23       	and	r24, r24
    2876:	19 f0       	breq	.+6      	; 0x287e <xTaskResumeAll+0xfa>
    2878:	81 e0       	ldi	r24, 0x01	; 1
    287a:	80 93 e8 2c 	sts	0x2CE8, r24	; 0x802ce8 <xYieldPending>
    287e:	8c 81       	ldd	r24, Y+4	; 0x04
    2880:	81 50       	subi	r24, 0x01	; 1
    2882:	8c 83       	std	Y+4, r24	; 0x04
    2884:	8c 81       	ldd	r24, Y+4	; 0x04
    2886:	88 23       	and	r24, r24
    2888:	99 f7       	brne	.-26     	; 0x2870 <xTaskResumeAll+0xec>
    288a:	10 92 e7 2c 	sts	0x2CE7, r1	; 0x802ce7 <uxPendedTicks>
    288e:	80 91 e8 2c 	lds	r24, 0x2CE8	; 0x802ce8 <xYieldPending>
    2892:	88 23       	and	r24, r24
    2894:	21 f0       	breq	.+8      	; 0x289e <xTaskResumeAll+0x11a>
    2896:	81 e0       	ldi	r24, 0x01	; 1
    2898:	8b 83       	std	Y+3, r24	; 0x03
    289a:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    289e:	ff 91       	pop	r31
    28a0:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    28a4:	8b 81       	ldd	r24, Y+3	; 0x03
    28a6:	24 96       	adiw	r28, 0x04	; 4
    28a8:	cd bf       	out	0x3d, r28	; 61
    28aa:	de bf       	out	0x3e, r29	; 62
    28ac:	df 91       	pop	r29
    28ae:	cf 91       	pop	r28
    28b0:	08 95       	ret

000028b2 <xTaskGetTickCount>:
    28b2:	cf 93       	push	r28
    28b4:	df 93       	push	r29
    28b6:	00 d0       	rcall	.+0      	; 0x28b8 <xTaskGetTickCount+0x6>
    28b8:	1f 92       	push	r1
    28ba:	cd b7       	in	r28, 0x3d	; 61
    28bc:	de b7       	in	r29, 0x3e	; 62
    28be:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    28c2:	ff 93       	push	r31
    28c4:	f8 7f       	andi	r31, 0xF8	; 248
    28c6:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    28ca:	80 91 e1 2c 	lds	r24, 0x2CE1	; 0x802ce1 <xTickCount>
    28ce:	90 91 e2 2c 	lds	r25, 0x2CE2	; 0x802ce2 <xTickCount+0x1>
    28d2:	a0 91 e3 2c 	lds	r26, 0x2CE3	; 0x802ce3 <xTickCount+0x2>
    28d6:	b0 91 e4 2c 	lds	r27, 0x2CE4	; 0x802ce4 <xTickCount+0x3>
    28da:	89 83       	std	Y+1, r24	; 0x01
    28dc:	9a 83       	std	Y+2, r25	; 0x02
    28de:	ab 83       	std	Y+3, r26	; 0x03
    28e0:	bc 83       	std	Y+4, r27	; 0x04
    28e2:	ff 91       	pop	r31
    28e4:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    28e8:	89 81       	ldd	r24, Y+1	; 0x01
    28ea:	9a 81       	ldd	r25, Y+2	; 0x02
    28ec:	ab 81       	ldd	r26, Y+3	; 0x03
    28ee:	bc 81       	ldd	r27, Y+4	; 0x04
    28f0:	bc 01       	movw	r22, r24
    28f2:	cd 01       	movw	r24, r26
    28f4:	24 96       	adiw	r28, 0x04	; 4
    28f6:	cd bf       	out	0x3d, r28	; 61
    28f8:	de bf       	out	0x3e, r29	; 62
    28fa:	df 91       	pop	r29
    28fc:	cf 91       	pop	r28
    28fe:	08 95       	ret

00002900 <xTaskIncrementTick>:
    2900:	cf 93       	push	r28
    2902:	df 93       	push	r29
    2904:	cd b7       	in	r28, 0x3d	; 61
    2906:	de b7       	in	r29, 0x3e	; 62
    2908:	2d 97       	sbiw	r28, 0x0d	; 13
    290a:	cd bf       	out	0x3d, r28	; 61
    290c:	de bf       	out	0x3e, r29	; 62
    290e:	19 82       	std	Y+1, r1	; 0x01
    2910:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    2914:	88 23       	and	r24, r24
    2916:	09 f0       	breq	.+2      	; 0x291a <xTaskIncrementTick+0x1a>
    2918:	f1 c0       	rjmp	.+482    	; 0x2afc <xTaskIncrementTick+0x1fc>
    291a:	80 91 e1 2c 	lds	r24, 0x2CE1	; 0x802ce1 <xTickCount>
    291e:	90 91 e2 2c 	lds	r25, 0x2CE2	; 0x802ce2 <xTickCount+0x1>
    2922:	a0 91 e3 2c 	lds	r26, 0x2CE3	; 0x802ce3 <xTickCount+0x2>
    2926:	b0 91 e4 2c 	lds	r27, 0x2CE4	; 0x802ce4 <xTickCount+0x3>
    292a:	01 96       	adiw	r24, 0x01	; 1
    292c:	a1 1d       	adc	r26, r1
    292e:	b1 1d       	adc	r27, r1
    2930:	8a 83       	std	Y+2, r24	; 0x02
    2932:	9b 83       	std	Y+3, r25	; 0x03
    2934:	ac 83       	std	Y+4, r26	; 0x04
    2936:	bd 83       	std	Y+5, r27	; 0x05
    2938:	8a 81       	ldd	r24, Y+2	; 0x02
    293a:	9b 81       	ldd	r25, Y+3	; 0x03
    293c:	ac 81       	ldd	r26, Y+4	; 0x04
    293e:	bd 81       	ldd	r27, Y+5	; 0x05
    2940:	80 93 e1 2c 	sts	0x2CE1, r24	; 0x802ce1 <xTickCount>
    2944:	90 93 e2 2c 	sts	0x2CE2, r25	; 0x802ce2 <xTickCount+0x1>
    2948:	a0 93 e3 2c 	sts	0x2CE3, r26	; 0x802ce3 <xTickCount+0x2>
    294c:	b0 93 e4 2c 	sts	0x2CE4, r27	; 0x802ce4 <xTickCount+0x3>
    2950:	8a 81       	ldd	r24, Y+2	; 0x02
    2952:	9b 81       	ldd	r25, Y+3	; 0x03
    2954:	ac 81       	ldd	r26, Y+4	; 0x04
    2956:	bd 81       	ldd	r27, Y+5	; 0x05
    2958:	89 2b       	or	r24, r25
    295a:	8a 2b       	or	r24, r26
    295c:	8b 2b       	or	r24, r27
    295e:	d9 f4       	brne	.+54     	; 0x2996 <xTaskIncrementTick+0x96>
    2960:	80 91 c6 2c 	lds	r24, 0x2CC6	; 0x802cc6 <pxDelayedTaskList>
    2964:	90 91 c7 2c 	lds	r25, 0x2CC7	; 0x802cc7 <pxDelayedTaskList+0x1>
    2968:	8e 83       	std	Y+6, r24	; 0x06
    296a:	9f 83       	std	Y+7, r25	; 0x07
    296c:	80 91 c8 2c 	lds	r24, 0x2CC8	; 0x802cc8 <pxOverflowDelayedTaskList>
    2970:	90 91 c9 2c 	lds	r25, 0x2CC9	; 0x802cc9 <pxOverflowDelayedTaskList+0x1>
    2974:	80 93 c6 2c 	sts	0x2CC6, r24	; 0x802cc6 <pxDelayedTaskList>
    2978:	90 93 c7 2c 	sts	0x2CC7, r25	; 0x802cc7 <pxDelayedTaskList+0x1>
    297c:	8e 81       	ldd	r24, Y+6	; 0x06
    297e:	9f 81       	ldd	r25, Y+7	; 0x07
    2980:	80 93 c8 2c 	sts	0x2CC8, r24	; 0x802cc8 <pxOverflowDelayedTaskList>
    2984:	90 93 c9 2c 	sts	0x2CC9, r25	; 0x802cc9 <pxOverflowDelayedTaskList+0x1>
    2988:	80 91 e9 2c 	lds	r24, 0x2CE9	; 0x802ce9 <xNumOfOverflows>
    298c:	8f 5f       	subi	r24, 0xFF	; 255
    298e:	80 93 e9 2c 	sts	0x2CE9, r24	; 0x802ce9 <xNumOfOverflows>
    2992:	0e 94 f0 18 	call	0x31e0	; 0x31e0 <prvResetNextTaskUnblockTime>
    2996:	80 91 eb 2c 	lds	r24, 0x2CEB	; 0x802ceb <xNextTaskUnblockTime>
    299a:	90 91 ec 2c 	lds	r25, 0x2CEC	; 0x802cec <xNextTaskUnblockTime+0x1>
    299e:	a0 91 ed 2c 	lds	r26, 0x2CED	; 0x802ced <xNextTaskUnblockTime+0x2>
    29a2:	b0 91 ee 2c 	lds	r27, 0x2CEE	; 0x802cee <xNextTaskUnblockTime+0x3>
    29a6:	2a 81       	ldd	r18, Y+2	; 0x02
    29a8:	3b 81       	ldd	r19, Y+3	; 0x03
    29aa:	4c 81       	ldd	r20, Y+4	; 0x04
    29ac:	5d 81       	ldd	r21, Y+5	; 0x05
    29ae:	28 17       	cp	r18, r24
    29b0:	39 07       	cpc	r19, r25
    29b2:	4a 07       	cpc	r20, r26
    29b4:	5b 07       	cpc	r21, r27
    29b6:	08 f4       	brcc	.+2      	; 0x29ba <xTaskIncrementTick+0xba>
    29b8:	8a c0       	rjmp	.+276    	; 0x2ace <xTaskIncrementTick+0x1ce>
    29ba:	80 91 c6 2c 	lds	r24, 0x2CC6	; 0x802cc6 <pxDelayedTaskList>
    29be:	90 91 c7 2c 	lds	r25, 0x2CC7	; 0x802cc7 <pxDelayedTaskList+0x1>
    29c2:	fc 01       	movw	r30, r24
    29c4:	80 81       	ld	r24, Z
    29c6:	88 23       	and	r24, r24
    29c8:	61 f4       	brne	.+24     	; 0x29e2 <xTaskIncrementTick+0xe2>
    29ca:	8f ef       	ldi	r24, 0xFF	; 255
    29cc:	9f ef       	ldi	r25, 0xFF	; 255
    29ce:	dc 01       	movw	r26, r24
    29d0:	80 93 eb 2c 	sts	0x2CEB, r24	; 0x802ceb <xNextTaskUnblockTime>
    29d4:	90 93 ec 2c 	sts	0x2CEC, r25	; 0x802cec <xNextTaskUnblockTime+0x1>
    29d8:	a0 93 ed 2c 	sts	0x2CED, r26	; 0x802ced <xNextTaskUnblockTime+0x2>
    29dc:	b0 93 ee 2c 	sts	0x2CEE, r27	; 0x802cee <xNextTaskUnblockTime+0x3>
    29e0:	76 c0       	rjmp	.+236    	; 0x2ace <xTaskIncrementTick+0x1ce>
    29e2:	80 91 c6 2c 	lds	r24, 0x2CC6	; 0x802cc6 <pxDelayedTaskList>
    29e6:	90 91 c7 2c 	lds	r25, 0x2CC7	; 0x802cc7 <pxDelayedTaskList+0x1>
    29ea:	fc 01       	movw	r30, r24
    29ec:	87 81       	ldd	r24, Z+7	; 0x07
    29ee:	90 85       	ldd	r25, Z+8	; 0x08
    29f0:	fc 01       	movw	r30, r24
    29f2:	80 85       	ldd	r24, Z+8	; 0x08
    29f4:	91 85       	ldd	r25, Z+9	; 0x09
    29f6:	88 87       	std	Y+8, r24	; 0x08
    29f8:	99 87       	std	Y+9, r25	; 0x09
    29fa:	88 85       	ldd	r24, Y+8	; 0x08
    29fc:	99 85       	ldd	r25, Y+9	; 0x09
    29fe:	fc 01       	movw	r30, r24
    2a00:	82 81       	ldd	r24, Z+2	; 0x02
    2a02:	93 81       	ldd	r25, Z+3	; 0x03
    2a04:	a4 81       	ldd	r26, Z+4	; 0x04
    2a06:	b5 81       	ldd	r27, Z+5	; 0x05
    2a08:	8a 87       	std	Y+10, r24	; 0x0a
    2a0a:	9b 87       	std	Y+11, r25	; 0x0b
    2a0c:	ac 87       	std	Y+12, r26	; 0x0c
    2a0e:	bd 87       	std	Y+13, r27	; 0x0d
    2a10:	2a 81       	ldd	r18, Y+2	; 0x02
    2a12:	3b 81       	ldd	r19, Y+3	; 0x03
    2a14:	4c 81       	ldd	r20, Y+4	; 0x04
    2a16:	5d 81       	ldd	r21, Y+5	; 0x05
    2a18:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a1a:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a1c:	ac 85       	ldd	r26, Y+12	; 0x0c
    2a1e:	bd 85       	ldd	r27, Y+13	; 0x0d
    2a20:	28 17       	cp	r18, r24
    2a22:	39 07       	cpc	r19, r25
    2a24:	4a 07       	cpc	r20, r26
    2a26:	5b 07       	cpc	r21, r27
    2a28:	68 f4       	brcc	.+26     	; 0x2a44 <xTaskIncrementTick+0x144>
    2a2a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2a2c:	9b 85       	ldd	r25, Y+11	; 0x0b
    2a2e:	ac 85       	ldd	r26, Y+12	; 0x0c
    2a30:	bd 85       	ldd	r27, Y+13	; 0x0d
    2a32:	80 93 eb 2c 	sts	0x2CEB, r24	; 0x802ceb <xNextTaskUnblockTime>
    2a36:	90 93 ec 2c 	sts	0x2CEC, r25	; 0x802cec <xNextTaskUnblockTime+0x1>
    2a3a:	a0 93 ed 2c 	sts	0x2CED, r26	; 0x802ced <xNextTaskUnblockTime+0x2>
    2a3e:	b0 93 ee 2c 	sts	0x2CEE, r27	; 0x802cee <xNextTaskUnblockTime+0x3>
    2a42:	45 c0       	rjmp	.+138    	; 0x2ace <xTaskIncrementTick+0x1ce>
    2a44:	88 85       	ldd	r24, Y+8	; 0x08
    2a46:	99 85       	ldd	r25, Y+9	; 0x09
    2a48:	02 96       	adiw	r24, 0x02	; 2
    2a4a:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    2a4e:	88 85       	ldd	r24, Y+8	; 0x08
    2a50:	99 85       	ldd	r25, Y+9	; 0x09
    2a52:	fc 01       	movw	r30, r24
    2a54:	80 8d       	ldd	r24, Z+24	; 0x18
    2a56:	91 8d       	ldd	r25, Z+25	; 0x19
    2a58:	89 2b       	or	r24, r25
    2a5a:	29 f0       	breq	.+10     	; 0x2a66 <xTaskIncrementTick+0x166>
    2a5c:	88 85       	ldd	r24, Y+8	; 0x08
    2a5e:	99 85       	ldd	r25, Y+9	; 0x09
    2a60:	0e 96       	adiw	r24, 0x0e	; 14
    2a62:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    2a66:	88 85       	ldd	r24, Y+8	; 0x08
    2a68:	99 85       	ldd	r25, Y+9	; 0x09
    2a6a:	fc 01       	movw	r30, r24
    2a6c:	92 8d       	ldd	r25, Z+26	; 0x1a
    2a6e:	80 91 e5 2c 	lds	r24, 0x2CE5	; 0x802ce5 <uxTopReadyPriority>
    2a72:	89 17       	cp	r24, r25
    2a74:	30 f4       	brcc	.+12     	; 0x2a82 <xTaskIncrementTick+0x182>
    2a76:	88 85       	ldd	r24, Y+8	; 0x08
    2a78:	99 85       	ldd	r25, Y+9	; 0x09
    2a7a:	fc 01       	movw	r30, r24
    2a7c:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a7e:	80 93 e5 2c 	sts	0x2CE5, r24	; 0x802ce5 <uxTopReadyPriority>
    2a82:	88 85       	ldd	r24, Y+8	; 0x08
    2a84:	99 85       	ldd	r25, Y+9	; 0x09
    2a86:	ac 01       	movw	r20, r24
    2a88:	4e 5f       	subi	r20, 0xFE	; 254
    2a8a:	5f 4f       	sbci	r21, 0xFF	; 255
    2a8c:	88 85       	ldd	r24, Y+8	; 0x08
    2a8e:	99 85       	ldd	r25, Y+9	; 0x09
    2a90:	fc 01       	movw	r30, r24
    2a92:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a94:	28 2f       	mov	r18, r24
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	6b e0       	ldi	r22, 0x0B	; 11
    2a9a:	62 9f       	mul	r22, r18
    2a9c:	c0 01       	movw	r24, r0
    2a9e:	63 9f       	mul	r22, r19
    2aa0:	90 0d       	add	r25, r0
    2aa2:	11 24       	eor	r1, r1
    2aa4:	8c 57       	subi	r24, 0x7C	; 124
    2aa6:	93 4d       	sbci	r25, 0xD3	; 211
    2aa8:	ba 01       	movw	r22, r20
    2aaa:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2aae:	88 85       	ldd	r24, Y+8	; 0x08
    2ab0:	99 85       	ldd	r25, Y+9	; 0x09
    2ab2:	fc 01       	movw	r30, r24
    2ab4:	22 8d       	ldd	r18, Z+26	; 0x1a
    2ab6:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2aba:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2abe:	fc 01       	movw	r30, r24
    2ac0:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ac2:	28 17       	cp	r18, r24
    2ac4:	08 f4       	brcc	.+2      	; 0x2ac8 <xTaskIncrementTick+0x1c8>
    2ac6:	79 cf       	rjmp	.-270    	; 0x29ba <xTaskIncrementTick+0xba>
    2ac8:	81 e0       	ldi	r24, 0x01	; 1
    2aca:	89 83       	std	Y+1, r24	; 0x01
    2acc:	76 cf       	rjmp	.-276    	; 0x29ba <xTaskIncrementTick+0xba>
    2ace:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2ad2:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ada:	28 2f       	mov	r18, r24
    2adc:	30 e0       	ldi	r19, 0x00	; 0
    2ade:	4b e0       	ldi	r20, 0x0B	; 11
    2ae0:	42 9f       	mul	r20, r18
    2ae2:	c0 01       	movw	r24, r0
    2ae4:	43 9f       	mul	r20, r19
    2ae6:	90 0d       	add	r25, r0
    2ae8:	11 24       	eor	r1, r1
    2aea:	8c 57       	subi	r24, 0x7C	; 124
    2aec:	93 4d       	sbci	r25, 0xD3	; 211
    2aee:	fc 01       	movw	r30, r24
    2af0:	80 81       	ld	r24, Z
    2af2:	82 30       	cpi	r24, 0x02	; 2
    2af4:	40 f0       	brcs	.+16     	; 0x2b06 <xTaskIncrementTick+0x206>
    2af6:	81 e0       	ldi	r24, 0x01	; 1
    2af8:	89 83       	std	Y+1, r24	; 0x01
    2afa:	05 c0       	rjmp	.+10     	; 0x2b06 <xTaskIncrementTick+0x206>
    2afc:	80 91 e7 2c 	lds	r24, 0x2CE7	; 0x802ce7 <uxPendedTicks>
    2b00:	8f 5f       	subi	r24, 0xFF	; 255
    2b02:	80 93 e7 2c 	sts	0x2CE7, r24	; 0x802ce7 <uxPendedTicks>
    2b06:	80 91 e8 2c 	lds	r24, 0x2CE8	; 0x802ce8 <xYieldPending>
    2b0a:	88 23       	and	r24, r24
    2b0c:	11 f0       	breq	.+4      	; 0x2b12 <xTaskIncrementTick+0x212>
    2b0e:	81 e0       	ldi	r24, 0x01	; 1
    2b10:	89 83       	std	Y+1, r24	; 0x01
    2b12:	89 81       	ldd	r24, Y+1	; 0x01
    2b14:	2d 96       	adiw	r28, 0x0d	; 13
    2b16:	cd bf       	out	0x3d, r28	; 61
    2b18:	de bf       	out	0x3e, r29	; 62
    2b1a:	df 91       	pop	r29
    2b1c:	cf 91       	pop	r28
    2b1e:	08 95       	ret

00002b20 <vTaskSwitchContext>:
    2b20:	cf 93       	push	r28
    2b22:	df 93       	push	r29
    2b24:	cd b7       	in	r28, 0x3d	; 61
    2b26:	de b7       	in	r29, 0x3e	; 62
    2b28:	29 97       	sbiw	r28, 0x09	; 9
    2b2a:	cd bf       	out	0x3d, r28	; 61
    2b2c:	de bf       	out	0x3e, r29	; 62
    2b2e:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    2b32:	88 23       	and	r24, r24
    2b34:	21 f0       	breq	.+8      	; 0x2b3e <vTaskSwitchContext+0x1e>
    2b36:	81 e0       	ldi	r24, 0x01	; 1
    2b38:	80 93 e8 2c 	sts	0x2CE8, r24	; 0x802ce8 <xYieldPending>
    2b3c:	ba c0       	rjmp	.+372    	; 0x2cb2 <vTaskSwitchContext+0x192>
    2b3e:	10 92 e8 2c 	sts	0x2CE8, r1	; 0x802ce8 <xYieldPending>
    2b42:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2b46:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2b4a:	fc 01       	movw	r30, r24
    2b4c:	83 8d       	ldd	r24, Z+27	; 0x1b
    2b4e:	94 8d       	ldd	r25, Z+28	; 0x1c
    2b50:	8a 83       	std	Y+2, r24	; 0x02
    2b52:	9b 83       	std	Y+3, r25	; 0x03
    2b54:	85 ea       	ldi	r24, 0xA5	; 165
    2b56:	95 ea       	ldi	r25, 0xA5	; 165
    2b58:	dc 01       	movw	r26, r24
    2b5a:	8c 83       	std	Y+4, r24	; 0x04
    2b5c:	9d 83       	std	Y+5, r25	; 0x05
    2b5e:	ae 83       	std	Y+6, r26	; 0x06
    2b60:	bf 83       	std	Y+7, r27	; 0x07
    2b62:	8a 81       	ldd	r24, Y+2	; 0x02
    2b64:	9b 81       	ldd	r25, Y+3	; 0x03
    2b66:	fc 01       	movw	r30, r24
    2b68:	20 81       	ld	r18, Z
    2b6a:	31 81       	ldd	r19, Z+1	; 0x01
    2b6c:	42 81       	ldd	r20, Z+2	; 0x02
    2b6e:	53 81       	ldd	r21, Z+3	; 0x03
    2b70:	8c 81       	ldd	r24, Y+4	; 0x04
    2b72:	9d 81       	ldd	r25, Y+5	; 0x05
    2b74:	ae 81       	ldd	r26, Y+6	; 0x06
    2b76:	bf 81       	ldd	r27, Y+7	; 0x07
    2b78:	28 17       	cp	r18, r24
    2b7a:	39 07       	cpc	r19, r25
    2b7c:	4a 07       	cpc	r20, r26
    2b7e:	5b 07       	cpc	r21, r27
    2b80:	99 f5       	brne	.+102    	; 0x2be8 <vTaskSwitchContext+0xc8>
    2b82:	8a 81       	ldd	r24, Y+2	; 0x02
    2b84:	9b 81       	ldd	r25, Y+3	; 0x03
    2b86:	04 96       	adiw	r24, 0x04	; 4
    2b88:	fc 01       	movw	r30, r24
    2b8a:	20 81       	ld	r18, Z
    2b8c:	31 81       	ldd	r19, Z+1	; 0x01
    2b8e:	42 81       	ldd	r20, Z+2	; 0x02
    2b90:	53 81       	ldd	r21, Z+3	; 0x03
    2b92:	8c 81       	ldd	r24, Y+4	; 0x04
    2b94:	9d 81       	ldd	r25, Y+5	; 0x05
    2b96:	ae 81       	ldd	r26, Y+6	; 0x06
    2b98:	bf 81       	ldd	r27, Y+7	; 0x07
    2b9a:	28 17       	cp	r18, r24
    2b9c:	39 07       	cpc	r19, r25
    2b9e:	4a 07       	cpc	r20, r26
    2ba0:	5b 07       	cpc	r21, r27
    2ba2:	11 f5       	brne	.+68     	; 0x2be8 <vTaskSwitchContext+0xc8>
    2ba4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba6:	9b 81       	ldd	r25, Y+3	; 0x03
    2ba8:	08 96       	adiw	r24, 0x08	; 8
    2baa:	fc 01       	movw	r30, r24
    2bac:	20 81       	ld	r18, Z
    2bae:	31 81       	ldd	r19, Z+1	; 0x01
    2bb0:	42 81       	ldd	r20, Z+2	; 0x02
    2bb2:	53 81       	ldd	r21, Z+3	; 0x03
    2bb4:	8c 81       	ldd	r24, Y+4	; 0x04
    2bb6:	9d 81       	ldd	r25, Y+5	; 0x05
    2bb8:	ae 81       	ldd	r26, Y+6	; 0x06
    2bba:	bf 81       	ldd	r27, Y+7	; 0x07
    2bbc:	28 17       	cp	r18, r24
    2bbe:	39 07       	cpc	r19, r25
    2bc0:	4a 07       	cpc	r20, r26
    2bc2:	5b 07       	cpc	r21, r27
    2bc4:	89 f4       	brne	.+34     	; 0x2be8 <vTaskSwitchContext+0xc8>
    2bc6:	8a 81       	ldd	r24, Y+2	; 0x02
    2bc8:	9b 81       	ldd	r25, Y+3	; 0x03
    2bca:	0c 96       	adiw	r24, 0x0c	; 12
    2bcc:	fc 01       	movw	r30, r24
    2bce:	20 81       	ld	r18, Z
    2bd0:	31 81       	ldd	r19, Z+1	; 0x01
    2bd2:	42 81       	ldd	r20, Z+2	; 0x02
    2bd4:	53 81       	ldd	r21, Z+3	; 0x03
    2bd6:	8c 81       	ldd	r24, Y+4	; 0x04
    2bd8:	9d 81       	ldd	r25, Y+5	; 0x05
    2bda:	ae 81       	ldd	r26, Y+6	; 0x06
    2bdc:	bf 81       	ldd	r27, Y+7	; 0x07
    2bde:	28 17       	cp	r18, r24
    2be0:	39 07       	cpc	r19, r25
    2be2:	4a 07       	cpc	r20, r26
    2be4:	5b 07       	cpc	r21, r27
    2be6:	71 f0       	breq	.+28     	; 0x2c04 <vTaskSwitchContext+0xe4>
    2be8:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2bec:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2bf0:	9c 01       	movw	r18, r24
    2bf2:	23 5e       	subi	r18, 0xE3	; 227
    2bf4:	3f 4f       	sbci	r19, 0xFF	; 255
    2bf6:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2bfa:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2bfe:	b9 01       	movw	r22, r18
    2c00:	0e 94 91 03 	call	0x722	; 0x722 <vApplicationStackOverflowHook>
    2c04:	80 91 e5 2c 	lds	r24, 0x2CE5	; 0x802ce5 <uxTopReadyPriority>
    2c08:	89 83       	std	Y+1, r24	; 0x01
    2c0a:	03 c0       	rjmp	.+6      	; 0x2c12 <vTaskSwitchContext+0xf2>
    2c0c:	89 81       	ldd	r24, Y+1	; 0x01
    2c0e:	81 50       	subi	r24, 0x01	; 1
    2c10:	89 83       	std	Y+1, r24	; 0x01
    2c12:	89 81       	ldd	r24, Y+1	; 0x01
    2c14:	28 2f       	mov	r18, r24
    2c16:	30 e0       	ldi	r19, 0x00	; 0
    2c18:	4b e0       	ldi	r20, 0x0B	; 11
    2c1a:	42 9f       	mul	r20, r18
    2c1c:	c0 01       	movw	r24, r0
    2c1e:	43 9f       	mul	r20, r19
    2c20:	90 0d       	add	r25, r0
    2c22:	11 24       	eor	r1, r1
    2c24:	8c 57       	subi	r24, 0x7C	; 124
    2c26:	93 4d       	sbci	r25, 0xD3	; 211
    2c28:	fc 01       	movw	r30, r24
    2c2a:	80 81       	ld	r24, Z
    2c2c:	88 23       	and	r24, r24
    2c2e:	71 f3       	breq	.-36     	; 0x2c0c <vTaskSwitchContext+0xec>
    2c30:	89 81       	ldd	r24, Y+1	; 0x01
    2c32:	28 2f       	mov	r18, r24
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	4b e0       	ldi	r20, 0x0B	; 11
    2c38:	42 9f       	mul	r20, r18
    2c3a:	c0 01       	movw	r24, r0
    2c3c:	43 9f       	mul	r20, r19
    2c3e:	90 0d       	add	r25, r0
    2c40:	11 24       	eor	r1, r1
    2c42:	8c 57       	subi	r24, 0x7C	; 124
    2c44:	93 4d       	sbci	r25, 0xD3	; 211
    2c46:	88 87       	std	Y+8, r24	; 0x08
    2c48:	99 87       	std	Y+9, r25	; 0x09
    2c4a:	88 85       	ldd	r24, Y+8	; 0x08
    2c4c:	99 85       	ldd	r25, Y+9	; 0x09
    2c4e:	fc 01       	movw	r30, r24
    2c50:	81 81       	ldd	r24, Z+1	; 0x01
    2c52:	92 81       	ldd	r25, Z+2	; 0x02
    2c54:	fc 01       	movw	r30, r24
    2c56:	24 81       	ldd	r18, Z+4	; 0x04
    2c58:	35 81       	ldd	r19, Z+5	; 0x05
    2c5a:	88 85       	ldd	r24, Y+8	; 0x08
    2c5c:	99 85       	ldd	r25, Y+9	; 0x09
    2c5e:	fc 01       	movw	r30, r24
    2c60:	21 83       	std	Z+1, r18	; 0x01
    2c62:	32 83       	std	Z+2, r19	; 0x02
    2c64:	88 85       	ldd	r24, Y+8	; 0x08
    2c66:	99 85       	ldd	r25, Y+9	; 0x09
    2c68:	fc 01       	movw	r30, r24
    2c6a:	21 81       	ldd	r18, Z+1	; 0x01
    2c6c:	32 81       	ldd	r19, Z+2	; 0x02
    2c6e:	88 85       	ldd	r24, Y+8	; 0x08
    2c70:	99 85       	ldd	r25, Y+9	; 0x09
    2c72:	03 96       	adiw	r24, 0x03	; 3
    2c74:	28 17       	cp	r18, r24
    2c76:	39 07       	cpc	r19, r25
    2c78:	69 f4       	brne	.+26     	; 0x2c94 <vTaskSwitchContext+0x174>
    2c7a:	88 85       	ldd	r24, Y+8	; 0x08
    2c7c:	99 85       	ldd	r25, Y+9	; 0x09
    2c7e:	fc 01       	movw	r30, r24
    2c80:	81 81       	ldd	r24, Z+1	; 0x01
    2c82:	92 81       	ldd	r25, Z+2	; 0x02
    2c84:	fc 01       	movw	r30, r24
    2c86:	24 81       	ldd	r18, Z+4	; 0x04
    2c88:	35 81       	ldd	r19, Z+5	; 0x05
    2c8a:	88 85       	ldd	r24, Y+8	; 0x08
    2c8c:	99 85       	ldd	r25, Y+9	; 0x09
    2c8e:	fc 01       	movw	r30, r24
    2c90:	21 83       	std	Z+1, r18	; 0x01
    2c92:	32 83       	std	Z+2, r19	; 0x02
    2c94:	88 85       	ldd	r24, Y+8	; 0x08
    2c96:	99 85       	ldd	r25, Y+9	; 0x09
    2c98:	fc 01       	movw	r30, r24
    2c9a:	81 81       	ldd	r24, Z+1	; 0x01
    2c9c:	92 81       	ldd	r25, Z+2	; 0x02
    2c9e:	fc 01       	movw	r30, r24
    2ca0:	80 85       	ldd	r24, Z+8	; 0x08
    2ca2:	91 85       	ldd	r25, Z+9	; 0x09
    2ca4:	80 93 82 2c 	sts	0x2C82, r24	; 0x802c82 <pxCurrentTCB>
    2ca8:	90 93 83 2c 	sts	0x2C83, r25	; 0x802c83 <pxCurrentTCB+0x1>
    2cac:	89 81       	ldd	r24, Y+1	; 0x01
    2cae:	80 93 e5 2c 	sts	0x2CE5, r24	; 0x802ce5 <uxTopReadyPriority>
    2cb2:	00 00       	nop
    2cb4:	29 96       	adiw	r28, 0x09	; 9
    2cb6:	cd bf       	out	0x3d, r28	; 61
    2cb8:	de bf       	out	0x3e, r29	; 62
    2cba:	df 91       	pop	r29
    2cbc:	cf 91       	pop	r28
    2cbe:	08 95       	ret

00002cc0 <vTaskPlaceOnEventList>:
    2cc0:	cf 93       	push	r28
    2cc2:	df 93       	push	r29
    2cc4:	00 d0       	rcall	.+0      	; 0x2cc6 <vTaskPlaceOnEventList+0x6>
    2cc6:	00 d0       	rcall	.+0      	; 0x2cc8 <vTaskPlaceOnEventList+0x8>
    2cc8:	cd b7       	in	r28, 0x3d	; 61
    2cca:	de b7       	in	r29, 0x3e	; 62
    2ccc:	89 83       	std	Y+1, r24	; 0x01
    2cce:	9a 83       	std	Y+2, r25	; 0x02
    2cd0:	4b 83       	std	Y+3, r20	; 0x03
    2cd2:	5c 83       	std	Y+4, r21	; 0x04
    2cd4:	6d 83       	std	Y+5, r22	; 0x05
    2cd6:	7e 83       	std	Y+6, r23	; 0x06
    2cd8:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2cdc:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2ce0:	9c 01       	movw	r18, r24
    2ce2:	22 5f       	subi	r18, 0xF2	; 242
    2ce4:	3f 4f       	sbci	r19, 0xFF	; 255
    2ce6:	89 81       	ldd	r24, Y+1	; 0x01
    2ce8:	9a 81       	ldd	r25, Y+2	; 0x02
    2cea:	b9 01       	movw	r22, r18
    2cec:	0e 94 02 08 	call	0x1004	; 0x1004 <vListInsert>
    2cf0:	8b 81       	ldd	r24, Y+3	; 0x03
    2cf2:	9c 81       	ldd	r25, Y+4	; 0x04
    2cf4:	ad 81       	ldd	r26, Y+5	; 0x05
    2cf6:	be 81       	ldd	r27, Y+6	; 0x06
    2cf8:	41 e0       	ldi	r20, 0x01	; 1
    2cfa:	bc 01       	movw	r22, r24
    2cfc:	cd 01       	movw	r24, r26
    2cfe:	0e 94 8a 19 	call	0x3314	; 0x3314 <prvAddCurrentTaskToDelayedList>
    2d02:	00 00       	nop
    2d04:	26 96       	adiw	r28, 0x06	; 6
    2d06:	cd bf       	out	0x3d, r28	; 61
    2d08:	de bf       	out	0x3e, r29	; 62
    2d0a:	df 91       	pop	r29
    2d0c:	cf 91       	pop	r28
    2d0e:	08 95       	ret

00002d10 <vTaskPlaceOnUnorderedEventList>:
    2d10:	0f 93       	push	r16
    2d12:	1f 93       	push	r17
    2d14:	cf 93       	push	r28
    2d16:	df 93       	push	r29
    2d18:	cd b7       	in	r28, 0x3d	; 61
    2d1a:	de b7       	in	r29, 0x3e	; 62
    2d1c:	2a 97       	sbiw	r28, 0x0a	; 10
    2d1e:	cd bf       	out	0x3d, r28	; 61
    2d20:	de bf       	out	0x3e, r29	; 62
    2d22:	89 83       	std	Y+1, r24	; 0x01
    2d24:	9a 83       	std	Y+2, r25	; 0x02
    2d26:	4b 83       	std	Y+3, r20	; 0x03
    2d28:	5c 83       	std	Y+4, r21	; 0x04
    2d2a:	6d 83       	std	Y+5, r22	; 0x05
    2d2c:	7e 83       	std	Y+6, r23	; 0x06
    2d2e:	0f 83       	std	Y+7, r16	; 0x07
    2d30:	18 87       	std	Y+8, r17	; 0x08
    2d32:	29 87       	std	Y+9, r18	; 0x09
    2d34:	3a 87       	std	Y+10, r19	; 0x0a
    2d36:	20 91 82 2c 	lds	r18, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2d3a:	30 91 83 2c 	lds	r19, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2d3e:	8b 81       	ldd	r24, Y+3	; 0x03
    2d40:	9c 81       	ldd	r25, Y+4	; 0x04
    2d42:	ad 81       	ldd	r26, Y+5	; 0x05
    2d44:	be 81       	ldd	r27, Y+6	; 0x06
    2d46:	b0 68       	ori	r27, 0x80	; 128
    2d48:	f9 01       	movw	r30, r18
    2d4a:	86 87       	std	Z+14, r24	; 0x0e
    2d4c:	97 87       	std	Z+15, r25	; 0x0f
    2d4e:	a0 8b       	std	Z+16, r26	; 0x10
    2d50:	b1 8b       	std	Z+17, r27	; 0x11
    2d52:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2d56:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2d5a:	9c 01       	movw	r18, r24
    2d5c:	22 5f       	subi	r18, 0xF2	; 242
    2d5e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d60:	89 81       	ldd	r24, Y+1	; 0x01
    2d62:	9a 81       	ldd	r25, Y+2	; 0x02
    2d64:	b9 01       	movw	r22, r18
    2d66:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2d6a:	8f 81       	ldd	r24, Y+7	; 0x07
    2d6c:	98 85       	ldd	r25, Y+8	; 0x08
    2d6e:	a9 85       	ldd	r26, Y+9	; 0x09
    2d70:	ba 85       	ldd	r27, Y+10	; 0x0a
    2d72:	41 e0       	ldi	r20, 0x01	; 1
    2d74:	bc 01       	movw	r22, r24
    2d76:	cd 01       	movw	r24, r26
    2d78:	0e 94 8a 19 	call	0x3314	; 0x3314 <prvAddCurrentTaskToDelayedList>
    2d7c:	00 00       	nop
    2d7e:	2a 96       	adiw	r28, 0x0a	; 10
    2d80:	cd bf       	out	0x3d, r28	; 61
    2d82:	de bf       	out	0x3e, r29	; 62
    2d84:	df 91       	pop	r29
    2d86:	cf 91       	pop	r28
    2d88:	1f 91       	pop	r17
    2d8a:	0f 91       	pop	r16
    2d8c:	08 95       	ret

00002d8e <vTaskPlaceOnEventListRestricted>:
    2d8e:	cf 93       	push	r28
    2d90:	df 93       	push	r29
    2d92:	cd b7       	in	r28, 0x3d	; 61
    2d94:	de b7       	in	r29, 0x3e	; 62
    2d96:	27 97       	sbiw	r28, 0x07	; 7
    2d98:	cd bf       	out	0x3d, r28	; 61
    2d9a:	de bf       	out	0x3e, r29	; 62
    2d9c:	89 83       	std	Y+1, r24	; 0x01
    2d9e:	9a 83       	std	Y+2, r25	; 0x02
    2da0:	4b 83       	std	Y+3, r20	; 0x03
    2da2:	5c 83       	std	Y+4, r21	; 0x04
    2da4:	6d 83       	std	Y+5, r22	; 0x05
    2da6:	7e 83       	std	Y+6, r23	; 0x06
    2da8:	2f 83       	std	Y+7, r18	; 0x07
    2daa:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2dae:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2db2:	9c 01       	movw	r18, r24
    2db4:	22 5f       	subi	r18, 0xF2	; 242
    2db6:	3f 4f       	sbci	r19, 0xFF	; 255
    2db8:	89 81       	ldd	r24, Y+1	; 0x01
    2dba:	9a 81       	ldd	r25, Y+2	; 0x02
    2dbc:	b9 01       	movw	r22, r18
    2dbe:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2dc2:	8f 81       	ldd	r24, Y+7	; 0x07
    2dc4:	88 23       	and	r24, r24
    2dc6:	39 f0       	breq	.+14     	; 0x2dd6 <vTaskPlaceOnEventListRestricted+0x48>
    2dc8:	8f ef       	ldi	r24, 0xFF	; 255
    2dca:	9f ef       	ldi	r25, 0xFF	; 255
    2dcc:	dc 01       	movw	r26, r24
    2dce:	8b 83       	std	Y+3, r24	; 0x03
    2dd0:	9c 83       	std	Y+4, r25	; 0x04
    2dd2:	ad 83       	std	Y+5, r26	; 0x05
    2dd4:	be 83       	std	Y+6, r27	; 0x06
    2dd6:	8b 81       	ldd	r24, Y+3	; 0x03
    2dd8:	9c 81       	ldd	r25, Y+4	; 0x04
    2dda:	ad 81       	ldd	r26, Y+5	; 0x05
    2ddc:	be 81       	ldd	r27, Y+6	; 0x06
    2dde:	4f 81       	ldd	r20, Y+7	; 0x07
    2de0:	bc 01       	movw	r22, r24
    2de2:	cd 01       	movw	r24, r26
    2de4:	0e 94 8a 19 	call	0x3314	; 0x3314 <prvAddCurrentTaskToDelayedList>
    2de8:	00 00       	nop
    2dea:	27 96       	adiw	r28, 0x07	; 7
    2dec:	cd bf       	out	0x3d, r28	; 61
    2dee:	de bf       	out	0x3e, r29	; 62
    2df0:	df 91       	pop	r29
    2df2:	cf 91       	pop	r28
    2df4:	08 95       	ret

00002df6 <xTaskRemoveFromEventList>:
    2df6:	cf 93       	push	r28
    2df8:	df 93       	push	r29
    2dfa:	cd b7       	in	r28, 0x3d	; 61
    2dfc:	de b7       	in	r29, 0x3e	; 62
    2dfe:	25 97       	sbiw	r28, 0x05	; 5
    2e00:	cd bf       	out	0x3d, r28	; 61
    2e02:	de bf       	out	0x3e, r29	; 62
    2e04:	8c 83       	std	Y+4, r24	; 0x04
    2e06:	9d 83       	std	Y+5, r25	; 0x05
    2e08:	8c 81       	ldd	r24, Y+4	; 0x04
    2e0a:	9d 81       	ldd	r25, Y+5	; 0x05
    2e0c:	fc 01       	movw	r30, r24
    2e0e:	87 81       	ldd	r24, Z+7	; 0x07
    2e10:	90 85       	ldd	r25, Z+8	; 0x08
    2e12:	fc 01       	movw	r30, r24
    2e14:	80 85       	ldd	r24, Z+8	; 0x08
    2e16:	91 85       	ldd	r25, Z+9	; 0x09
    2e18:	8a 83       	std	Y+2, r24	; 0x02
    2e1a:	9b 83       	std	Y+3, r25	; 0x03
    2e1c:	8a 81       	ldd	r24, Y+2	; 0x02
    2e1e:	9b 81       	ldd	r25, Y+3	; 0x03
    2e20:	0e 96       	adiw	r24, 0x0e	; 14
    2e22:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    2e26:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    2e2a:	88 23       	and	r24, r24
    2e2c:	51 f5       	brne	.+84     	; 0x2e82 <xTaskRemoveFromEventList+0x8c>
    2e2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e30:	9b 81       	ldd	r25, Y+3	; 0x03
    2e32:	02 96       	adiw	r24, 0x02	; 2
    2e34:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    2e38:	8a 81       	ldd	r24, Y+2	; 0x02
    2e3a:	9b 81       	ldd	r25, Y+3	; 0x03
    2e3c:	fc 01       	movw	r30, r24
    2e3e:	92 8d       	ldd	r25, Z+26	; 0x1a
    2e40:	80 91 e5 2c 	lds	r24, 0x2CE5	; 0x802ce5 <uxTopReadyPriority>
    2e44:	89 17       	cp	r24, r25
    2e46:	30 f4       	brcc	.+12     	; 0x2e54 <xTaskRemoveFromEventList+0x5e>
    2e48:	8a 81       	ldd	r24, Y+2	; 0x02
    2e4a:	9b 81       	ldd	r25, Y+3	; 0x03
    2e4c:	fc 01       	movw	r30, r24
    2e4e:	82 8d       	ldd	r24, Z+26	; 0x1a
    2e50:	80 93 e5 2c 	sts	0x2CE5, r24	; 0x802ce5 <uxTopReadyPriority>
    2e54:	8a 81       	ldd	r24, Y+2	; 0x02
    2e56:	9b 81       	ldd	r25, Y+3	; 0x03
    2e58:	ac 01       	movw	r20, r24
    2e5a:	4e 5f       	subi	r20, 0xFE	; 254
    2e5c:	5f 4f       	sbci	r21, 0xFF	; 255
    2e5e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e60:	9b 81       	ldd	r25, Y+3	; 0x03
    2e62:	fc 01       	movw	r30, r24
    2e64:	82 8d       	ldd	r24, Z+26	; 0x1a
    2e66:	28 2f       	mov	r18, r24
    2e68:	30 e0       	ldi	r19, 0x00	; 0
    2e6a:	6b e0       	ldi	r22, 0x0B	; 11
    2e6c:	62 9f       	mul	r22, r18
    2e6e:	c0 01       	movw	r24, r0
    2e70:	63 9f       	mul	r22, r19
    2e72:	90 0d       	add	r25, r0
    2e74:	11 24       	eor	r1, r1
    2e76:	8c 57       	subi	r24, 0x7C	; 124
    2e78:	93 4d       	sbci	r25, 0xD3	; 211
    2e7a:	ba 01       	movw	r22, r20
    2e7c:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2e80:	08 c0       	rjmp	.+16     	; 0x2e92 <xTaskRemoveFromEventList+0x9c>
    2e82:	8a 81       	ldd	r24, Y+2	; 0x02
    2e84:	9b 81       	ldd	r25, Y+3	; 0x03
    2e86:	0e 96       	adiw	r24, 0x0e	; 14
    2e88:	bc 01       	movw	r22, r24
    2e8a:	8a ec       	ldi	r24, 0xCA	; 202
    2e8c:	9c e2       	ldi	r25, 0x2C	; 44
    2e8e:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2e92:	8a 81       	ldd	r24, Y+2	; 0x02
    2e94:	9b 81       	ldd	r25, Y+3	; 0x03
    2e96:	fc 01       	movw	r30, r24
    2e98:	22 8d       	ldd	r18, Z+26	; 0x1a
    2e9a:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2e9e:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2ea2:	fc 01       	movw	r30, r24
    2ea4:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ea6:	82 17       	cp	r24, r18
    2ea8:	30 f4       	brcc	.+12     	; 0x2eb6 <xTaskRemoveFromEventList+0xc0>
    2eaa:	81 e0       	ldi	r24, 0x01	; 1
    2eac:	89 83       	std	Y+1, r24	; 0x01
    2eae:	81 e0       	ldi	r24, 0x01	; 1
    2eb0:	80 93 e8 2c 	sts	0x2CE8, r24	; 0x802ce8 <xYieldPending>
    2eb4:	01 c0       	rjmp	.+2      	; 0x2eb8 <xTaskRemoveFromEventList+0xc2>
    2eb6:	19 82       	std	Y+1, r1	; 0x01
    2eb8:	89 81       	ldd	r24, Y+1	; 0x01
    2eba:	25 96       	adiw	r28, 0x05	; 5
    2ebc:	cd bf       	out	0x3d, r28	; 61
    2ebe:	de bf       	out	0x3e, r29	; 62
    2ec0:	df 91       	pop	r29
    2ec2:	cf 91       	pop	r28
    2ec4:	08 95       	ret

00002ec6 <vTaskRemoveFromUnorderedEventList>:
    2ec6:	cf 93       	push	r28
    2ec8:	df 93       	push	r29
    2eca:	cd b7       	in	r28, 0x3d	; 61
    2ecc:	de b7       	in	r29, 0x3e	; 62
    2ece:	28 97       	sbiw	r28, 0x08	; 8
    2ed0:	cd bf       	out	0x3d, r28	; 61
    2ed2:	de bf       	out	0x3e, r29	; 62
    2ed4:	8b 83       	std	Y+3, r24	; 0x03
    2ed6:	9c 83       	std	Y+4, r25	; 0x04
    2ed8:	4d 83       	std	Y+5, r20	; 0x05
    2eda:	5e 83       	std	Y+6, r21	; 0x06
    2edc:	6f 83       	std	Y+7, r22	; 0x07
    2ede:	78 87       	std	Y+8, r23	; 0x08
    2ee0:	8d 81       	ldd	r24, Y+5	; 0x05
    2ee2:	9e 81       	ldd	r25, Y+6	; 0x06
    2ee4:	af 81       	ldd	r26, Y+7	; 0x07
    2ee6:	b8 85       	ldd	r27, Y+8	; 0x08
    2ee8:	b0 68       	ori	r27, 0x80	; 128
    2eea:	2b 81       	ldd	r18, Y+3	; 0x03
    2eec:	3c 81       	ldd	r19, Y+4	; 0x04
    2eee:	f9 01       	movw	r30, r18
    2ef0:	80 83       	st	Z, r24
    2ef2:	91 83       	std	Z+1, r25	; 0x01
    2ef4:	a2 83       	std	Z+2, r26	; 0x02
    2ef6:	b3 83       	std	Z+3, r27	; 0x03
    2ef8:	8b 81       	ldd	r24, Y+3	; 0x03
    2efa:	9c 81       	ldd	r25, Y+4	; 0x04
    2efc:	fc 01       	movw	r30, r24
    2efe:	80 85       	ldd	r24, Z+8	; 0x08
    2f00:	91 85       	ldd	r25, Z+9	; 0x09
    2f02:	89 83       	std	Y+1, r24	; 0x01
    2f04:	9a 83       	std	Y+2, r25	; 0x02
    2f06:	8b 81       	ldd	r24, Y+3	; 0x03
    2f08:	9c 81       	ldd	r25, Y+4	; 0x04
    2f0a:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    2f0e:	89 81       	ldd	r24, Y+1	; 0x01
    2f10:	9a 81       	ldd	r25, Y+2	; 0x02
    2f12:	02 96       	adiw	r24, 0x02	; 2
    2f14:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    2f18:	89 81       	ldd	r24, Y+1	; 0x01
    2f1a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f1c:	fc 01       	movw	r30, r24
    2f1e:	92 8d       	ldd	r25, Z+26	; 0x1a
    2f20:	80 91 e5 2c 	lds	r24, 0x2CE5	; 0x802ce5 <uxTopReadyPriority>
    2f24:	89 17       	cp	r24, r25
    2f26:	30 f4       	brcc	.+12     	; 0x2f34 <vTaskRemoveFromUnorderedEventList+0x6e>
    2f28:	89 81       	ldd	r24, Y+1	; 0x01
    2f2a:	9a 81       	ldd	r25, Y+2	; 0x02
    2f2c:	fc 01       	movw	r30, r24
    2f2e:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f30:	80 93 e5 2c 	sts	0x2CE5, r24	; 0x802ce5 <uxTopReadyPriority>
    2f34:	89 81       	ldd	r24, Y+1	; 0x01
    2f36:	9a 81       	ldd	r25, Y+2	; 0x02
    2f38:	ac 01       	movw	r20, r24
    2f3a:	4e 5f       	subi	r20, 0xFE	; 254
    2f3c:	5f 4f       	sbci	r21, 0xFF	; 255
    2f3e:	89 81       	ldd	r24, Y+1	; 0x01
    2f40:	9a 81       	ldd	r25, Y+2	; 0x02
    2f42:	fc 01       	movw	r30, r24
    2f44:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f46:	28 2f       	mov	r18, r24
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	6b e0       	ldi	r22, 0x0B	; 11
    2f4c:	62 9f       	mul	r22, r18
    2f4e:	c0 01       	movw	r24, r0
    2f50:	63 9f       	mul	r22, r19
    2f52:	90 0d       	add	r25, r0
    2f54:	11 24       	eor	r1, r1
    2f56:	8c 57       	subi	r24, 0x7C	; 124
    2f58:	93 4d       	sbci	r25, 0xD3	; 211
    2f5a:	ba 01       	movw	r22, r20
    2f5c:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    2f60:	89 81       	ldd	r24, Y+1	; 0x01
    2f62:	9a 81       	ldd	r25, Y+2	; 0x02
    2f64:	fc 01       	movw	r30, r24
    2f66:	22 8d       	ldd	r18, Z+26	; 0x1a
    2f68:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    2f6c:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    2f70:	fc 01       	movw	r30, r24
    2f72:	82 8d       	ldd	r24, Z+26	; 0x1a
    2f74:	82 17       	cp	r24, r18
    2f76:	18 f4       	brcc	.+6      	; 0x2f7e <vTaskRemoveFromUnorderedEventList+0xb8>
    2f78:	81 e0       	ldi	r24, 0x01	; 1
    2f7a:	80 93 e8 2c 	sts	0x2CE8, r24	; 0x802ce8 <xYieldPending>
    2f7e:	00 00       	nop
    2f80:	28 96       	adiw	r28, 0x08	; 8
    2f82:	cd bf       	out	0x3d, r28	; 61
    2f84:	de bf       	out	0x3e, r29	; 62
    2f86:	df 91       	pop	r29
    2f88:	cf 91       	pop	r28
    2f8a:	08 95       	ret

00002f8c <vTaskInternalSetTimeOutState>:
    2f8c:	cf 93       	push	r28
    2f8e:	df 93       	push	r29
    2f90:	1f 92       	push	r1
    2f92:	1f 92       	push	r1
    2f94:	cd b7       	in	r28, 0x3d	; 61
    2f96:	de b7       	in	r29, 0x3e	; 62
    2f98:	89 83       	std	Y+1, r24	; 0x01
    2f9a:	9a 83       	std	Y+2, r25	; 0x02
    2f9c:	20 91 e9 2c 	lds	r18, 0x2CE9	; 0x802ce9 <xNumOfOverflows>
    2fa0:	89 81       	ldd	r24, Y+1	; 0x01
    2fa2:	9a 81       	ldd	r25, Y+2	; 0x02
    2fa4:	fc 01       	movw	r30, r24
    2fa6:	20 83       	st	Z, r18
    2fa8:	80 91 e1 2c 	lds	r24, 0x2CE1	; 0x802ce1 <xTickCount>
    2fac:	90 91 e2 2c 	lds	r25, 0x2CE2	; 0x802ce2 <xTickCount+0x1>
    2fb0:	a0 91 e3 2c 	lds	r26, 0x2CE3	; 0x802ce3 <xTickCount+0x2>
    2fb4:	b0 91 e4 2c 	lds	r27, 0x2CE4	; 0x802ce4 <xTickCount+0x3>
    2fb8:	29 81       	ldd	r18, Y+1	; 0x01
    2fba:	3a 81       	ldd	r19, Y+2	; 0x02
    2fbc:	f9 01       	movw	r30, r18
    2fbe:	81 83       	std	Z+1, r24	; 0x01
    2fc0:	92 83       	std	Z+2, r25	; 0x02
    2fc2:	a3 83       	std	Z+3, r26	; 0x03
    2fc4:	b4 83       	std	Z+4, r27	; 0x04
    2fc6:	00 00       	nop
    2fc8:	0f 90       	pop	r0
    2fca:	0f 90       	pop	r0
    2fcc:	df 91       	pop	r29
    2fce:	cf 91       	pop	r28
    2fd0:	08 95       	ret

00002fd2 <xTaskCheckForTimeOut>:
    2fd2:	ef 92       	push	r14
    2fd4:	ff 92       	push	r15
    2fd6:	0f 93       	push	r16
    2fd8:	1f 93       	push	r17
    2fda:	cf 93       	push	r28
    2fdc:	df 93       	push	r29
    2fde:	cd b7       	in	r28, 0x3d	; 61
    2fe0:	de b7       	in	r29, 0x3e	; 62
    2fe2:	2d 97       	sbiw	r28, 0x0d	; 13
    2fe4:	cd bf       	out	0x3d, r28	; 61
    2fe6:	de bf       	out	0x3e, r29	; 62
    2fe8:	8a 87       	std	Y+10, r24	; 0x0a
    2fea:	9b 87       	std	Y+11, r25	; 0x0b
    2fec:	6c 87       	std	Y+12, r22	; 0x0c
    2fee:	7d 87       	std	Y+13, r23	; 0x0d
    2ff0:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2ff4:	ff 93       	push	r31
    2ff6:	f8 7f       	andi	r31, 0xF8	; 248
    2ff8:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    2ffc:	80 91 e1 2c 	lds	r24, 0x2CE1	; 0x802ce1 <xTickCount>
    3000:	90 91 e2 2c 	lds	r25, 0x2CE2	; 0x802ce2 <xTickCount+0x1>
    3004:	a0 91 e3 2c 	lds	r26, 0x2CE3	; 0x802ce3 <xTickCount+0x2>
    3008:	b0 91 e4 2c 	lds	r27, 0x2CE4	; 0x802ce4 <xTickCount+0x3>
    300c:	8a 83       	std	Y+2, r24	; 0x02
    300e:	9b 83       	std	Y+3, r25	; 0x03
    3010:	ac 83       	std	Y+4, r26	; 0x04
    3012:	bd 83       	std	Y+5, r27	; 0x05
    3014:	8a 85       	ldd	r24, Y+10	; 0x0a
    3016:	9b 85       	ldd	r25, Y+11	; 0x0b
    3018:	fc 01       	movw	r30, r24
    301a:	81 81       	ldd	r24, Z+1	; 0x01
    301c:	92 81       	ldd	r25, Z+2	; 0x02
    301e:	a3 81       	ldd	r26, Z+3	; 0x03
    3020:	b4 81       	ldd	r27, Z+4	; 0x04
    3022:	2a 81       	ldd	r18, Y+2	; 0x02
    3024:	3b 81       	ldd	r19, Y+3	; 0x03
    3026:	4c 81       	ldd	r20, Y+4	; 0x04
    3028:	5d 81       	ldd	r21, Y+5	; 0x05
    302a:	79 01       	movw	r14, r18
    302c:	8a 01       	movw	r16, r20
    302e:	e8 1a       	sub	r14, r24
    3030:	f9 0a       	sbc	r15, r25
    3032:	0a 0b       	sbc	r16, r26
    3034:	1b 0b       	sbc	r17, r27
    3036:	d8 01       	movw	r26, r16
    3038:	c7 01       	movw	r24, r14
    303a:	8e 83       	std	Y+6, r24	; 0x06
    303c:	9f 83       	std	Y+7, r25	; 0x07
    303e:	a8 87       	std	Y+8, r26	; 0x08
    3040:	b9 87       	std	Y+9, r27	; 0x09
    3042:	8c 85       	ldd	r24, Y+12	; 0x0c
    3044:	9d 85       	ldd	r25, Y+13	; 0x0d
    3046:	fc 01       	movw	r30, r24
    3048:	80 81       	ld	r24, Z
    304a:	91 81       	ldd	r25, Z+1	; 0x01
    304c:	a2 81       	ldd	r26, Z+2	; 0x02
    304e:	b3 81       	ldd	r27, Z+3	; 0x03
    3050:	8f 3f       	cpi	r24, 0xFF	; 255
    3052:	9f 4f       	sbci	r25, 0xFF	; 255
    3054:	af 4f       	sbci	r26, 0xFF	; 255
    3056:	bf 4f       	sbci	r27, 0xFF	; 255
    3058:	11 f4       	brne	.+4      	; 0x305e <xTaskCheckForTimeOut+0x8c>
    305a:	19 82       	std	Y+1, r1	; 0x01
    305c:	54 c0       	rjmp	.+168    	; 0x3106 <xTaskCheckForTimeOut+0x134>
    305e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3060:	9b 85       	ldd	r25, Y+11	; 0x0b
    3062:	fc 01       	movw	r30, r24
    3064:	90 81       	ld	r25, Z
    3066:	80 91 e9 2c 	lds	r24, 0x2CE9	; 0x802ce9 <xNumOfOverflows>
    306a:	98 17       	cp	r25, r24
    306c:	99 f0       	breq	.+38     	; 0x3094 <xTaskCheckForTimeOut+0xc2>
    306e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3070:	9b 85       	ldd	r25, Y+11	; 0x0b
    3072:	fc 01       	movw	r30, r24
    3074:	21 81       	ldd	r18, Z+1	; 0x01
    3076:	32 81       	ldd	r19, Z+2	; 0x02
    3078:	43 81       	ldd	r20, Z+3	; 0x03
    307a:	54 81       	ldd	r21, Z+4	; 0x04
    307c:	8a 81       	ldd	r24, Y+2	; 0x02
    307e:	9b 81       	ldd	r25, Y+3	; 0x03
    3080:	ac 81       	ldd	r26, Y+4	; 0x04
    3082:	bd 81       	ldd	r27, Y+5	; 0x05
    3084:	82 17       	cp	r24, r18
    3086:	93 07       	cpc	r25, r19
    3088:	a4 07       	cpc	r26, r20
    308a:	b5 07       	cpc	r27, r21
    308c:	18 f0       	brcs	.+6      	; 0x3094 <xTaskCheckForTimeOut+0xc2>
    308e:	81 e0       	ldi	r24, 0x01	; 1
    3090:	89 83       	std	Y+1, r24	; 0x01
    3092:	39 c0       	rjmp	.+114    	; 0x3106 <xTaskCheckForTimeOut+0x134>
    3094:	8c 85       	ldd	r24, Y+12	; 0x0c
    3096:	9d 85       	ldd	r25, Y+13	; 0x0d
    3098:	fc 01       	movw	r30, r24
    309a:	20 81       	ld	r18, Z
    309c:	31 81       	ldd	r19, Z+1	; 0x01
    309e:	42 81       	ldd	r20, Z+2	; 0x02
    30a0:	53 81       	ldd	r21, Z+3	; 0x03
    30a2:	8e 81       	ldd	r24, Y+6	; 0x06
    30a4:	9f 81       	ldd	r25, Y+7	; 0x07
    30a6:	a8 85       	ldd	r26, Y+8	; 0x08
    30a8:	b9 85       	ldd	r27, Y+9	; 0x09
    30aa:	82 17       	cp	r24, r18
    30ac:	93 07       	cpc	r25, r19
    30ae:	a4 07       	cpc	r26, r20
    30b0:	b5 07       	cpc	r27, r21
    30b2:	00 f5       	brcc	.+64     	; 0x30f4 <xTaskCheckForTimeOut+0x122>
    30b4:	8c 85       	ldd	r24, Y+12	; 0x0c
    30b6:	9d 85       	ldd	r25, Y+13	; 0x0d
    30b8:	fc 01       	movw	r30, r24
    30ba:	20 81       	ld	r18, Z
    30bc:	31 81       	ldd	r19, Z+1	; 0x01
    30be:	42 81       	ldd	r20, Z+2	; 0x02
    30c0:	53 81       	ldd	r21, Z+3	; 0x03
    30c2:	8e 81       	ldd	r24, Y+6	; 0x06
    30c4:	9f 81       	ldd	r25, Y+7	; 0x07
    30c6:	a8 85       	ldd	r26, Y+8	; 0x08
    30c8:	b9 85       	ldd	r27, Y+9	; 0x09
    30ca:	79 01       	movw	r14, r18
    30cc:	8a 01       	movw	r16, r20
    30ce:	e8 1a       	sub	r14, r24
    30d0:	f9 0a       	sbc	r15, r25
    30d2:	0a 0b       	sbc	r16, r26
    30d4:	1b 0b       	sbc	r17, r27
    30d6:	d8 01       	movw	r26, r16
    30d8:	c7 01       	movw	r24, r14
    30da:	2c 85       	ldd	r18, Y+12	; 0x0c
    30dc:	3d 85       	ldd	r19, Y+13	; 0x0d
    30de:	f9 01       	movw	r30, r18
    30e0:	80 83       	st	Z, r24
    30e2:	91 83       	std	Z+1, r25	; 0x01
    30e4:	a2 83       	std	Z+2, r26	; 0x02
    30e6:	b3 83       	std	Z+3, r27	; 0x03
    30e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    30ea:	9b 85       	ldd	r25, Y+11	; 0x0b
    30ec:	0e 94 c6 17 	call	0x2f8c	; 0x2f8c <vTaskInternalSetTimeOutState>
    30f0:	19 82       	std	Y+1, r1	; 0x01
    30f2:	09 c0       	rjmp	.+18     	; 0x3106 <xTaskCheckForTimeOut+0x134>
    30f4:	8c 85       	ldd	r24, Y+12	; 0x0c
    30f6:	9d 85       	ldd	r25, Y+13	; 0x0d
    30f8:	fc 01       	movw	r30, r24
    30fa:	10 82       	st	Z, r1
    30fc:	11 82       	std	Z+1, r1	; 0x01
    30fe:	12 82       	std	Z+2, r1	; 0x02
    3100:	13 82       	std	Z+3, r1	; 0x03
    3102:	81 e0       	ldi	r24, 0x01	; 1
    3104:	89 83       	std	Y+1, r24	; 0x01
    3106:	ff 91       	pop	r31
    3108:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    310c:	89 81       	ldd	r24, Y+1	; 0x01
    310e:	2d 96       	adiw	r28, 0x0d	; 13
    3110:	cd bf       	out	0x3d, r28	; 61
    3112:	de bf       	out	0x3e, r29	; 62
    3114:	df 91       	pop	r29
    3116:	cf 91       	pop	r28
    3118:	1f 91       	pop	r17
    311a:	0f 91       	pop	r16
    311c:	ff 90       	pop	r15
    311e:	ef 90       	pop	r14
    3120:	08 95       	ret

00003122 <vTaskMissedYield>:
    3122:	cf 93       	push	r28
    3124:	df 93       	push	r29
    3126:	cd b7       	in	r28, 0x3d	; 61
    3128:	de b7       	in	r29, 0x3e	; 62
    312a:	81 e0       	ldi	r24, 0x01	; 1
    312c:	80 93 e8 2c 	sts	0x2CE8, r24	; 0x802ce8 <xYieldPending>
    3130:	00 00       	nop
    3132:	df 91       	pop	r29
    3134:	cf 91       	pop	r28
    3136:	08 95       	ret

00003138 <prvIdleTask>:
    3138:	cf 93       	push	r28
    313a:	df 93       	push	r29
    313c:	1f 92       	push	r1
    313e:	1f 92       	push	r1
    3140:	cd b7       	in	r28, 0x3d	; 61
    3142:	de b7       	in	r29, 0x3e	; 62
    3144:	89 83       	std	Y+1, r24	; 0x01
    3146:	9a 83       	std	Y+2, r25	; 0x02
    3148:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <prvCheckTasksWaitingTermination>
    314c:	80 91 84 2c 	lds	r24, 0x2C84	; 0x802c84 <pxReadyTasksLists>
    3150:	82 30       	cpi	r24, 0x02	; 2
    3152:	d0 f3       	brcs	.-12     	; 0x3148 <prvIdleTask+0x10>
    3154:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    3158:	f7 cf       	rjmp	.-18     	; 0x3148 <prvIdleTask+0x10>

0000315a <prvInitialiseTaskLists>:
    315a:	cf 93       	push	r28
    315c:	df 93       	push	r29
    315e:	1f 92       	push	r1
    3160:	cd b7       	in	r28, 0x3d	; 61
    3162:	de b7       	in	r29, 0x3e	; 62
    3164:	19 82       	std	Y+1, r1	; 0x01
    3166:	10 c0       	rjmp	.+32     	; 0x3188 <prvInitialiseTaskLists+0x2e>
    3168:	89 81       	ldd	r24, Y+1	; 0x01
    316a:	28 2f       	mov	r18, r24
    316c:	30 e0       	ldi	r19, 0x00	; 0
    316e:	4b e0       	ldi	r20, 0x0B	; 11
    3170:	42 9f       	mul	r20, r18
    3172:	c0 01       	movw	r24, r0
    3174:	43 9f       	mul	r20, r19
    3176:	90 0d       	add	r25, r0
    3178:	11 24       	eor	r1, r1
    317a:	8c 57       	subi	r24, 0x7C	; 124
    317c:	93 4d       	sbci	r25, 0xD3	; 211
    317e:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    3182:	89 81       	ldd	r24, Y+1	; 0x01
    3184:	8f 5f       	subi	r24, 0xFF	; 255
    3186:	89 83       	std	Y+1, r24	; 0x01
    3188:	89 81       	ldd	r24, Y+1	; 0x01
    318a:	84 30       	cpi	r24, 0x04	; 4
    318c:	68 f3       	brcs	.-38     	; 0x3168 <prvInitialiseTaskLists+0xe>
    318e:	80 eb       	ldi	r24, 0xB0	; 176
    3190:	9c e2       	ldi	r25, 0x2C	; 44
    3192:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    3196:	8b eb       	ldi	r24, 0xBB	; 187
    3198:	9c e2       	ldi	r25, 0x2C	; 44
    319a:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    319e:	8a ec       	ldi	r24, 0xCA	; 202
    31a0:	9c e2       	ldi	r25, 0x2C	; 44
    31a2:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    31a6:	85 ed       	ldi	r24, 0xD5	; 213
    31a8:	9c e2       	ldi	r25, 0x2C	; 44
    31aa:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    31ae:	80 eb       	ldi	r24, 0xB0	; 176
    31b0:	9c e2       	ldi	r25, 0x2C	; 44
    31b2:	80 93 c6 2c 	sts	0x2CC6, r24	; 0x802cc6 <pxDelayedTaskList>
    31b6:	90 93 c7 2c 	sts	0x2CC7, r25	; 0x802cc7 <pxDelayedTaskList+0x1>
    31ba:	8b eb       	ldi	r24, 0xBB	; 187
    31bc:	9c e2       	ldi	r25, 0x2C	; 44
    31be:	80 93 c8 2c 	sts	0x2CC8, r24	; 0x802cc8 <pxOverflowDelayedTaskList>
    31c2:	90 93 c9 2c 	sts	0x2CC9, r25	; 0x802cc9 <pxOverflowDelayedTaskList+0x1>
    31c6:	00 00       	nop
    31c8:	0f 90       	pop	r0
    31ca:	df 91       	pop	r29
    31cc:	cf 91       	pop	r28
    31ce:	08 95       	ret

000031d0 <prvCheckTasksWaitingTermination>:
    31d0:	cf 93       	push	r28
    31d2:	df 93       	push	r29
    31d4:	cd b7       	in	r28, 0x3d	; 61
    31d6:	de b7       	in	r29, 0x3e	; 62
    31d8:	00 00       	nop
    31da:	df 91       	pop	r29
    31dc:	cf 91       	pop	r28
    31de:	08 95       	ret

000031e0 <prvResetNextTaskUnblockTime>:
    31e0:	cf 93       	push	r28
    31e2:	df 93       	push	r29
    31e4:	1f 92       	push	r1
    31e6:	1f 92       	push	r1
    31e8:	cd b7       	in	r28, 0x3d	; 61
    31ea:	de b7       	in	r29, 0x3e	; 62
    31ec:	80 91 c6 2c 	lds	r24, 0x2CC6	; 0x802cc6 <pxDelayedTaskList>
    31f0:	90 91 c7 2c 	lds	r25, 0x2CC7	; 0x802cc7 <pxDelayedTaskList+0x1>
    31f4:	fc 01       	movw	r30, r24
    31f6:	80 81       	ld	r24, Z
    31f8:	88 23       	and	r24, r24
    31fa:	61 f4       	brne	.+24     	; 0x3214 <prvResetNextTaskUnblockTime+0x34>
    31fc:	8f ef       	ldi	r24, 0xFF	; 255
    31fe:	9f ef       	ldi	r25, 0xFF	; 255
    3200:	dc 01       	movw	r26, r24
    3202:	80 93 eb 2c 	sts	0x2CEB, r24	; 0x802ceb <xNextTaskUnblockTime>
    3206:	90 93 ec 2c 	sts	0x2CEC, r25	; 0x802cec <xNextTaskUnblockTime+0x1>
    320a:	a0 93 ed 2c 	sts	0x2CED, r26	; 0x802ced <xNextTaskUnblockTime+0x2>
    320e:	b0 93 ee 2c 	sts	0x2CEE, r27	; 0x802cee <xNextTaskUnblockTime+0x3>
    3212:	1b c0       	rjmp	.+54     	; 0x324a <prvResetNextTaskUnblockTime+0x6a>
    3214:	80 91 c6 2c 	lds	r24, 0x2CC6	; 0x802cc6 <pxDelayedTaskList>
    3218:	90 91 c7 2c 	lds	r25, 0x2CC7	; 0x802cc7 <pxDelayedTaskList+0x1>
    321c:	fc 01       	movw	r30, r24
    321e:	87 81       	ldd	r24, Z+7	; 0x07
    3220:	90 85       	ldd	r25, Z+8	; 0x08
    3222:	fc 01       	movw	r30, r24
    3224:	80 85       	ldd	r24, Z+8	; 0x08
    3226:	91 85       	ldd	r25, Z+9	; 0x09
    3228:	89 83       	std	Y+1, r24	; 0x01
    322a:	9a 83       	std	Y+2, r25	; 0x02
    322c:	89 81       	ldd	r24, Y+1	; 0x01
    322e:	9a 81       	ldd	r25, Y+2	; 0x02
    3230:	fc 01       	movw	r30, r24
    3232:	82 81       	ldd	r24, Z+2	; 0x02
    3234:	93 81       	ldd	r25, Z+3	; 0x03
    3236:	a4 81       	ldd	r26, Z+4	; 0x04
    3238:	b5 81       	ldd	r27, Z+5	; 0x05
    323a:	80 93 eb 2c 	sts	0x2CEB, r24	; 0x802ceb <xNextTaskUnblockTime>
    323e:	90 93 ec 2c 	sts	0x2CEC, r25	; 0x802cec <xNextTaskUnblockTime+0x1>
    3242:	a0 93 ed 2c 	sts	0x2CED, r26	; 0x802ced <xNextTaskUnblockTime+0x2>
    3246:	b0 93 ee 2c 	sts	0x2CEE, r27	; 0x802cee <xNextTaskUnblockTime+0x3>
    324a:	00 00       	nop
    324c:	0f 90       	pop	r0
    324e:	0f 90       	pop	r0
    3250:	df 91       	pop	r29
    3252:	cf 91       	pop	r28
    3254:	08 95       	ret

00003256 <xTaskGetSchedulerState>:
    3256:	cf 93       	push	r28
    3258:	df 93       	push	r29
    325a:	1f 92       	push	r1
    325c:	cd b7       	in	r28, 0x3d	; 61
    325e:	de b7       	in	r29, 0x3e	; 62
    3260:	80 91 e6 2c 	lds	r24, 0x2CE6	; 0x802ce6 <xSchedulerRunning>
    3264:	88 23       	and	r24, r24
    3266:	19 f4       	brne	.+6      	; 0x326e <xTaskGetSchedulerState+0x18>
    3268:	81 e0       	ldi	r24, 0x01	; 1
    326a:	89 83       	std	Y+1, r24	; 0x01
    326c:	08 c0       	rjmp	.+16     	; 0x327e <xTaskGetSchedulerState+0x28>
    326e:	80 91 f1 2c 	lds	r24, 0x2CF1	; 0x802cf1 <uxSchedulerSuspended>
    3272:	88 23       	and	r24, r24
    3274:	19 f4       	brne	.+6      	; 0x327c <xTaskGetSchedulerState+0x26>
    3276:	82 e0       	ldi	r24, 0x02	; 2
    3278:	89 83       	std	Y+1, r24	; 0x01
    327a:	01 c0       	rjmp	.+2      	; 0x327e <xTaskGetSchedulerState+0x28>
    327c:	19 82       	std	Y+1, r1	; 0x01
    327e:	89 81       	ldd	r24, Y+1	; 0x01
    3280:	0f 90       	pop	r0
    3282:	df 91       	pop	r29
    3284:	cf 91       	pop	r28
    3286:	08 95       	ret

00003288 <uxTaskResetEventItemValue>:
    3288:	ef 92       	push	r14
    328a:	ff 92       	push	r15
    328c:	0f 93       	push	r16
    328e:	1f 93       	push	r17
    3290:	cf 93       	push	r28
    3292:	df 93       	push	r29
    3294:	00 d0       	rcall	.+0      	; 0x3296 <uxTaskResetEventItemValue+0xe>
    3296:	1f 92       	push	r1
    3298:	cd b7       	in	r28, 0x3d	; 61
    329a:	de b7       	in	r29, 0x3e	; 62
    329c:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    32a0:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    32a4:	fc 01       	movw	r30, r24
    32a6:	86 85       	ldd	r24, Z+14	; 0x0e
    32a8:	97 85       	ldd	r25, Z+15	; 0x0f
    32aa:	a0 89       	ldd	r26, Z+16	; 0x10
    32ac:	b1 89       	ldd	r27, Z+17	; 0x11
    32ae:	89 83       	std	Y+1, r24	; 0x01
    32b0:	9a 83       	std	Y+2, r25	; 0x02
    32b2:	ab 83       	std	Y+3, r26	; 0x03
    32b4:	bc 83       	std	Y+4, r27	; 0x04
    32b6:	60 91 82 2c 	lds	r22, 0x2C82	; 0x802c82 <pxCurrentTCB>
    32ba:	70 91 83 2c 	lds	r23, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    32be:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    32c2:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    32c6:	fc 01       	movw	r30, r24
    32c8:	82 8d       	ldd	r24, Z+26	; 0x1a
    32ca:	88 2f       	mov	r24, r24
    32cc:	90 e0       	ldi	r25, 0x00	; 0
    32ce:	a0 e0       	ldi	r26, 0x00	; 0
    32d0:	b0 e0       	ldi	r27, 0x00	; 0
    32d2:	24 e0       	ldi	r18, 0x04	; 4
    32d4:	30 e0       	ldi	r19, 0x00	; 0
    32d6:	40 e0       	ldi	r20, 0x00	; 0
    32d8:	50 e0       	ldi	r21, 0x00	; 0
    32da:	79 01       	movw	r14, r18
    32dc:	8a 01       	movw	r16, r20
    32de:	e8 1a       	sub	r14, r24
    32e0:	f9 0a       	sbc	r15, r25
    32e2:	0a 0b       	sbc	r16, r26
    32e4:	1b 0b       	sbc	r17, r27
    32e6:	d8 01       	movw	r26, r16
    32e8:	c7 01       	movw	r24, r14
    32ea:	fb 01       	movw	r30, r22
    32ec:	86 87       	std	Z+14, r24	; 0x0e
    32ee:	97 87       	std	Z+15, r25	; 0x0f
    32f0:	a0 8b       	std	Z+16, r26	; 0x10
    32f2:	b1 8b       	std	Z+17, r27	; 0x11
    32f4:	89 81       	ldd	r24, Y+1	; 0x01
    32f6:	9a 81       	ldd	r25, Y+2	; 0x02
    32f8:	ab 81       	ldd	r26, Y+3	; 0x03
    32fa:	bc 81       	ldd	r27, Y+4	; 0x04
    32fc:	bc 01       	movw	r22, r24
    32fe:	cd 01       	movw	r24, r26
    3300:	24 96       	adiw	r28, 0x04	; 4
    3302:	cd bf       	out	0x3d, r28	; 61
    3304:	de bf       	out	0x3e, r29	; 62
    3306:	df 91       	pop	r29
    3308:	cf 91       	pop	r28
    330a:	1f 91       	pop	r17
    330c:	0f 91       	pop	r16
    330e:	ff 90       	pop	r15
    3310:	ef 90       	pop	r14
    3312:	08 95       	ret

00003314 <prvAddCurrentTaskToDelayedList>:
    3314:	cf 93       	push	r28
    3316:	df 93       	push	r29
    3318:	cd b7       	in	r28, 0x3d	; 61
    331a:	de b7       	in	r29, 0x3e	; 62
    331c:	2d 97       	sbiw	r28, 0x0d	; 13
    331e:	cd bf       	out	0x3d, r28	; 61
    3320:	de bf       	out	0x3e, r29	; 62
    3322:	69 87       	std	Y+9, r22	; 0x09
    3324:	7a 87       	std	Y+10, r23	; 0x0a
    3326:	8b 87       	std	Y+11, r24	; 0x0b
    3328:	9c 87       	std	Y+12, r25	; 0x0c
    332a:	4d 87       	std	Y+13, r20	; 0x0d
    332c:	80 91 e1 2c 	lds	r24, 0x2CE1	; 0x802ce1 <xTickCount>
    3330:	90 91 e2 2c 	lds	r25, 0x2CE2	; 0x802ce2 <xTickCount+0x1>
    3334:	a0 91 e3 2c 	lds	r26, 0x2CE3	; 0x802ce3 <xTickCount+0x2>
    3338:	b0 91 e4 2c 	lds	r27, 0x2CE4	; 0x802ce4 <xTickCount+0x3>
    333c:	89 83       	std	Y+1, r24	; 0x01
    333e:	9a 83       	std	Y+2, r25	; 0x02
    3340:	ab 83       	std	Y+3, r26	; 0x03
    3342:	bc 83       	std	Y+4, r27	; 0x04
    3344:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    3348:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    334c:	02 96       	adiw	r24, 0x02	; 2
    334e:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    3352:	89 85       	ldd	r24, Y+9	; 0x09
    3354:	9a 85       	ldd	r25, Y+10	; 0x0a
    3356:	ab 85       	ldd	r26, Y+11	; 0x0b
    3358:	bc 85       	ldd	r27, Y+12	; 0x0c
    335a:	8f 3f       	cpi	r24, 0xFF	; 255
    335c:	9f 4f       	sbci	r25, 0xFF	; 255
    335e:	af 4f       	sbci	r26, 0xFF	; 255
    3360:	bf 4f       	sbci	r27, 0xFF	; 255
    3362:	71 f4       	brne	.+28     	; 0x3380 <prvAddCurrentTaskToDelayedList+0x6c>
    3364:	8d 85       	ldd	r24, Y+13	; 0x0d
    3366:	88 23       	and	r24, r24
    3368:	59 f0       	breq	.+22     	; 0x3380 <prvAddCurrentTaskToDelayedList+0x6c>
    336a:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    336e:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    3372:	02 96       	adiw	r24, 0x02	; 2
    3374:	bc 01       	movw	r22, r24
    3376:	85 ed       	ldi	r24, 0xD5	; 213
    3378:	9c e2       	ldi	r25, 0x2C	; 44
    337a:	0e 94 b7 07 	call	0xf6e	; 0xf6e <vListInsertEnd>
    337e:	64 c0       	rjmp	.+200    	; 0x3448 <prvAddCurrentTaskToDelayedList+0x134>
    3380:	29 81       	ldd	r18, Y+1	; 0x01
    3382:	3a 81       	ldd	r19, Y+2	; 0x02
    3384:	4b 81       	ldd	r20, Y+3	; 0x03
    3386:	5c 81       	ldd	r21, Y+4	; 0x04
    3388:	89 85       	ldd	r24, Y+9	; 0x09
    338a:	9a 85       	ldd	r25, Y+10	; 0x0a
    338c:	ab 85       	ldd	r26, Y+11	; 0x0b
    338e:	bc 85       	ldd	r27, Y+12	; 0x0c
    3390:	82 0f       	add	r24, r18
    3392:	93 1f       	adc	r25, r19
    3394:	a4 1f       	adc	r26, r20
    3396:	b5 1f       	adc	r27, r21
    3398:	8d 83       	std	Y+5, r24	; 0x05
    339a:	9e 83       	std	Y+6, r25	; 0x06
    339c:	af 83       	std	Y+7, r26	; 0x07
    339e:	b8 87       	std	Y+8, r27	; 0x08
    33a0:	20 91 82 2c 	lds	r18, 0x2C82	; 0x802c82 <pxCurrentTCB>
    33a4:	30 91 83 2c 	lds	r19, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    33a8:	8d 81       	ldd	r24, Y+5	; 0x05
    33aa:	9e 81       	ldd	r25, Y+6	; 0x06
    33ac:	af 81       	ldd	r26, Y+7	; 0x07
    33ae:	b8 85       	ldd	r27, Y+8	; 0x08
    33b0:	f9 01       	movw	r30, r18
    33b2:	82 83       	std	Z+2, r24	; 0x02
    33b4:	93 83       	std	Z+3, r25	; 0x03
    33b6:	a4 83       	std	Z+4, r26	; 0x04
    33b8:	b5 83       	std	Z+5, r27	; 0x05
    33ba:	2d 81       	ldd	r18, Y+5	; 0x05
    33bc:	3e 81       	ldd	r19, Y+6	; 0x06
    33be:	4f 81       	ldd	r20, Y+7	; 0x07
    33c0:	58 85       	ldd	r21, Y+8	; 0x08
    33c2:	89 81       	ldd	r24, Y+1	; 0x01
    33c4:	9a 81       	ldd	r25, Y+2	; 0x02
    33c6:	ab 81       	ldd	r26, Y+3	; 0x03
    33c8:	bc 81       	ldd	r27, Y+4	; 0x04
    33ca:	28 17       	cp	r18, r24
    33cc:	39 07       	cpc	r19, r25
    33ce:	4a 07       	cpc	r20, r26
    33d0:	5b 07       	cpc	r21, r27
    33d2:	78 f4       	brcc	.+30     	; 0x33f2 <prvAddCurrentTaskToDelayedList+0xde>
    33d4:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    33d8:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    33dc:	9c 01       	movw	r18, r24
    33de:	2e 5f       	subi	r18, 0xFE	; 254
    33e0:	3f 4f       	sbci	r19, 0xFF	; 255
    33e2:	80 91 c8 2c 	lds	r24, 0x2CC8	; 0x802cc8 <pxOverflowDelayedTaskList>
    33e6:	90 91 c9 2c 	lds	r25, 0x2CC9	; 0x802cc9 <pxOverflowDelayedTaskList+0x1>
    33ea:	b9 01       	movw	r22, r18
    33ec:	0e 94 02 08 	call	0x1004	; 0x1004 <vListInsert>
    33f0:	2b c0       	rjmp	.+86     	; 0x3448 <prvAddCurrentTaskToDelayedList+0x134>
    33f2:	80 91 82 2c 	lds	r24, 0x2C82	; 0x802c82 <pxCurrentTCB>
    33f6:	90 91 83 2c 	lds	r25, 0x2C83	; 0x802c83 <pxCurrentTCB+0x1>
    33fa:	9c 01       	movw	r18, r24
    33fc:	2e 5f       	subi	r18, 0xFE	; 254
    33fe:	3f 4f       	sbci	r19, 0xFF	; 255
    3400:	80 91 c6 2c 	lds	r24, 0x2CC6	; 0x802cc6 <pxDelayedTaskList>
    3404:	90 91 c7 2c 	lds	r25, 0x2CC7	; 0x802cc7 <pxDelayedTaskList+0x1>
    3408:	b9 01       	movw	r22, r18
    340a:	0e 94 02 08 	call	0x1004	; 0x1004 <vListInsert>
    340e:	80 91 eb 2c 	lds	r24, 0x2CEB	; 0x802ceb <xNextTaskUnblockTime>
    3412:	90 91 ec 2c 	lds	r25, 0x2CEC	; 0x802cec <xNextTaskUnblockTime+0x1>
    3416:	a0 91 ed 2c 	lds	r26, 0x2CED	; 0x802ced <xNextTaskUnblockTime+0x2>
    341a:	b0 91 ee 2c 	lds	r27, 0x2CEE	; 0x802cee <xNextTaskUnblockTime+0x3>
    341e:	2d 81       	ldd	r18, Y+5	; 0x05
    3420:	3e 81       	ldd	r19, Y+6	; 0x06
    3422:	4f 81       	ldd	r20, Y+7	; 0x07
    3424:	58 85       	ldd	r21, Y+8	; 0x08
    3426:	28 17       	cp	r18, r24
    3428:	39 07       	cpc	r19, r25
    342a:	4a 07       	cpc	r20, r26
    342c:	5b 07       	cpc	r21, r27
    342e:	60 f4       	brcc	.+24     	; 0x3448 <prvAddCurrentTaskToDelayedList+0x134>
    3430:	8d 81       	ldd	r24, Y+5	; 0x05
    3432:	9e 81       	ldd	r25, Y+6	; 0x06
    3434:	af 81       	ldd	r26, Y+7	; 0x07
    3436:	b8 85       	ldd	r27, Y+8	; 0x08
    3438:	80 93 eb 2c 	sts	0x2CEB, r24	; 0x802ceb <xNextTaskUnblockTime>
    343c:	90 93 ec 2c 	sts	0x2CEC, r25	; 0x802cec <xNextTaskUnblockTime+0x1>
    3440:	a0 93 ed 2c 	sts	0x2CED, r26	; 0x802ced <xNextTaskUnblockTime+0x2>
    3444:	b0 93 ee 2c 	sts	0x2CEE, r27	; 0x802cee <xNextTaskUnblockTime+0x3>
    3448:	00 00       	nop
    344a:	2d 96       	adiw	r28, 0x0d	; 13
    344c:	cd bf       	out	0x3d, r28	; 61
    344e:	de bf       	out	0x3e, r29	; 62
    3450:	df 91       	pop	r29
    3452:	cf 91       	pop	r28
    3454:	08 95       	ret

00003456 <xTimerCreateTimerTask>:
    3456:	ef 92       	push	r14
    3458:	ff 92       	push	r15
    345a:	0f 93       	push	r16
    345c:	cf 93       	push	r28
    345e:	df 93       	push	r29
    3460:	1f 92       	push	r1
    3462:	cd b7       	in	r28, 0x3d	; 61
    3464:	de b7       	in	r29, 0x3e	; 62
    3466:	19 82       	std	Y+1, r1	; 0x01
    3468:	0e 94 bc 1e 	call	0x3d78	; 0x3d78 <prvCheckForValidListAndQueue>
    346c:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    3470:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3474:	89 2b       	or	r24, r25
    3476:	91 f0       	breq	.+36     	; 0x349c <xTimerCreateTimerTask+0x46>
    3478:	0f 2e       	mov	r0, r31
    347a:	fe e0       	ldi	r31, 0x0E	; 14
    347c:	ef 2e       	mov	r14, r31
    347e:	fd e2       	ldi	r31, 0x2D	; 45
    3480:	ff 2e       	mov	r15, r31
    3482:	f0 2d       	mov	r31, r0
    3484:	03 e0       	ldi	r16, 0x03	; 3
    3486:	20 e0       	ldi	r18, 0x00	; 0
    3488:	30 e0       	ldi	r19, 0x00	; 0
    348a:	48 ec       	ldi	r20, 0xC8	; 200
    348c:	50 e0       	ldi	r21, 0x00	; 0
    348e:	65 e0       	ldi	r22, 0x05	; 5
    3490:	70 e2       	ldi	r23, 0x20	; 32
    3492:	81 e4       	ldi	r24, 0x41	; 65
    3494:	9b e1       	ldi	r25, 0x1B	; 27
    3496:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
    349a:	89 83       	std	Y+1, r24	; 0x01
    349c:	89 81       	ldd	r24, Y+1	; 0x01
    349e:	0f 90       	pop	r0
    34a0:	df 91       	pop	r29
    34a2:	cf 91       	pop	r28
    34a4:	0f 91       	pop	r16
    34a6:	ff 90       	pop	r15
    34a8:	ef 90       	pop	r14
    34aa:	08 95       	ret

000034ac <xTimerGenericCommand>:
    34ac:	cf 92       	push	r12
    34ae:	df 92       	push	r13
    34b0:	ef 92       	push	r14
    34b2:	ff 92       	push	r15
    34b4:	0f 93       	push	r16
    34b6:	1f 93       	push	r17
    34b8:	cf 93       	push	r28
    34ba:	df 93       	push	r29
    34bc:	cd b7       	in	r28, 0x3d	; 61
    34be:	de b7       	in	r29, 0x3e	; 62
    34c0:	67 97       	sbiw	r28, 0x17	; 23
    34c2:	cd bf       	out	0x3d, r28	; 61
    34c4:	de bf       	out	0x3e, r29	; 62
    34c6:	8b 87       	std	Y+11, r24	; 0x0b
    34c8:	9c 87       	std	Y+12, r25	; 0x0c
    34ca:	6d 87       	std	Y+13, r22	; 0x0d
    34cc:	2e 87       	std	Y+14, r18	; 0x0e
    34ce:	3f 87       	std	Y+15, r19	; 0x0f
    34d0:	48 8b       	std	Y+16, r20	; 0x10
    34d2:	59 8b       	std	Y+17, r21	; 0x11
    34d4:	0a 8b       	std	Y+18, r16	; 0x12
    34d6:	1b 8b       	std	Y+19, r17	; 0x13
    34d8:	cc 8a       	std	Y+20, r12	; 0x14
    34da:	dd 8a       	std	Y+21, r13	; 0x15
    34dc:	ee 8a       	std	Y+22, r14	; 0x16
    34de:	ff 8a       	std	Y+23, r15	; 0x17
    34e0:	19 82       	std	Y+1, r1	; 0x01
    34e2:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    34e6:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    34ea:	89 2b       	or	r24, r25
    34ec:	09 f4       	brne	.+2      	; 0x34f0 <xTimerGenericCommand+0x44>
    34ee:	44 c0       	rjmp	.+136    	; 0x3578 <xTimerGenericCommand+0xcc>
    34f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    34f2:	8a 83       	std	Y+2, r24	; 0x02
    34f4:	8e 85       	ldd	r24, Y+14	; 0x0e
    34f6:	9f 85       	ldd	r25, Y+15	; 0x0f
    34f8:	a8 89       	ldd	r26, Y+16	; 0x10
    34fa:	b9 89       	ldd	r27, Y+17	; 0x11
    34fc:	8b 83       	std	Y+3, r24	; 0x03
    34fe:	9c 83       	std	Y+4, r25	; 0x04
    3500:	ad 83       	std	Y+5, r26	; 0x05
    3502:	be 83       	std	Y+6, r27	; 0x06
    3504:	8b 85       	ldd	r24, Y+11	; 0x0b
    3506:	9c 85       	ldd	r25, Y+12	; 0x0c
    3508:	8f 83       	std	Y+7, r24	; 0x07
    350a:	98 87       	std	Y+8, r25	; 0x08
    350c:	8d 85       	ldd	r24, Y+13	; 0x0d
    350e:	86 30       	cpi	r24, 0x06	; 6
    3510:	34 f5       	brge	.+76     	; 0x355e <xTimerGenericCommand+0xb2>
    3512:	0e 94 2b 19 	call	0x3256	; 0x3256 <xTaskGetSchedulerState>
    3516:	82 30       	cpi	r24, 0x02	; 2
    3518:	99 f4       	brne	.+38     	; 0x3540 <xTimerGenericCommand+0x94>
    351a:	e0 91 0c 2d 	lds	r30, 0x2D0C	; 0x802d0c <xTimerQueue>
    351e:	f0 91 0d 2d 	lds	r31, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3522:	8c 89       	ldd	r24, Y+20	; 0x14
    3524:	9d 89       	ldd	r25, Y+21	; 0x15
    3526:	ae 89       	ldd	r26, Y+22	; 0x16
    3528:	bf 89       	ldd	r27, Y+23	; 0x17
    352a:	be 01       	movw	r22, r28
    352c:	6e 5f       	subi	r22, 0xFE	; 254
    352e:	7f 4f       	sbci	r23, 0xFF	; 255
    3530:	00 e0       	ldi	r16, 0x00	; 0
    3532:	9c 01       	movw	r18, r24
    3534:	ad 01       	movw	r20, r26
    3536:	cf 01       	movw	r24, r30
    3538:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <xQueueGenericSend>
    353c:	89 83       	std	Y+1, r24	; 0x01
    353e:	1c c0       	rjmp	.+56     	; 0x3578 <xTimerGenericCommand+0xcc>
    3540:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    3544:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3548:	be 01       	movw	r22, r28
    354a:	6e 5f       	subi	r22, 0xFE	; 254
    354c:	7f 4f       	sbci	r23, 0xFF	; 255
    354e:	00 e0       	ldi	r16, 0x00	; 0
    3550:	20 e0       	ldi	r18, 0x00	; 0
    3552:	30 e0       	ldi	r19, 0x00	; 0
    3554:	a9 01       	movw	r20, r18
    3556:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <xQueueGenericSend>
    355a:	89 83       	std	Y+1, r24	; 0x01
    355c:	0d c0       	rjmp	.+26     	; 0x3578 <xTimerGenericCommand+0xcc>
    355e:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    3562:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3566:	4a 89       	ldd	r20, Y+18	; 0x12
    3568:	5b 89       	ldd	r21, Y+19	; 0x13
    356a:	be 01       	movw	r22, r28
    356c:	6e 5f       	subi	r22, 0xFE	; 254
    356e:	7f 4f       	sbci	r23, 0xFF	; 255
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xQueueGenericSendFromISR>
    3576:	89 83       	std	Y+1, r24	; 0x01
    3578:	89 81       	ldd	r24, Y+1	; 0x01
    357a:	67 96       	adiw	r28, 0x17	; 23
    357c:	cd bf       	out	0x3d, r28	; 61
    357e:	de bf       	out	0x3e, r29	; 62
    3580:	df 91       	pop	r29
    3582:	cf 91       	pop	r28
    3584:	1f 91       	pop	r17
    3586:	0f 91       	pop	r16
    3588:	ff 90       	pop	r15
    358a:	ef 90       	pop	r14
    358c:	df 90       	pop	r13
    358e:	cf 90       	pop	r12
    3590:	08 95       	ret

00003592 <prvProcessExpiredTimer>:
    3592:	cf 92       	push	r12
    3594:	df 92       	push	r13
    3596:	ef 92       	push	r14
    3598:	ff 92       	push	r15
    359a:	0f 93       	push	r16
    359c:	1f 93       	push	r17
    359e:	cf 93       	push	r28
    35a0:	df 93       	push	r29
    35a2:	cd b7       	in	r28, 0x3d	; 61
    35a4:	de b7       	in	r29, 0x3e	; 62
    35a6:	2b 97       	sbiw	r28, 0x0b	; 11
    35a8:	cd bf       	out	0x3d, r28	; 61
    35aa:	de bf       	out	0x3e, r29	; 62
    35ac:	6c 83       	std	Y+4, r22	; 0x04
    35ae:	7d 83       	std	Y+5, r23	; 0x05
    35b0:	8e 83       	std	Y+6, r24	; 0x06
    35b2:	9f 83       	std	Y+7, r25	; 0x07
    35b4:	28 87       	std	Y+8, r18	; 0x08
    35b6:	39 87       	std	Y+9, r19	; 0x09
    35b8:	4a 87       	std	Y+10, r20	; 0x0a
    35ba:	5b 87       	std	Y+11, r21	; 0x0b
    35bc:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    35c0:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    35c4:	fc 01       	movw	r30, r24
    35c6:	87 81       	ldd	r24, Z+7	; 0x07
    35c8:	90 85       	ldd	r25, Z+8	; 0x08
    35ca:	fc 01       	movw	r30, r24
    35cc:	80 85       	ldd	r24, Z+8	; 0x08
    35ce:	91 85       	ldd	r25, Z+9	; 0x09
    35d0:	89 83       	std	Y+1, r24	; 0x01
    35d2:	9a 83       	std	Y+2, r25	; 0x02
    35d4:	89 81       	ldd	r24, Y+1	; 0x01
    35d6:	9a 81       	ldd	r25, Y+2	; 0x02
    35d8:	02 96       	adiw	r24, 0x02	; 2
    35da:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    35de:	89 81       	ldd	r24, Y+1	; 0x01
    35e0:	9a 81       	ldd	r25, Y+2	; 0x02
    35e2:	fc 01       	movw	r30, r24
    35e4:	82 89       	ldd	r24, Z+18	; 0x12
    35e6:	81 30       	cpi	r24, 0x01	; 1
    35e8:	b1 f5       	brne	.+108    	; 0x3656 <prvProcessExpiredTimer+0xc4>
    35ea:	89 81       	ldd	r24, Y+1	; 0x01
    35ec:	9a 81       	ldd	r25, Y+2	; 0x02
    35ee:	fc 01       	movw	r30, r24
    35f0:	26 85       	ldd	r18, Z+14	; 0x0e
    35f2:	37 85       	ldd	r19, Z+15	; 0x0f
    35f4:	40 89       	ldd	r20, Z+16	; 0x10
    35f6:	51 89       	ldd	r21, Z+17	; 0x11
    35f8:	8c 81       	ldd	r24, Y+4	; 0x04
    35fa:	9d 81       	ldd	r25, Y+5	; 0x05
    35fc:	ae 81       	ldd	r26, Y+6	; 0x06
    35fe:	bf 81       	ldd	r27, Y+7	; 0x07
    3600:	82 0f       	add	r24, r18
    3602:	93 1f       	adc	r25, r19
    3604:	a4 1f       	adc	r26, r20
    3606:	b5 1f       	adc	r27, r21
    3608:	ec 80       	ldd	r14, Y+4	; 0x04
    360a:	fd 80       	ldd	r15, Y+5	; 0x05
    360c:	0e 81       	ldd	r16, Y+6	; 0x06
    360e:	1f 81       	ldd	r17, Y+7	; 0x07
    3610:	28 85       	ldd	r18, Y+8	; 0x08
    3612:	39 85       	ldd	r19, Y+9	; 0x09
    3614:	4a 85       	ldd	r20, Y+10	; 0x0a
    3616:	5b 85       	ldd	r21, Y+11	; 0x0b
    3618:	e9 81       	ldd	r30, Y+1	; 0x01
    361a:	fa 81       	ldd	r31, Y+2	; 0x02
    361c:	67 01       	movw	r12, r14
    361e:	78 01       	movw	r14, r16
    3620:	89 01       	movw	r16, r18
    3622:	9a 01       	movw	r18, r20
    3624:	ac 01       	movw	r20, r24
    3626:	bd 01       	movw	r22, r26
    3628:	cf 01       	movw	r24, r30
    362a:	0e 94 5f 1c 	call	0x38be	; 0x38be <prvInsertTimerInActiveList>
    362e:	88 23       	and	r24, r24
    3630:	91 f0       	breq	.+36     	; 0x3656 <prvProcessExpiredTimer+0xc4>
    3632:	8c 81       	ldd	r24, Y+4	; 0x04
    3634:	9d 81       	ldd	r25, Y+5	; 0x05
    3636:	ae 81       	ldd	r26, Y+6	; 0x06
    3638:	bf 81       	ldd	r27, Y+7	; 0x07
    363a:	e9 81       	ldd	r30, Y+1	; 0x01
    363c:	fa 81       	ldd	r31, Y+2	; 0x02
    363e:	c1 2c       	mov	r12, r1
    3640:	d1 2c       	mov	r13, r1
    3642:	76 01       	movw	r14, r12
    3644:	00 e0       	ldi	r16, 0x00	; 0
    3646:	10 e0       	ldi	r17, 0x00	; 0
    3648:	9c 01       	movw	r18, r24
    364a:	ad 01       	movw	r20, r26
    364c:	60 e0       	ldi	r22, 0x00	; 0
    364e:	cf 01       	movw	r24, r30
    3650:	0e 94 56 1a 	call	0x34ac	; 0x34ac <xTimerGenericCommand>
    3654:	8b 83       	std	Y+3, r24	; 0x03
    3656:	89 81       	ldd	r24, Y+1	; 0x01
    3658:	9a 81       	ldd	r25, Y+2	; 0x02
    365a:	fc 01       	movw	r30, r24
    365c:	25 89       	ldd	r18, Z+21	; 0x15
    365e:	36 89       	ldd	r19, Z+22	; 0x16
    3660:	89 81       	ldd	r24, Y+1	; 0x01
    3662:	9a 81       	ldd	r25, Y+2	; 0x02
    3664:	f9 01       	movw	r30, r18
    3666:	19 95       	eicall
    3668:	00 00       	nop
    366a:	2b 96       	adiw	r28, 0x0b	; 11
    366c:	cd bf       	out	0x3d, r28	; 61
    366e:	de bf       	out	0x3e, r29	; 62
    3670:	df 91       	pop	r29
    3672:	cf 91       	pop	r28
    3674:	1f 91       	pop	r17
    3676:	0f 91       	pop	r16
    3678:	ff 90       	pop	r15
    367a:	ef 90       	pop	r14
    367c:	df 90       	pop	r13
    367e:	cf 90       	pop	r12
    3680:	08 95       	ret

00003682 <prvTimerTask>:
    3682:	cf 93       	push	r28
    3684:	df 93       	push	r29
    3686:	cd b7       	in	r28, 0x3d	; 61
    3688:	de b7       	in	r29, 0x3e	; 62
    368a:	27 97       	sbiw	r28, 0x07	; 7
    368c:	cd bf       	out	0x3d, r28	; 61
    368e:	de bf       	out	0x3e, r29	; 62
    3690:	8e 83       	std	Y+6, r24	; 0x06
    3692:	9f 83       	std	Y+7, r25	; 0x07
    3694:	ce 01       	movw	r24, r28
    3696:	05 96       	adiw	r24, 0x05	; 5
    3698:	0e 94 dc 1b 	call	0x37b8	; 0x37b8 <prvGetNextExpireTime>
    369c:	dc 01       	movw	r26, r24
    369e:	cb 01       	movw	r24, r22
    36a0:	89 83       	std	Y+1, r24	; 0x01
    36a2:	9a 83       	std	Y+2, r25	; 0x02
    36a4:	ab 83       	std	Y+3, r26	; 0x03
    36a6:	bc 83       	std	Y+4, r27	; 0x04
    36a8:	2d 81       	ldd	r18, Y+5	; 0x05
    36aa:	89 81       	ldd	r24, Y+1	; 0x01
    36ac:	9a 81       	ldd	r25, Y+2	; 0x02
    36ae:	ab 81       	ldd	r26, Y+3	; 0x03
    36b0:	bc 81       	ldd	r27, Y+4	; 0x04
    36b2:	42 2f       	mov	r20, r18
    36b4:	bc 01       	movw	r22, r24
    36b6:	cd 01       	movw	r24, r26
    36b8:	0e 94 61 1b 	call	0x36c2	; 0x36c2 <prvProcessTimerOrBlockTask>
    36bc:	0e 94 f8 1c 	call	0x39f0	; 0x39f0 <prvProcessReceivedCommands>
    36c0:	e9 cf       	rjmp	.-46     	; 0x3694 <prvTimerTask+0x12>

000036c2 <prvProcessTimerOrBlockTask>:
    36c2:	ef 92       	push	r14
    36c4:	ff 92       	push	r15
    36c6:	0f 93       	push	r16
    36c8:	1f 93       	push	r17
    36ca:	cf 93       	push	r28
    36cc:	df 93       	push	r29
    36ce:	cd b7       	in	r28, 0x3d	; 61
    36d0:	de b7       	in	r29, 0x3e	; 62
    36d2:	2a 97       	sbiw	r28, 0x0a	; 10
    36d4:	cd bf       	out	0x3d, r28	; 61
    36d6:	de bf       	out	0x3e, r29	; 62
    36d8:	6e 83       	std	Y+6, r22	; 0x06
    36da:	7f 83       	std	Y+7, r23	; 0x07
    36dc:	88 87       	std	Y+8, r24	; 0x08
    36de:	99 87       	std	Y+9, r25	; 0x09
    36e0:	4a 87       	std	Y+10, r20	; 0x0a
    36e2:	0e 94 b5 13 	call	0x276a	; 0x276a <vTaskSuspendAll>
    36e6:	ce 01       	movw	r24, r28
    36e8:	05 96       	adiw	r24, 0x05	; 5
    36ea:	0e 94 1a 1c 	call	0x3834	; 0x3834 <prvSampleTimeNow>
    36ee:	dc 01       	movw	r26, r24
    36f0:	cb 01       	movw	r24, r22
    36f2:	89 83       	std	Y+1, r24	; 0x01
    36f4:	9a 83       	std	Y+2, r25	; 0x02
    36f6:	ab 83       	std	Y+3, r26	; 0x03
    36f8:	bc 83       	std	Y+4, r27	; 0x04
    36fa:	8d 81       	ldd	r24, Y+5	; 0x05
    36fc:	88 23       	and	r24, r24
    36fe:	09 f0       	breq	.+2      	; 0x3702 <prvProcessTimerOrBlockTask+0x40>
    3700:	4e c0       	rjmp	.+156    	; 0x379e <prvProcessTimerOrBlockTask+0xdc>
    3702:	8a 85       	ldd	r24, Y+10	; 0x0a
    3704:	88 23       	and	r24, r24
    3706:	e1 f4       	brne	.+56     	; 0x3740 <prvProcessTimerOrBlockTask+0x7e>
    3708:	2e 81       	ldd	r18, Y+6	; 0x06
    370a:	3f 81       	ldd	r19, Y+7	; 0x07
    370c:	48 85       	ldd	r20, Y+8	; 0x08
    370e:	59 85       	ldd	r21, Y+9	; 0x09
    3710:	89 81       	ldd	r24, Y+1	; 0x01
    3712:	9a 81       	ldd	r25, Y+2	; 0x02
    3714:	ab 81       	ldd	r26, Y+3	; 0x03
    3716:	bc 81       	ldd	r27, Y+4	; 0x04
    3718:	82 17       	cp	r24, r18
    371a:	93 07       	cpc	r25, r19
    371c:	a4 07       	cpc	r26, r20
    371e:	b5 07       	cpc	r27, r21
    3720:	78 f0       	brcs	.+30     	; 0x3740 <prvProcessTimerOrBlockTask+0x7e>
    3722:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    3726:	29 81       	ldd	r18, Y+1	; 0x01
    3728:	3a 81       	ldd	r19, Y+2	; 0x02
    372a:	4b 81       	ldd	r20, Y+3	; 0x03
    372c:	5c 81       	ldd	r21, Y+4	; 0x04
    372e:	8e 81       	ldd	r24, Y+6	; 0x06
    3730:	9f 81       	ldd	r25, Y+7	; 0x07
    3732:	a8 85       	ldd	r26, Y+8	; 0x08
    3734:	b9 85       	ldd	r27, Y+9	; 0x09
    3736:	bc 01       	movw	r22, r24
    3738:	cd 01       	movw	r24, r26
    373a:	0e 94 c9 1a 	call	0x3592	; 0x3592 <prvProcessExpiredTimer>
    373e:	31 c0       	rjmp	.+98     	; 0x37a2 <prvProcessTimerOrBlockTask+0xe0>
    3740:	8a 85       	ldd	r24, Y+10	; 0x0a
    3742:	88 23       	and	r24, r24
    3744:	59 f0       	breq	.+22     	; 0x375c <prvProcessTimerOrBlockTask+0x9a>
    3746:	80 91 0a 2d 	lds	r24, 0x2D0A	; 0x802d0a <pxOverflowTimerList>
    374a:	90 91 0b 2d 	lds	r25, 0x2D0B	; 0x802d0b <pxOverflowTimerList+0x1>
    374e:	fc 01       	movw	r30, r24
    3750:	90 81       	ld	r25, Z
    3752:	81 e0       	ldi	r24, 0x01	; 1
    3754:	99 23       	and	r25, r25
    3756:	09 f0       	breq	.+2      	; 0x375a <prvProcessTimerOrBlockTask+0x98>
    3758:	80 e0       	ldi	r24, 0x00	; 0
    375a:	8a 87       	std	Y+10, r24	; 0x0a
    375c:	2e 81       	ldd	r18, Y+6	; 0x06
    375e:	3f 81       	ldd	r19, Y+7	; 0x07
    3760:	48 85       	ldd	r20, Y+8	; 0x08
    3762:	59 85       	ldd	r21, Y+9	; 0x09
    3764:	89 81       	ldd	r24, Y+1	; 0x01
    3766:	9a 81       	ldd	r25, Y+2	; 0x02
    3768:	ab 81       	ldd	r26, Y+3	; 0x03
    376a:	bc 81       	ldd	r27, Y+4	; 0x04
    376c:	79 01       	movw	r14, r18
    376e:	8a 01       	movw	r16, r20
    3770:	e8 1a       	sub	r14, r24
    3772:	f9 0a       	sbc	r15, r25
    3774:	0a 0b       	sbc	r16, r26
    3776:	1b 0b       	sbc	r17, r27
    3778:	d8 01       	movw	r26, r16
    377a:	c7 01       	movw	r24, r14
    377c:	e0 91 0c 2d 	lds	r30, 0x2D0C	; 0x802d0c <xTimerQueue>
    3780:	f0 91 0d 2d 	lds	r31, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3784:	2a 85       	ldd	r18, Y+10	; 0x0a
    3786:	ac 01       	movw	r20, r24
    3788:	bd 01       	movw	r22, r26
    378a:	cf 01       	movw	r24, r30
    378c:	0e 94 1a 11 	call	0x2234	; 0x2234 <vQueueWaitForMessageRestricted>
    3790:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    3794:	88 23       	and	r24, r24
    3796:	29 f4       	brne	.+10     	; 0x37a2 <prvProcessTimerOrBlockTask+0xe0>
    3798:	0e 94 01 0b 	call	0x1602	; 0x1602 <vPortYield>
    379c:	02 c0       	rjmp	.+4      	; 0x37a2 <prvProcessTimerOrBlockTask+0xe0>
    379e:	0e 94 c2 13 	call	0x2784	; 0x2784 <xTaskResumeAll>
    37a2:	00 00       	nop
    37a4:	2a 96       	adiw	r28, 0x0a	; 10
    37a6:	cd bf       	out	0x3d, r28	; 61
    37a8:	de bf       	out	0x3e, r29	; 62
    37aa:	df 91       	pop	r29
    37ac:	cf 91       	pop	r28
    37ae:	1f 91       	pop	r17
    37b0:	0f 91       	pop	r16
    37b2:	ff 90       	pop	r15
    37b4:	ef 90       	pop	r14
    37b6:	08 95       	ret

000037b8 <prvGetNextExpireTime>:
    37b8:	cf 93       	push	r28
    37ba:	df 93       	push	r29
    37bc:	00 d0       	rcall	.+0      	; 0x37be <prvGetNextExpireTime+0x6>
    37be:	00 d0       	rcall	.+0      	; 0x37c0 <prvGetNextExpireTime+0x8>
    37c0:	cd b7       	in	r28, 0x3d	; 61
    37c2:	de b7       	in	r29, 0x3e	; 62
    37c4:	8d 83       	std	Y+5, r24	; 0x05
    37c6:	9e 83       	std	Y+6, r25	; 0x06
    37c8:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    37cc:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    37d0:	fc 01       	movw	r30, r24
    37d2:	90 81       	ld	r25, Z
    37d4:	81 e0       	ldi	r24, 0x01	; 1
    37d6:	99 23       	and	r25, r25
    37d8:	09 f0       	breq	.+2      	; 0x37dc <prvGetNextExpireTime+0x24>
    37da:	80 e0       	ldi	r24, 0x00	; 0
    37dc:	28 2f       	mov	r18, r24
    37de:	8d 81       	ldd	r24, Y+5	; 0x05
    37e0:	9e 81       	ldd	r25, Y+6	; 0x06
    37e2:	fc 01       	movw	r30, r24
    37e4:	20 83       	st	Z, r18
    37e6:	8d 81       	ldd	r24, Y+5	; 0x05
    37e8:	9e 81       	ldd	r25, Y+6	; 0x06
    37ea:	fc 01       	movw	r30, r24
    37ec:	80 81       	ld	r24, Z
    37ee:	88 23       	and	r24, r24
    37f0:	89 f4       	brne	.+34     	; 0x3814 <prvGetNextExpireTime+0x5c>
    37f2:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    37f6:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    37fa:	fc 01       	movw	r30, r24
    37fc:	87 81       	ldd	r24, Z+7	; 0x07
    37fe:	90 85       	ldd	r25, Z+8	; 0x08
    3800:	fc 01       	movw	r30, r24
    3802:	80 81       	ld	r24, Z
    3804:	91 81       	ldd	r25, Z+1	; 0x01
    3806:	a2 81       	ldd	r26, Z+2	; 0x02
    3808:	b3 81       	ldd	r27, Z+3	; 0x03
    380a:	89 83       	std	Y+1, r24	; 0x01
    380c:	9a 83       	std	Y+2, r25	; 0x02
    380e:	ab 83       	std	Y+3, r26	; 0x03
    3810:	bc 83       	std	Y+4, r27	; 0x04
    3812:	04 c0       	rjmp	.+8      	; 0x381c <prvGetNextExpireTime+0x64>
    3814:	19 82       	std	Y+1, r1	; 0x01
    3816:	1a 82       	std	Y+2, r1	; 0x02
    3818:	1b 82       	std	Y+3, r1	; 0x03
    381a:	1c 82       	std	Y+4, r1	; 0x04
    381c:	89 81       	ldd	r24, Y+1	; 0x01
    381e:	9a 81       	ldd	r25, Y+2	; 0x02
    3820:	ab 81       	ldd	r26, Y+3	; 0x03
    3822:	bc 81       	ldd	r27, Y+4	; 0x04
    3824:	bc 01       	movw	r22, r24
    3826:	cd 01       	movw	r24, r26
    3828:	26 96       	adiw	r28, 0x06	; 6
    382a:	cd bf       	out	0x3d, r28	; 61
    382c:	de bf       	out	0x3e, r29	; 62
    382e:	df 91       	pop	r29
    3830:	cf 91       	pop	r28
    3832:	08 95       	ret

00003834 <prvSampleTimeNow>:
    3834:	cf 93       	push	r28
    3836:	df 93       	push	r29
    3838:	00 d0       	rcall	.+0      	; 0x383a <prvSampleTimeNow+0x6>
    383a:	00 d0       	rcall	.+0      	; 0x383c <prvSampleTimeNow+0x8>
    383c:	cd b7       	in	r28, 0x3d	; 61
    383e:	de b7       	in	r29, 0x3e	; 62
    3840:	8d 83       	std	Y+5, r24	; 0x05
    3842:	9e 83       	std	Y+6, r25	; 0x06
    3844:	0e 94 59 14 	call	0x28b2	; 0x28b2 <xTaskGetTickCount>
    3848:	dc 01       	movw	r26, r24
    384a:	cb 01       	movw	r24, r22
    384c:	89 83       	std	Y+1, r24	; 0x01
    384e:	9a 83       	std	Y+2, r25	; 0x02
    3850:	ab 83       	std	Y+3, r26	; 0x03
    3852:	bc 83       	std	Y+4, r27	; 0x04
    3854:	80 91 10 2d 	lds	r24, 0x2D10	; 0x802d10 <xLastTime.4745>
    3858:	90 91 11 2d 	lds	r25, 0x2D11	; 0x802d11 <xLastTime.4745+0x1>
    385c:	a0 91 12 2d 	lds	r26, 0x2D12	; 0x802d12 <xLastTime.4745+0x2>
    3860:	b0 91 13 2d 	lds	r27, 0x2D13	; 0x802d13 <xLastTime.4745+0x3>
    3864:	29 81       	ldd	r18, Y+1	; 0x01
    3866:	3a 81       	ldd	r19, Y+2	; 0x02
    3868:	4b 81       	ldd	r20, Y+3	; 0x03
    386a:	5c 81       	ldd	r21, Y+4	; 0x04
    386c:	28 17       	cp	r18, r24
    386e:	39 07       	cpc	r19, r25
    3870:	4a 07       	cpc	r20, r26
    3872:	5b 07       	cpc	r21, r27
    3874:	40 f4       	brcc	.+16     	; 0x3886 <prvSampleTimeNow+0x52>
    3876:	0e 94 02 1e 	call	0x3c04	; 0x3c04 <prvSwitchTimerLists>
    387a:	8d 81       	ldd	r24, Y+5	; 0x05
    387c:	9e 81       	ldd	r25, Y+6	; 0x06
    387e:	21 e0       	ldi	r18, 0x01	; 1
    3880:	fc 01       	movw	r30, r24
    3882:	20 83       	st	Z, r18
    3884:	04 c0       	rjmp	.+8      	; 0x388e <prvSampleTimeNow+0x5a>
    3886:	8d 81       	ldd	r24, Y+5	; 0x05
    3888:	9e 81       	ldd	r25, Y+6	; 0x06
    388a:	fc 01       	movw	r30, r24
    388c:	10 82       	st	Z, r1
    388e:	89 81       	ldd	r24, Y+1	; 0x01
    3890:	9a 81       	ldd	r25, Y+2	; 0x02
    3892:	ab 81       	ldd	r26, Y+3	; 0x03
    3894:	bc 81       	ldd	r27, Y+4	; 0x04
    3896:	80 93 10 2d 	sts	0x2D10, r24	; 0x802d10 <xLastTime.4745>
    389a:	90 93 11 2d 	sts	0x2D11, r25	; 0x802d11 <xLastTime.4745+0x1>
    389e:	a0 93 12 2d 	sts	0x2D12, r26	; 0x802d12 <xLastTime.4745+0x2>
    38a2:	b0 93 13 2d 	sts	0x2D13, r27	; 0x802d13 <xLastTime.4745+0x3>
    38a6:	89 81       	ldd	r24, Y+1	; 0x01
    38a8:	9a 81       	ldd	r25, Y+2	; 0x02
    38aa:	ab 81       	ldd	r26, Y+3	; 0x03
    38ac:	bc 81       	ldd	r27, Y+4	; 0x04
    38ae:	bc 01       	movw	r22, r24
    38b0:	cd 01       	movw	r24, r26
    38b2:	26 96       	adiw	r28, 0x06	; 6
    38b4:	cd bf       	out	0x3d, r28	; 61
    38b6:	de bf       	out	0x3e, r29	; 62
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	08 95       	ret

000038be <prvInsertTimerInActiveList>:
    38be:	cf 92       	push	r12
    38c0:	df 92       	push	r13
    38c2:	ef 92       	push	r14
    38c4:	ff 92       	push	r15
    38c6:	0f 93       	push	r16
    38c8:	1f 93       	push	r17
    38ca:	cf 93       	push	r28
    38cc:	df 93       	push	r29
    38ce:	cd b7       	in	r28, 0x3d	; 61
    38d0:	de b7       	in	r29, 0x3e	; 62
    38d2:	2f 97       	sbiw	r28, 0x0f	; 15
    38d4:	cd bf       	out	0x3d, r28	; 61
    38d6:	de bf       	out	0x3e, r29	; 62
    38d8:	8a 83       	std	Y+2, r24	; 0x02
    38da:	9b 83       	std	Y+3, r25	; 0x03
    38dc:	4c 83       	std	Y+4, r20	; 0x04
    38de:	5d 83       	std	Y+5, r21	; 0x05
    38e0:	6e 83       	std	Y+6, r22	; 0x06
    38e2:	7f 83       	std	Y+7, r23	; 0x07
    38e4:	08 87       	std	Y+8, r16	; 0x08
    38e6:	19 87       	std	Y+9, r17	; 0x09
    38e8:	2a 87       	std	Y+10, r18	; 0x0a
    38ea:	3b 87       	std	Y+11, r19	; 0x0b
    38ec:	cc 86       	std	Y+12, r12	; 0x0c
    38ee:	dd 86       	std	Y+13, r13	; 0x0d
    38f0:	ee 86       	std	Y+14, r14	; 0x0e
    38f2:	ff 86       	std	Y+15, r15	; 0x0f
    38f4:	19 82       	std	Y+1, r1	; 0x01
    38f6:	2a 81       	ldd	r18, Y+2	; 0x02
    38f8:	3b 81       	ldd	r19, Y+3	; 0x03
    38fa:	8c 81       	ldd	r24, Y+4	; 0x04
    38fc:	9d 81       	ldd	r25, Y+5	; 0x05
    38fe:	ae 81       	ldd	r26, Y+6	; 0x06
    3900:	bf 81       	ldd	r27, Y+7	; 0x07
    3902:	f9 01       	movw	r30, r18
    3904:	82 83       	std	Z+2, r24	; 0x02
    3906:	93 83       	std	Z+3, r25	; 0x03
    3908:	a4 83       	std	Z+4, r26	; 0x04
    390a:	b5 83       	std	Z+5, r27	; 0x05
    390c:	8a 81       	ldd	r24, Y+2	; 0x02
    390e:	9b 81       	ldd	r25, Y+3	; 0x03
    3910:	2a 81       	ldd	r18, Y+2	; 0x02
    3912:	3b 81       	ldd	r19, Y+3	; 0x03
    3914:	fc 01       	movw	r30, r24
    3916:	22 87       	std	Z+10, r18	; 0x0a
    3918:	33 87       	std	Z+11, r19	; 0x0b
    391a:	2c 81       	ldd	r18, Y+4	; 0x04
    391c:	3d 81       	ldd	r19, Y+5	; 0x05
    391e:	4e 81       	ldd	r20, Y+6	; 0x06
    3920:	5f 81       	ldd	r21, Y+7	; 0x07
    3922:	88 85       	ldd	r24, Y+8	; 0x08
    3924:	99 85       	ldd	r25, Y+9	; 0x09
    3926:	aa 85       	ldd	r26, Y+10	; 0x0a
    3928:	bb 85       	ldd	r27, Y+11	; 0x0b
    392a:	82 17       	cp	r24, r18
    392c:	93 07       	cpc	r25, r19
    392e:	a4 07       	cpc	r26, r20
    3930:	b5 07       	cpc	r27, r21
    3932:	40 f1       	brcs	.+80     	; 0x3984 <prvInsertTimerInActiveList+0xc6>
    3934:	28 85       	ldd	r18, Y+8	; 0x08
    3936:	39 85       	ldd	r19, Y+9	; 0x09
    3938:	4a 85       	ldd	r20, Y+10	; 0x0a
    393a:	5b 85       	ldd	r21, Y+11	; 0x0b
    393c:	8c 85       	ldd	r24, Y+12	; 0x0c
    393e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3940:	ae 85       	ldd	r26, Y+14	; 0x0e
    3942:	bf 85       	ldd	r27, Y+15	; 0x0f
    3944:	28 1b       	sub	r18, r24
    3946:	39 0b       	sbc	r19, r25
    3948:	4a 0b       	sbc	r20, r26
    394a:	5b 0b       	sbc	r21, r27
    394c:	8a 81       	ldd	r24, Y+2	; 0x02
    394e:	9b 81       	ldd	r25, Y+3	; 0x03
    3950:	fc 01       	movw	r30, r24
    3952:	86 85       	ldd	r24, Z+14	; 0x0e
    3954:	97 85       	ldd	r25, Z+15	; 0x0f
    3956:	a0 89       	ldd	r26, Z+16	; 0x10
    3958:	b1 89       	ldd	r27, Z+17	; 0x11
    395a:	28 17       	cp	r18, r24
    395c:	39 07       	cpc	r19, r25
    395e:	4a 07       	cpc	r20, r26
    3960:	5b 07       	cpc	r21, r27
    3962:	18 f0       	brcs	.+6      	; 0x396a <prvInsertTimerInActiveList+0xac>
    3964:	81 e0       	ldi	r24, 0x01	; 1
    3966:	89 83       	std	Y+1, r24	; 0x01
    3968:	36 c0       	rjmp	.+108    	; 0x39d6 <prvInsertTimerInActiveList+0x118>
    396a:	8a 81       	ldd	r24, Y+2	; 0x02
    396c:	9b 81       	ldd	r25, Y+3	; 0x03
    396e:	9c 01       	movw	r18, r24
    3970:	2e 5f       	subi	r18, 0xFE	; 254
    3972:	3f 4f       	sbci	r19, 0xFF	; 255
    3974:	80 91 0a 2d 	lds	r24, 0x2D0A	; 0x802d0a <pxOverflowTimerList>
    3978:	90 91 0b 2d 	lds	r25, 0x2D0B	; 0x802d0b <pxOverflowTimerList+0x1>
    397c:	b9 01       	movw	r22, r18
    397e:	0e 94 02 08 	call	0x1004	; 0x1004 <vListInsert>
    3982:	29 c0       	rjmp	.+82     	; 0x39d6 <prvInsertTimerInActiveList+0x118>
    3984:	28 85       	ldd	r18, Y+8	; 0x08
    3986:	39 85       	ldd	r19, Y+9	; 0x09
    3988:	4a 85       	ldd	r20, Y+10	; 0x0a
    398a:	5b 85       	ldd	r21, Y+11	; 0x0b
    398c:	8c 85       	ldd	r24, Y+12	; 0x0c
    398e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3990:	ae 85       	ldd	r26, Y+14	; 0x0e
    3992:	bf 85       	ldd	r27, Y+15	; 0x0f
    3994:	28 17       	cp	r18, r24
    3996:	39 07       	cpc	r19, r25
    3998:	4a 07       	cpc	r20, r26
    399a:	5b 07       	cpc	r21, r27
    399c:	80 f4       	brcc	.+32     	; 0x39be <prvInsertTimerInActiveList+0x100>
    399e:	2c 81       	ldd	r18, Y+4	; 0x04
    39a0:	3d 81       	ldd	r19, Y+5	; 0x05
    39a2:	4e 81       	ldd	r20, Y+6	; 0x06
    39a4:	5f 81       	ldd	r21, Y+7	; 0x07
    39a6:	8c 85       	ldd	r24, Y+12	; 0x0c
    39a8:	9d 85       	ldd	r25, Y+13	; 0x0d
    39aa:	ae 85       	ldd	r26, Y+14	; 0x0e
    39ac:	bf 85       	ldd	r27, Y+15	; 0x0f
    39ae:	28 17       	cp	r18, r24
    39b0:	39 07       	cpc	r19, r25
    39b2:	4a 07       	cpc	r20, r26
    39b4:	5b 07       	cpc	r21, r27
    39b6:	18 f0       	brcs	.+6      	; 0x39be <prvInsertTimerInActiveList+0x100>
    39b8:	81 e0       	ldi	r24, 0x01	; 1
    39ba:	89 83       	std	Y+1, r24	; 0x01
    39bc:	0c c0       	rjmp	.+24     	; 0x39d6 <prvInsertTimerInActiveList+0x118>
    39be:	8a 81       	ldd	r24, Y+2	; 0x02
    39c0:	9b 81       	ldd	r25, Y+3	; 0x03
    39c2:	9c 01       	movw	r18, r24
    39c4:	2e 5f       	subi	r18, 0xFE	; 254
    39c6:	3f 4f       	sbci	r19, 0xFF	; 255
    39c8:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    39cc:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    39d0:	b9 01       	movw	r22, r18
    39d2:	0e 94 02 08 	call	0x1004	; 0x1004 <vListInsert>
    39d6:	89 81       	ldd	r24, Y+1	; 0x01
    39d8:	2f 96       	adiw	r28, 0x0f	; 15
    39da:	cd bf       	out	0x3d, r28	; 61
    39dc:	de bf       	out	0x3e, r29	; 62
    39de:	df 91       	pop	r29
    39e0:	cf 91       	pop	r28
    39e2:	1f 91       	pop	r17
    39e4:	0f 91       	pop	r16
    39e6:	ff 90       	pop	r15
    39e8:	ef 90       	pop	r14
    39ea:	df 90       	pop	r13
    39ec:	cf 90       	pop	r12
    39ee:	08 95       	ret

000039f0 <prvProcessReceivedCommands>:
    39f0:	cf 92       	push	r12
    39f2:	df 92       	push	r13
    39f4:	ef 92       	push	r14
    39f6:	ff 92       	push	r15
    39f8:	0f 93       	push	r16
    39fa:	1f 93       	push	r17
    39fc:	cf 93       	push	r28
    39fe:	df 93       	push	r29
    3a00:	cd b7       	in	r28, 0x3d	; 61
    3a02:	de b7       	in	r29, 0x3e	; 62
    3a04:	65 97       	sbiw	r28, 0x15	; 21
    3a06:	cd bf       	out	0x3d, r28	; 61
    3a08:	de bf       	out	0x3e, r29	; 62
    3a0a:	e0 c0       	rjmp	.+448    	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3a0c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a0e:	88 23       	and	r24, r24
    3a10:	fc f4       	brge	.+62     	; 0x3a50 <prvProcessReceivedCommands+0x60>
    3a12:	ce 01       	movw	r24, r28
    3a14:	0a 96       	adiw	r24, 0x0a	; 10
    3a16:	01 96       	adiw	r24, 0x01	; 1
    3a18:	89 83       	std	Y+1, r24	; 0x01
    3a1a:	9a 83       	std	Y+2, r25	; 0x02
    3a1c:	89 81       	ldd	r24, Y+1	; 0x01
    3a1e:	9a 81       	ldd	r25, Y+2	; 0x02
    3a20:	fc 01       	movw	r30, r24
    3a22:	20 81       	ld	r18, Z
    3a24:	31 81       	ldd	r19, Z+1	; 0x01
    3a26:	89 81       	ldd	r24, Y+1	; 0x01
    3a28:	9a 81       	ldd	r25, Y+2	; 0x02
    3a2a:	fc 01       	movw	r30, r24
    3a2c:	84 81       	ldd	r24, Z+4	; 0x04
    3a2e:	95 81       	ldd	r25, Z+5	; 0x05
    3a30:	a6 81       	ldd	r26, Z+6	; 0x06
    3a32:	b7 81       	ldd	r27, Z+7	; 0x07
    3a34:	49 81       	ldd	r20, Y+1	; 0x01
    3a36:	5a 81       	ldd	r21, Y+2	; 0x02
    3a38:	fa 01       	movw	r30, r20
    3a3a:	02 80       	ldd	r0, Z+2	; 0x02
    3a3c:	f3 81       	ldd	r31, Z+3	; 0x03
    3a3e:	e0 2d       	mov	r30, r0
    3a40:	ec 8b       	std	Y+20, r30	; 0x14
    3a42:	fd 8b       	std	Y+21, r31	; 0x15
    3a44:	ac 01       	movw	r20, r24
    3a46:	bd 01       	movw	r22, r26
    3a48:	8c 89       	ldd	r24, Y+20	; 0x14
    3a4a:	9d 89       	ldd	r25, Y+21	; 0x15
    3a4c:	f9 01       	movw	r30, r18
    3a4e:	19 95       	eicall
    3a50:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a52:	88 23       	and	r24, r24
    3a54:	0c f4       	brge	.+2      	; 0x3a58 <prvProcessReceivedCommands+0x68>
    3a56:	ba c0       	rjmp	.+372    	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3a58:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a5a:	98 89       	ldd	r25, Y+16	; 0x10
    3a5c:	8b 83       	std	Y+3, r24	; 0x03
    3a5e:	9c 83       	std	Y+4, r25	; 0x04
    3a60:	8b 81       	ldd	r24, Y+3	; 0x03
    3a62:	9c 81       	ldd	r25, Y+4	; 0x04
    3a64:	fc 01       	movw	r30, r24
    3a66:	84 85       	ldd	r24, Z+12	; 0x0c
    3a68:	95 85       	ldd	r25, Z+13	; 0x0d
    3a6a:	89 2b       	or	r24, r25
    3a6c:	29 f0       	breq	.+10     	; 0x3a78 <prvProcessReceivedCommands+0x88>
    3a6e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a70:	9c 81       	ldd	r25, Y+4	; 0x04
    3a72:	02 96       	adiw	r24, 0x02	; 2
    3a74:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    3a78:	ce 01       	movw	r24, r28
    3a7a:	43 96       	adiw	r24, 0x13	; 19
    3a7c:	0e 94 1a 1c 	call	0x3834	; 0x3834 <prvSampleTimeNow>
    3a80:	dc 01       	movw	r26, r24
    3a82:	cb 01       	movw	r24, r22
    3a84:	8d 83       	std	Y+5, r24	; 0x05
    3a86:	9e 83       	std	Y+6, r25	; 0x06
    3a88:	af 83       	std	Y+7, r26	; 0x07
    3a8a:	b8 87       	std	Y+8, r27	; 0x08
    3a8c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a8e:	08 2e       	mov	r0, r24
    3a90:	00 0c       	add	r0, r0
    3a92:	99 0b       	sbc	r25, r25
    3a94:	09 2e       	mov	r0, r25
    3a96:	00 0c       	add	r0, r0
    3a98:	aa 0b       	sbc	r26, r26
    3a9a:	bb 0b       	sbc	r27, r27
    3a9c:	40 e0       	ldi	r20, 0x00	; 0
    3a9e:	50 e0       	ldi	r21, 0x00	; 0
    3aa0:	29 e0       	ldi	r18, 0x09	; 9
    3aa2:	30 e0       	ldi	r19, 0x00	; 0
    3aa4:	84 1b       	sub	r24, r20
    3aa6:	95 0b       	sbc	r25, r21
    3aa8:	28 17       	cp	r18, r24
    3aaa:	39 07       	cpc	r19, r25
    3aac:	08 f4       	brcc	.+2      	; 0x3ab0 <prvProcessReceivedCommands+0xc0>
    3aae:	8d c0       	rjmp	.+282    	; 0x3bca <prvProcessReceivedCommands+0x1da>
    3ab0:	fc 01       	movw	r30, r24
    3ab2:	88 27       	eor	r24, r24
    3ab4:	e2 50       	subi	r30, 0x02	; 2
    3ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    3ab8:	8f 4f       	sbci	r24, 0xFF	; 255
    3aba:	0c 94 e8 31 	jmp	0x63d0	; 0x63d0 <__tablejump2__>
    3abe:	eb 84       	ldd	r14, Y+11	; 0x0b
    3ac0:	fc 84       	ldd	r15, Y+12	; 0x0c
    3ac2:	0d 85       	ldd	r16, Y+13	; 0x0d
    3ac4:	1e 85       	ldd	r17, Y+14	; 0x0e
    3ac6:	2b 85       	ldd	r18, Y+11	; 0x0b
    3ac8:	3c 85       	ldd	r19, Y+12	; 0x0c
    3aca:	4d 85       	ldd	r20, Y+13	; 0x0d
    3acc:	5e 85       	ldd	r21, Y+14	; 0x0e
    3ace:	8b 81       	ldd	r24, Y+3	; 0x03
    3ad0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ad2:	fc 01       	movw	r30, r24
    3ad4:	86 85       	ldd	r24, Z+14	; 0x0e
    3ad6:	97 85       	ldd	r25, Z+15	; 0x0f
    3ad8:	a0 89       	ldd	r26, Z+16	; 0x10
    3ada:	b1 89       	ldd	r27, Z+17	; 0x11
    3adc:	82 0f       	add	r24, r18
    3ade:	93 1f       	adc	r25, r19
    3ae0:	a4 1f       	adc	r26, r20
    3ae2:	b5 1f       	adc	r27, r21
    3ae4:	2d 81       	ldd	r18, Y+5	; 0x05
    3ae6:	3e 81       	ldd	r19, Y+6	; 0x06
    3ae8:	4f 81       	ldd	r20, Y+7	; 0x07
    3aea:	58 85       	ldd	r21, Y+8	; 0x08
    3aec:	eb 81       	ldd	r30, Y+3	; 0x03
    3aee:	fc 81       	ldd	r31, Y+4	; 0x04
    3af0:	67 01       	movw	r12, r14
    3af2:	78 01       	movw	r14, r16
    3af4:	89 01       	movw	r16, r18
    3af6:	9a 01       	movw	r18, r20
    3af8:	ac 01       	movw	r20, r24
    3afa:	bd 01       	movw	r22, r26
    3afc:	cf 01       	movw	r24, r30
    3afe:	0e 94 5f 1c 	call	0x38be	; 0x38be <prvInsertTimerInActiveList>
    3b02:	88 23       	and	r24, r24
    3b04:	09 f4       	brne	.+2      	; 0x3b08 <prvProcessReceivedCommands+0x118>
    3b06:	62 c0       	rjmp	.+196    	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3b08:	8b 81       	ldd	r24, Y+3	; 0x03
    3b0a:	9c 81       	ldd	r25, Y+4	; 0x04
    3b0c:	fc 01       	movw	r30, r24
    3b0e:	25 89       	ldd	r18, Z+21	; 0x15
    3b10:	36 89       	ldd	r19, Z+22	; 0x16
    3b12:	8b 81       	ldd	r24, Y+3	; 0x03
    3b14:	9c 81       	ldd	r25, Y+4	; 0x04
    3b16:	f9 01       	movw	r30, r18
    3b18:	19 95       	eicall
    3b1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b1c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b1e:	fc 01       	movw	r30, r24
    3b20:	82 89       	ldd	r24, Z+18	; 0x12
    3b22:	81 30       	cpi	r24, 0x01	; 1
    3b24:	09 f0       	breq	.+2      	; 0x3b28 <prvProcessReceivedCommands+0x138>
    3b26:	52 c0       	rjmp	.+164    	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3b28:	2b 85       	ldd	r18, Y+11	; 0x0b
    3b2a:	3c 85       	ldd	r19, Y+12	; 0x0c
    3b2c:	4d 85       	ldd	r20, Y+13	; 0x0d
    3b2e:	5e 85       	ldd	r21, Y+14	; 0x0e
    3b30:	8b 81       	ldd	r24, Y+3	; 0x03
    3b32:	9c 81       	ldd	r25, Y+4	; 0x04
    3b34:	fc 01       	movw	r30, r24
    3b36:	86 85       	ldd	r24, Z+14	; 0x0e
    3b38:	97 85       	ldd	r25, Z+15	; 0x0f
    3b3a:	a0 89       	ldd	r26, Z+16	; 0x10
    3b3c:	b1 89       	ldd	r27, Z+17	; 0x11
    3b3e:	82 0f       	add	r24, r18
    3b40:	93 1f       	adc	r25, r19
    3b42:	a4 1f       	adc	r26, r20
    3b44:	b5 1f       	adc	r27, r21
    3b46:	eb 81       	ldd	r30, Y+3	; 0x03
    3b48:	fc 81       	ldd	r31, Y+4	; 0x04
    3b4a:	c1 2c       	mov	r12, r1
    3b4c:	d1 2c       	mov	r13, r1
    3b4e:	76 01       	movw	r14, r12
    3b50:	00 e0       	ldi	r16, 0x00	; 0
    3b52:	10 e0       	ldi	r17, 0x00	; 0
    3b54:	9c 01       	movw	r18, r24
    3b56:	ad 01       	movw	r20, r26
    3b58:	60 e0       	ldi	r22, 0x00	; 0
    3b5a:	cf 01       	movw	r24, r30
    3b5c:	0e 94 56 1a 	call	0x34ac	; 0x34ac <xTimerGenericCommand>
    3b60:	89 87       	std	Y+9, r24	; 0x09
    3b62:	34 c0       	rjmp	.+104    	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3b64:	8b 85       	ldd	r24, Y+11	; 0x0b
    3b66:	9c 85       	ldd	r25, Y+12	; 0x0c
    3b68:	ad 85       	ldd	r26, Y+13	; 0x0d
    3b6a:	be 85       	ldd	r27, Y+14	; 0x0e
    3b6c:	2b 81       	ldd	r18, Y+3	; 0x03
    3b6e:	3c 81       	ldd	r19, Y+4	; 0x04
    3b70:	f9 01       	movw	r30, r18
    3b72:	86 87       	std	Z+14, r24	; 0x0e
    3b74:	97 87       	std	Z+15, r25	; 0x0f
    3b76:	a0 8b       	std	Z+16, r26	; 0x10
    3b78:	b1 8b       	std	Z+17, r27	; 0x11
    3b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    3b7c:	9c 81       	ldd	r25, Y+4	; 0x04
    3b7e:	fc 01       	movw	r30, r24
    3b80:	26 85       	ldd	r18, Z+14	; 0x0e
    3b82:	37 85       	ldd	r19, Z+15	; 0x0f
    3b84:	40 89       	ldd	r20, Z+16	; 0x10
    3b86:	51 89       	ldd	r21, Z+17	; 0x11
    3b88:	8d 81       	ldd	r24, Y+5	; 0x05
    3b8a:	9e 81       	ldd	r25, Y+6	; 0x06
    3b8c:	af 81       	ldd	r26, Y+7	; 0x07
    3b8e:	b8 85       	ldd	r27, Y+8	; 0x08
    3b90:	82 0f       	add	r24, r18
    3b92:	93 1f       	adc	r25, r19
    3b94:	a4 1f       	adc	r26, r20
    3b96:	b5 1f       	adc	r27, r21
    3b98:	ed 80       	ldd	r14, Y+5	; 0x05
    3b9a:	fe 80       	ldd	r15, Y+6	; 0x06
    3b9c:	0f 81       	ldd	r16, Y+7	; 0x07
    3b9e:	18 85       	ldd	r17, Y+8	; 0x08
    3ba0:	2d 81       	ldd	r18, Y+5	; 0x05
    3ba2:	3e 81       	ldd	r19, Y+6	; 0x06
    3ba4:	4f 81       	ldd	r20, Y+7	; 0x07
    3ba6:	58 85       	ldd	r21, Y+8	; 0x08
    3ba8:	eb 81       	ldd	r30, Y+3	; 0x03
    3baa:	fc 81       	ldd	r31, Y+4	; 0x04
    3bac:	67 01       	movw	r12, r14
    3bae:	78 01       	movw	r14, r16
    3bb0:	89 01       	movw	r16, r18
    3bb2:	9a 01       	movw	r18, r20
    3bb4:	ac 01       	movw	r20, r24
    3bb6:	bd 01       	movw	r22, r26
    3bb8:	cf 01       	movw	r24, r30
    3bba:	0e 94 5f 1c 	call	0x38be	; 0x38be <prvInsertTimerInActiveList>
    3bbe:	06 c0       	rjmp	.+12     	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3bc0:	8b 81       	ldd	r24, Y+3	; 0x03
    3bc2:	9c 81       	ldd	r25, Y+4	; 0x04
    3bc4:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <vPortFree>
    3bc8:	01 c0       	rjmp	.+2      	; 0x3bcc <prvProcessReceivedCommands+0x1dc>
    3bca:	00 00       	nop
    3bcc:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    3bd0:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3bd4:	be 01       	movw	r22, r28
    3bd6:	66 5f       	subi	r22, 0xF6	; 246
    3bd8:	7f 4f       	sbci	r23, 0xFF	; 255
    3bda:	20 e0       	ldi	r18, 0x00	; 0
    3bdc:	30 e0       	ldi	r19, 0x00	; 0
    3bde:	a9 01       	movw	r20, r18
    3be0:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <xQueueReceive>
    3be4:	88 23       	and	r24, r24
    3be6:	09 f0       	breq	.+2      	; 0x3bea <prvProcessReceivedCommands+0x1fa>
    3be8:	11 cf       	rjmp	.-478    	; 0x3a0c <prvProcessReceivedCommands+0x1c>
    3bea:	00 00       	nop
    3bec:	65 96       	adiw	r28, 0x15	; 21
    3bee:	cd bf       	out	0x3d, r28	; 61
    3bf0:	de bf       	out	0x3e, r29	; 62
    3bf2:	df 91       	pop	r29
    3bf4:	cf 91       	pop	r28
    3bf6:	1f 91       	pop	r17
    3bf8:	0f 91       	pop	r16
    3bfa:	ff 90       	pop	r15
    3bfc:	ef 90       	pop	r14
    3bfe:	df 90       	pop	r13
    3c00:	cf 90       	pop	r12
    3c02:	08 95       	ret

00003c04 <prvSwitchTimerLists>:
    3c04:	cf 92       	push	r12
    3c06:	df 92       	push	r13
    3c08:	ef 92       	push	r14
    3c0a:	ff 92       	push	r15
    3c0c:	0f 93       	push	r16
    3c0e:	1f 93       	push	r17
    3c10:	cf 93       	push	r28
    3c12:	df 93       	push	r29
    3c14:	cd b7       	in	r28, 0x3d	; 61
    3c16:	de b7       	in	r29, 0x3e	; 62
    3c18:	2d 97       	sbiw	r28, 0x0d	; 13
    3c1a:	cd bf       	out	0x3d, r28	; 61
    3c1c:	de bf       	out	0x3e, r29	; 62
    3c1e:	82 c0       	rjmp	.+260    	; 0x3d24 <prvSwitchTimerLists+0x120>
    3c20:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    3c24:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    3c28:	fc 01       	movw	r30, r24
    3c2a:	87 81       	ldd	r24, Z+7	; 0x07
    3c2c:	90 85       	ldd	r25, Z+8	; 0x08
    3c2e:	fc 01       	movw	r30, r24
    3c30:	80 81       	ld	r24, Z
    3c32:	91 81       	ldd	r25, Z+1	; 0x01
    3c34:	a2 81       	ldd	r26, Z+2	; 0x02
    3c36:	b3 81       	ldd	r27, Z+3	; 0x03
    3c38:	89 83       	std	Y+1, r24	; 0x01
    3c3a:	9a 83       	std	Y+2, r25	; 0x02
    3c3c:	ab 83       	std	Y+3, r26	; 0x03
    3c3e:	bc 83       	std	Y+4, r27	; 0x04
    3c40:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    3c44:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    3c48:	fc 01       	movw	r30, r24
    3c4a:	87 81       	ldd	r24, Z+7	; 0x07
    3c4c:	90 85       	ldd	r25, Z+8	; 0x08
    3c4e:	fc 01       	movw	r30, r24
    3c50:	80 85       	ldd	r24, Z+8	; 0x08
    3c52:	91 85       	ldd	r25, Z+9	; 0x09
    3c54:	8d 83       	std	Y+5, r24	; 0x05
    3c56:	9e 83       	std	Y+6, r25	; 0x06
    3c58:	8d 81       	ldd	r24, Y+5	; 0x05
    3c5a:	9e 81       	ldd	r25, Y+6	; 0x06
    3c5c:	02 96       	adiw	r24, 0x02	; 2
    3c5e:	0e 94 83 08 	call	0x1106	; 0x1106 <uxListRemove>
    3c62:	8d 81       	ldd	r24, Y+5	; 0x05
    3c64:	9e 81       	ldd	r25, Y+6	; 0x06
    3c66:	fc 01       	movw	r30, r24
    3c68:	25 89       	ldd	r18, Z+21	; 0x15
    3c6a:	36 89       	ldd	r19, Z+22	; 0x16
    3c6c:	8d 81       	ldd	r24, Y+5	; 0x05
    3c6e:	9e 81       	ldd	r25, Y+6	; 0x06
    3c70:	f9 01       	movw	r30, r18
    3c72:	19 95       	eicall
    3c74:	8d 81       	ldd	r24, Y+5	; 0x05
    3c76:	9e 81       	ldd	r25, Y+6	; 0x06
    3c78:	fc 01       	movw	r30, r24
    3c7a:	82 89       	ldd	r24, Z+18	; 0x12
    3c7c:	81 30       	cpi	r24, 0x01	; 1
    3c7e:	09 f0       	breq	.+2      	; 0x3c82 <prvSwitchTimerLists+0x7e>
    3c80:	51 c0       	rjmp	.+162    	; 0x3d24 <prvSwitchTimerLists+0x120>
    3c82:	8d 81       	ldd	r24, Y+5	; 0x05
    3c84:	9e 81       	ldd	r25, Y+6	; 0x06
    3c86:	fc 01       	movw	r30, r24
    3c88:	26 85       	ldd	r18, Z+14	; 0x0e
    3c8a:	37 85       	ldd	r19, Z+15	; 0x0f
    3c8c:	40 89       	ldd	r20, Z+16	; 0x10
    3c8e:	51 89       	ldd	r21, Z+17	; 0x11
    3c90:	89 81       	ldd	r24, Y+1	; 0x01
    3c92:	9a 81       	ldd	r25, Y+2	; 0x02
    3c94:	ab 81       	ldd	r26, Y+3	; 0x03
    3c96:	bc 81       	ldd	r27, Y+4	; 0x04
    3c98:	82 0f       	add	r24, r18
    3c9a:	93 1f       	adc	r25, r19
    3c9c:	a4 1f       	adc	r26, r20
    3c9e:	b5 1f       	adc	r27, r21
    3ca0:	8f 83       	std	Y+7, r24	; 0x07
    3ca2:	98 87       	std	Y+8, r25	; 0x08
    3ca4:	a9 87       	std	Y+9, r26	; 0x09
    3ca6:	ba 87       	std	Y+10, r27	; 0x0a
    3ca8:	2f 81       	ldd	r18, Y+7	; 0x07
    3caa:	38 85       	ldd	r19, Y+8	; 0x08
    3cac:	49 85       	ldd	r20, Y+9	; 0x09
    3cae:	5a 85       	ldd	r21, Y+10	; 0x0a
    3cb0:	89 81       	ldd	r24, Y+1	; 0x01
    3cb2:	9a 81       	ldd	r25, Y+2	; 0x02
    3cb4:	ab 81       	ldd	r26, Y+3	; 0x03
    3cb6:	bc 81       	ldd	r27, Y+4	; 0x04
    3cb8:	82 17       	cp	r24, r18
    3cba:	93 07       	cpc	r25, r19
    3cbc:	a4 07       	cpc	r26, r20
    3cbe:	b5 07       	cpc	r27, r21
    3cc0:	f8 f4       	brcc	.+62     	; 0x3d00 <prvSwitchTimerLists+0xfc>
    3cc2:	2d 81       	ldd	r18, Y+5	; 0x05
    3cc4:	3e 81       	ldd	r19, Y+6	; 0x06
    3cc6:	8f 81       	ldd	r24, Y+7	; 0x07
    3cc8:	98 85       	ldd	r25, Y+8	; 0x08
    3cca:	a9 85       	ldd	r26, Y+9	; 0x09
    3ccc:	ba 85       	ldd	r27, Y+10	; 0x0a
    3cce:	f9 01       	movw	r30, r18
    3cd0:	82 83       	std	Z+2, r24	; 0x02
    3cd2:	93 83       	std	Z+3, r25	; 0x03
    3cd4:	a4 83       	std	Z+4, r26	; 0x04
    3cd6:	b5 83       	std	Z+5, r27	; 0x05
    3cd8:	8d 81       	ldd	r24, Y+5	; 0x05
    3cda:	9e 81       	ldd	r25, Y+6	; 0x06
    3cdc:	2d 81       	ldd	r18, Y+5	; 0x05
    3cde:	3e 81       	ldd	r19, Y+6	; 0x06
    3ce0:	fc 01       	movw	r30, r24
    3ce2:	22 87       	std	Z+10, r18	; 0x0a
    3ce4:	33 87       	std	Z+11, r19	; 0x0b
    3ce6:	8d 81       	ldd	r24, Y+5	; 0x05
    3ce8:	9e 81       	ldd	r25, Y+6	; 0x06
    3cea:	9c 01       	movw	r18, r24
    3cec:	2e 5f       	subi	r18, 0xFE	; 254
    3cee:	3f 4f       	sbci	r19, 0xFF	; 255
    3cf0:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    3cf4:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    3cf8:	b9 01       	movw	r22, r18
    3cfa:	0e 94 02 08 	call	0x1004	; 0x1004 <vListInsert>
    3cfe:	12 c0       	rjmp	.+36     	; 0x3d24 <prvSwitchTimerLists+0x120>
    3d00:	89 81       	ldd	r24, Y+1	; 0x01
    3d02:	9a 81       	ldd	r25, Y+2	; 0x02
    3d04:	ab 81       	ldd	r26, Y+3	; 0x03
    3d06:	bc 81       	ldd	r27, Y+4	; 0x04
    3d08:	ed 81       	ldd	r30, Y+5	; 0x05
    3d0a:	fe 81       	ldd	r31, Y+6	; 0x06
    3d0c:	c1 2c       	mov	r12, r1
    3d0e:	d1 2c       	mov	r13, r1
    3d10:	76 01       	movw	r14, r12
    3d12:	00 e0       	ldi	r16, 0x00	; 0
    3d14:	10 e0       	ldi	r17, 0x00	; 0
    3d16:	9c 01       	movw	r18, r24
    3d18:	ad 01       	movw	r20, r26
    3d1a:	60 e0       	ldi	r22, 0x00	; 0
    3d1c:	cf 01       	movw	r24, r30
    3d1e:	0e 94 56 1a 	call	0x34ac	; 0x34ac <xTimerGenericCommand>
    3d22:	8b 87       	std	Y+11, r24	; 0x0b
    3d24:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    3d28:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    3d2c:	fc 01       	movw	r30, r24
    3d2e:	80 81       	ld	r24, Z
    3d30:	88 23       	and	r24, r24
    3d32:	09 f0       	breq	.+2      	; 0x3d36 <prvSwitchTimerLists+0x132>
    3d34:	75 cf       	rjmp	.-278    	; 0x3c20 <prvSwitchTimerLists+0x1c>
    3d36:	80 91 08 2d 	lds	r24, 0x2D08	; 0x802d08 <pxCurrentTimerList>
    3d3a:	90 91 09 2d 	lds	r25, 0x2D09	; 0x802d09 <pxCurrentTimerList+0x1>
    3d3e:	8c 87       	std	Y+12, r24	; 0x0c
    3d40:	9d 87       	std	Y+13, r25	; 0x0d
    3d42:	80 91 0a 2d 	lds	r24, 0x2D0A	; 0x802d0a <pxOverflowTimerList>
    3d46:	90 91 0b 2d 	lds	r25, 0x2D0B	; 0x802d0b <pxOverflowTimerList+0x1>
    3d4a:	80 93 08 2d 	sts	0x2D08, r24	; 0x802d08 <pxCurrentTimerList>
    3d4e:	90 93 09 2d 	sts	0x2D09, r25	; 0x802d09 <pxCurrentTimerList+0x1>
    3d52:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d54:	9d 85       	ldd	r25, Y+13	; 0x0d
    3d56:	80 93 0a 2d 	sts	0x2D0A, r24	; 0x802d0a <pxOverflowTimerList>
    3d5a:	90 93 0b 2d 	sts	0x2D0B, r25	; 0x802d0b <pxOverflowTimerList+0x1>
    3d5e:	00 00       	nop
    3d60:	2d 96       	adiw	r28, 0x0d	; 13
    3d62:	cd bf       	out	0x3d, r28	; 61
    3d64:	de bf       	out	0x3e, r29	; 62
    3d66:	df 91       	pop	r29
    3d68:	cf 91       	pop	r28
    3d6a:	1f 91       	pop	r17
    3d6c:	0f 91       	pop	r16
    3d6e:	ff 90       	pop	r15
    3d70:	ef 90       	pop	r14
    3d72:	df 90       	pop	r13
    3d74:	cf 90       	pop	r12
    3d76:	08 95       	ret

00003d78 <prvCheckForValidListAndQueue>:
    3d78:	cf 93       	push	r28
    3d7a:	df 93       	push	r29
    3d7c:	cd b7       	in	r28, 0x3d	; 61
    3d7e:	de b7       	in	r29, 0x3e	; 62
    3d80:	f0 91 a2 00 	lds	r31, 0x00A2	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    3d84:	ff 93       	push	r31
    3d86:	f8 7f       	andi	r31, 0xF8	; 248
    3d88:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    3d8c:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    3d90:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3d94:	89 2b       	or	r24, r25
    3d96:	e9 f4       	brne	.+58     	; 0x3dd2 <prvCheckForValidListAndQueue+0x5a>
    3d98:	82 ef       	ldi	r24, 0xF2	; 242
    3d9a:	9c e2       	ldi	r25, 0x2C	; 44
    3d9c:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    3da0:	8d ef       	ldi	r24, 0xFD	; 253
    3da2:	9c e2       	ldi	r25, 0x2C	; 44
    3da4:	0e 94 6a 07 	call	0xed4	; 0xed4 <vListInitialise>
    3da8:	82 ef       	ldi	r24, 0xF2	; 242
    3daa:	9c e2       	ldi	r25, 0x2C	; 44
    3dac:	80 93 08 2d 	sts	0x2D08, r24	; 0x802d08 <pxCurrentTimerList>
    3db0:	90 93 09 2d 	sts	0x2D09, r25	; 0x802d09 <pxCurrentTimerList+0x1>
    3db4:	8d ef       	ldi	r24, 0xFD	; 253
    3db6:	9c e2       	ldi	r25, 0x2C	; 44
    3db8:	80 93 0a 2d 	sts	0x2D0A, r24	; 0x802d0a <pxOverflowTimerList>
    3dbc:	90 93 0b 2d 	sts	0x2D0B, r25	; 0x802d0b <pxOverflowTimerList+0x1>
    3dc0:	40 e0       	ldi	r20, 0x00	; 0
    3dc2:	69 e0       	ldi	r22, 0x09	; 9
    3dc4:	85 e0       	ldi	r24, 0x05	; 5
    3dc6:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <xQueueGenericCreate>
    3dca:	80 93 0c 2d 	sts	0x2D0C, r24	; 0x802d0c <xTimerQueue>
    3dce:	90 93 0d 2d 	sts	0x2D0D, r25	; 0x802d0d <xTimerQueue+0x1>
    3dd2:	ff 91       	pop	r31
    3dd4:	f0 93 a2 00 	sts	0x00A2, r31	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
    3dd8:	00 00       	nop
    3dda:	df 91       	pop	r29
    3ddc:	cf 91       	pop	r28
    3dde:	08 95       	ret

00003de0 <xTimerPendFunctionCallFromISR>:
    3de0:	0f 93       	push	r16
    3de2:	1f 93       	push	r17
    3de4:	cf 93       	push	r28
    3de6:	df 93       	push	r29
    3de8:	cd b7       	in	r28, 0x3d	; 61
    3dea:	de b7       	in	r29, 0x3e	; 62
    3dec:	64 97       	sbiw	r28, 0x14	; 20
    3dee:	cd bf       	out	0x3d, r28	; 61
    3df0:	de bf       	out	0x3e, r29	; 62
    3df2:	8b 87       	std	Y+11, r24	; 0x0b
    3df4:	9c 87       	std	Y+12, r25	; 0x0c
    3df6:	6d 87       	std	Y+13, r22	; 0x0d
    3df8:	7e 87       	std	Y+14, r23	; 0x0e
    3dfa:	2f 87       	std	Y+15, r18	; 0x0f
    3dfc:	38 8b       	std	Y+16, r19	; 0x10
    3dfe:	49 8b       	std	Y+17, r20	; 0x11
    3e00:	5a 8b       	std	Y+18, r21	; 0x12
    3e02:	0b 8b       	std	Y+19, r16	; 0x13
    3e04:	1c 8b       	std	Y+20, r17	; 0x14
    3e06:	8e ef       	ldi	r24, 0xFE	; 254
    3e08:	8a 83       	std	Y+2, r24	; 0x02
    3e0a:	8b 85       	ldd	r24, Y+11	; 0x0b
    3e0c:	9c 85       	ldd	r25, Y+12	; 0x0c
    3e0e:	8b 83       	std	Y+3, r24	; 0x03
    3e10:	9c 83       	std	Y+4, r25	; 0x04
    3e12:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e14:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e16:	8d 83       	std	Y+5, r24	; 0x05
    3e18:	9e 83       	std	Y+6, r25	; 0x06
    3e1a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e1c:	98 89       	ldd	r25, Y+16	; 0x10
    3e1e:	a9 89       	ldd	r26, Y+17	; 0x11
    3e20:	ba 89       	ldd	r27, Y+18	; 0x12
    3e22:	8f 83       	std	Y+7, r24	; 0x07
    3e24:	98 87       	std	Y+8, r25	; 0x08
    3e26:	a9 87       	std	Y+9, r26	; 0x09
    3e28:	ba 87       	std	Y+10, r27	; 0x0a
    3e2a:	80 91 0c 2d 	lds	r24, 0x2D0C	; 0x802d0c <xTimerQueue>
    3e2e:	90 91 0d 2d 	lds	r25, 0x2D0D	; 0x802d0d <xTimerQueue+0x1>
    3e32:	4b 89       	ldd	r20, Y+19	; 0x13
    3e34:	5c 89       	ldd	r21, Y+20	; 0x14
    3e36:	be 01       	movw	r22, r28
    3e38:	6e 5f       	subi	r22, 0xFE	; 254
    3e3a:	7f 4f       	sbci	r23, 0xFF	; 255
    3e3c:	20 e0       	ldi	r18, 0x00	; 0
    3e3e:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <xQueueGenericSendFromISR>
    3e42:	89 83       	std	Y+1, r24	; 0x01
    3e44:	89 81       	ldd	r24, Y+1	; 0x01
    3e46:	64 96       	adiw	r28, 0x14	; 20
    3e48:	cd bf       	out	0x3d, r28	; 61
    3e4a:	de bf       	out	0x3e, r29	; 62
    3e4c:	df 91       	pop	r29
    3e4e:	cf 91       	pop	r28
    3e50:	1f 91       	pop	r17
    3e52:	0f 91       	pop	r16
    3e54:	08 95       	ret

00003e56 <vInitClock>:
    3e56:	cf 93       	push	r28
    3e58:	df 93       	push	r29
    3e5a:	cd b7       	in	r28, 0x3d	; 61
    3e5c:	de b7       	in	r29, 0x3e	; 62
    3e5e:	80 e5       	ldi	r24, 0x50	; 80
    3e60:	90 e0       	ldi	r25, 0x00	; 0
    3e62:	20 e5       	ldi	r18, 0x50	; 80
    3e64:	30 e0       	ldi	r19, 0x00	; 0
    3e66:	f9 01       	movw	r30, r18
    3e68:	20 81       	ld	r18, Z
    3e6a:	21 60       	ori	r18, 0x01	; 1
    3e6c:	fc 01       	movw	r30, r24
    3e6e:	20 83       	st	Z, r18
    3e70:	80 e5       	ldi	r24, 0x50	; 80
    3e72:	90 e0       	ldi	r25, 0x00	; 0
    3e74:	fc 01       	movw	r30, r24
    3e76:	81 81       	ldd	r24, Z+1	; 0x01
    3e78:	88 2f       	mov	r24, r24
    3e7a:	90 e0       	ldi	r25, 0x00	; 0
    3e7c:	81 70       	andi	r24, 0x01	; 1
    3e7e:	99 27       	eor	r25, r25
    3e80:	89 2b       	or	r24, r25
    3e82:	b1 f3       	breq	.-20     	; 0x3e70 <vInitClock+0x1a>
    3e84:	80 e0       	ldi	r24, 0x00	; 0
    3e86:	0e 94 1b 03 	call	0x636	; 0x636 <CLKSYS_Main_ClockSource_Select>
    3e8a:	8e e1       	ldi	r24, 0x1E	; 30
    3e8c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <CLKSYS_Disable>
    3e90:	60 e0       	ldi	r22, 0x00	; 0
    3e92:	80 e0       	ldi	r24, 0x00	; 0
    3e94:	0e 94 04 03 	call	0x608	; 0x608 <CLKSYS_Prescalers_Config>
    3e98:	43 e0       	ldi	r20, 0x03	; 3
    3e9a:	60 e0       	ldi	r22, 0x00	; 0
    3e9c:	80 e4       	ldi	r24, 0x40	; 64
    3e9e:	0e 94 af 02 	call	0x55e	; 0x55e <CLKSYS_XOSC_Config>
    3ea2:	80 e5       	ldi	r24, 0x50	; 80
    3ea4:	90 e0       	ldi	r25, 0x00	; 0
    3ea6:	20 e5       	ldi	r18, 0x50	; 80
    3ea8:	30 e0       	ldi	r19, 0x00	; 0
    3eaa:	f9 01       	movw	r30, r18
    3eac:	20 81       	ld	r18, Z
    3eae:	28 60       	ori	r18, 0x08	; 8
    3eb0:	fc 01       	movw	r30, r24
    3eb2:	20 83       	st	Z, r18
    3eb4:	80 e5       	ldi	r24, 0x50	; 80
    3eb6:	90 e0       	ldi	r25, 0x00	; 0
    3eb8:	fc 01       	movw	r30, r24
    3eba:	81 81       	ldd	r24, Z+1	; 0x01
    3ebc:	88 2f       	mov	r24, r24
    3ebe:	90 e0       	ldi	r25, 0x00	; 0
    3ec0:	88 70       	andi	r24, 0x08	; 8
    3ec2:	99 27       	eor	r25, r25
    3ec4:	89 2b       	or	r24, r25
    3ec6:	b1 f3       	breq	.-20     	; 0x3eb4 <vInitClock+0x5e>
    3ec8:	64 e0       	ldi	r22, 0x04	; 4
    3eca:	80 ec       	ldi	r24, 0xC0	; 192
    3ecc:	0e 94 cc 02 	call	0x598	; 0x598 <CLKSYS_PLL_Config>
    3ed0:	80 e5       	ldi	r24, 0x50	; 80
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	20 e5       	ldi	r18, 0x50	; 80
    3ed6:	30 e0       	ldi	r19, 0x00	; 0
    3ed8:	f9 01       	movw	r30, r18
    3eda:	20 81       	ld	r18, Z
    3edc:	20 61       	ori	r18, 0x10	; 16
    3ede:	fc 01       	movw	r30, r24
    3ee0:	20 83       	st	Z, r18
    3ee2:	60 e0       	ldi	r22, 0x00	; 0
    3ee4:	80 e0       	ldi	r24, 0x00	; 0
    3ee6:	0e 94 04 03 	call	0x608	; 0x608 <CLKSYS_Prescalers_Config>
    3eea:	80 e5       	ldi	r24, 0x50	; 80
    3eec:	90 e0       	ldi	r25, 0x00	; 0
    3eee:	fc 01       	movw	r30, r24
    3ef0:	81 81       	ldd	r24, Z+1	; 0x01
    3ef2:	88 2f       	mov	r24, r24
    3ef4:	90 e0       	ldi	r25, 0x00	; 0
    3ef6:	80 71       	andi	r24, 0x10	; 16
    3ef8:	99 27       	eor	r25, r25
    3efa:	89 2b       	or	r24, r25
    3efc:	b1 f3       	breq	.-20     	; 0x3eea <vInitClock+0x94>
    3efe:	84 e0       	ldi	r24, 0x04	; 4
    3f00:	0e 94 1b 03 	call	0x636	; 0x636 <CLKSYS_Main_ClockSource_Select>
    3f04:	87 e0       	ldi	r24, 0x07	; 7
    3f06:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <CLKSYS_Disable>
    3f0a:	00 00       	nop
    3f0c:	df 91       	pop	r29
    3f0e:	cf 91       	pop	r28
    3f10:	08 95       	ret

00003f12 <main>:
void drawPointer(int line, int pos);
void changeValue(int valueType, int timeType, int8_t value);
bool checkIfAlarm();

int main(void)
{
    3f12:	ef 92       	push	r14
    3f14:	ff 92       	push	r15
    3f16:	0f 93       	push	r16
    3f18:	cf 93       	push	r28
    3f1a:	df 93       	push	r29
    3f1c:	1f 92       	push	r1
    3f1e:	cd b7       	in	r28, 0x3d	; 61
    3f20:	de b7       	in	r29, 0x3e	; 62
    resetReason_t reason = getResetReason();
    3f22:	0e 94 57 2f 	call	0x5eae	; 0x5eae <getResetReason>
    3f26:	89 83       	std	Y+1, r24	; 0x01

	vInitClock();
    3f28:	0e 94 2b 1f 	call	0x3e56	; 0x3e56 <vInitClock>
	vInitDisplay();
    3f2c:	0e 94 a1 27 	call	0x4f42	; 0x4f42 <vInitDisplay>
	
	egAlarmClock = xEventGroupCreate();
    3f30:	0e 94 db 03 	call	0x7b6	; 0x7b6 <xEventGroupCreate>
    3f34:	80 93 4a 2d 	sts	0x2D4A, r24	; 0x802d4a <egAlarmClock>
    3f38:	90 93 4b 2d 	sts	0x2D4B, r25	; 0x802d4b <egAlarmClock+0x1>
	
	xTaskCreate(vLedBlink, (const char *) "ledBlink", configMINIMAL_STACK_SIZE, NULL, 1, NULL);
    3f3c:	e1 2c       	mov	r14, r1
    3f3e:	f1 2c       	mov	r15, r1
    3f40:	01 e0       	ldi	r16, 0x01	; 1
    3f42:	20 e0       	ldi	r18, 0x00	; 0
    3f44:	30 e0       	ldi	r19, 0x00	; 0
    3f46:	48 ec       	ldi	r20, 0xC8	; 200
    3f48:	50 e0       	ldi	r21, 0x00	; 0
    3f4a:	6d e0       	ldi	r22, 0x0D	; 13
    3f4c:	70 e2       	ldi	r23, 0x20	; 32
    3f4e:	89 ee       	ldi	r24, 0xE9	; 233
    3f50:	92 e2       	ldi	r25, 0x22	; 34
    3f52:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
	xTaskCreate(vTime, (const char *) "timeTask", configMINIMAL_STACK_SIZE+10, NULL, 3, NULL);
    3f56:	e1 2c       	mov	r14, r1
    3f58:	f1 2c       	mov	r15, r1
    3f5a:	03 e0       	ldi	r16, 0x03	; 3
    3f5c:	20 e0       	ldi	r18, 0x00	; 0
    3f5e:	30 e0       	ldi	r19, 0x00	; 0
    3f60:	42 ed       	ldi	r20, 0xD2	; 210
    3f62:	50 e0       	ldi	r21, 0x00	; 0
    3f64:	66 e1       	ldi	r22, 0x16	; 22
    3f66:	70 e2       	ldi	r23, 0x20	; 32
    3f68:	81 e5       	ldi	r24, 0x51	; 81
    3f6a:	92 e2       	ldi	r25, 0x22	; 34
    3f6c:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
	xTaskCreate(vInterfaceTask, (const char *) "uiTask", configMINIMAL_STACK_SIZE + 10, NULL, 2, NULL);
    3f70:	e1 2c       	mov	r14, r1
    3f72:	f1 2c       	mov	r15, r1
    3f74:	02 e0       	ldi	r16, 0x02	; 2
    3f76:	20 e0       	ldi	r18, 0x00	; 0
    3f78:	30 e0       	ldi	r19, 0x00	; 0
    3f7a:	42 ed       	ldi	r20, 0xD2	; 210
    3f7c:	50 e0       	ldi	r21, 0x00	; 0
    3f7e:	6f e1       	ldi	r22, 0x1F	; 31
    3f80:	70 e2       	ldi	r23, 0x20	; 32
    3f82:	8d ed       	ldi	r24, 0xDD	; 221
    3f84:	9f e1       	ldi	r25, 0x1F	; 31
    3f86:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
	xTaskCreate(vButtonTask, (const char *) "buttonTask", configMINIMAL_STACK_SIZE+10, NULL, 3, NULL);
    3f8a:	e1 2c       	mov	r14, r1
    3f8c:	f1 2c       	mov	r15, r1
    3f8e:	03 e0       	ldi	r16, 0x03	; 3
    3f90:	20 e0       	ldi	r18, 0x00	; 0
    3f92:	30 e0       	ldi	r19, 0x00	; 0
    3f94:	42 ed       	ldi	r20, 0xD2	; 210
    3f96:	50 e0       	ldi	r21, 0x00	; 0
    3f98:	66 e2       	ldi	r22, 0x26	; 38
    3f9a:	70 e2       	ldi	r23, 0x20	; 32
    3f9c:	89 ea       	ldi	r24, 0xA9	; 169
    3f9e:	91 e2       	ldi	r25, 0x21	; 33
    3fa0:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
	
	vTaskStartScheduler();
    3fa4:	0e 94 69 13 	call	0x26d2	; 0x26d2 <vTaskStartScheduler>
	return 0;
    3fa8:	80 e0       	ldi	r24, 0x00	; 0
    3faa:	90 e0       	ldi	r25, 0x00	; 0
}
    3fac:	0f 90       	pop	r0
    3fae:	df 91       	pop	r29
    3fb0:	cf 91       	pop	r28
    3fb2:	0f 91       	pop	r16
    3fb4:	ff 90       	pop	r15
    3fb6:	ef 90       	pop	r14
    3fb8:	08 95       	ret

00003fba <vInterfaceTask>:

void vInterfaceTask(void *pvParameters) {
    3fba:	cf 93       	push	r28
    3fbc:	df 93       	push	r29
    3fbe:	00 d0       	rcall	.+0      	; 0x3fc0 <vInterfaceTask+0x6>
    3fc0:	1f 92       	push	r1
    3fc2:	cd b7       	in	r28, 0x3d	; 61
    3fc4:	de b7       	in	r29, 0x3e	; 62
    3fc6:	8b 83       	std	Y+3, r24	; 0x03
    3fc8:	9c 83       	std	Y+4, r25	; 0x04
	(void) pvParameters;
	static menuMode_t menuMode = MENU_MAINSCREEN;
	static uint8_t selector = POS_HOURS;
	static uint8_t alarmState = 0;
	uint16_t buttonstate = 0x0000;
    3fca:	19 82       	std	Y+1, r1	; 0x01
    3fcc:	1a 82       	std	Y+2, r1	; 0x02
	PORTE.DIRSET = 0x08;
    3fce:	80 e8       	ldi	r24, 0x80	; 128
    3fd0:	96 e0       	ldi	r25, 0x06	; 6
    3fd2:	28 e0       	ldi	r18, 0x08	; 8
    3fd4:	fc 01       	movw	r30, r24
    3fd6:	21 83       	std	Z+1, r18	; 0x01
	while(egAlarmClock == NULL) {
    3fd8:	06 c0       	rjmp	.+12     	; 0x3fe6 <vInterfaceTask+0x2c>
		vTaskDelay(1);
    3fda:	61 e0       	ldi	r22, 0x01	; 1
    3fdc:	70 e0       	ldi	r23, 0x00	; 0
    3fde:	80 e0       	ldi	r24, 0x00	; 0
    3fe0:	90 e0       	ldi	r25, 0x00	; 0
    3fe2:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
	static menuMode_t menuMode = MENU_MAINSCREEN;
	static uint8_t selector = POS_HOURS;
	static uint8_t alarmState = 0;
	uint16_t buttonstate = 0x0000;
	PORTE.DIRSET = 0x08;
	while(egAlarmClock == NULL) {
    3fe6:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    3fea:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    3fee:	89 2b       	or	r24, r25
    3ff0:	a1 f3       	breq	.-24     	; 0x3fda <vInterfaceTask+0x20>
		vTaskDelay(1);
	}
	for(;;) {
		PORTE.OUTCLR = 0x08;
    3ff2:	80 e8       	ldi	r24, 0x80	; 128
    3ff4:	96 e0       	ldi	r25, 0x06	; 6
    3ff6:	28 e0       	ldi	r18, 0x08	; 8
    3ff8:	fc 01       	movw	r30, r24
    3ffa:	26 83       	std	Z+6, r18	; 0x06
		buttonstate = xEventGroupGetBits(egAlarmClock);
    3ffc:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    4000:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4004:	40 e0       	ldi	r20, 0x00	; 0
    4006:	50 e0       	ldi	r21, 0x00	; 0
    4008:	ba 01       	movw	r22, r20
    400a:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
    400e:	dc 01       	movw	r26, r24
    4010:	cb 01       	movw	r24, r22
    4012:	89 83       	std	Y+1, r24	; 0x01
    4014:	9a 83       	std	Y+2, r25	; 0x02
		vDisplayClear();
    4016:	0e 94 ec 29 	call	0x53d8	; 0x53d8 <vDisplayClear>
		vDisplayWriteStringAtPos(0,0, "Alarm-Clock 1.0");
    401a:	81 e3       	ldi	r24, 0x31	; 49
    401c:	90 e2       	ldi	r25, 0x20	; 32
    401e:	89 2f       	mov	r24, r25
    4020:	8f 93       	push	r24
    4022:	81 e3       	ldi	r24, 0x31	; 49
    4024:	90 e2       	ldi	r25, 0x20	; 32
    4026:	8f 93       	push	r24
    4028:	1f 92       	push	r1
    402a:	1f 92       	push	r1
    402c:	1f 92       	push	r1
    402e:	1f 92       	push	r1
    4030:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4034:	0f 90       	pop	r0
    4036:	0f 90       	pop	r0
    4038:	0f 90       	pop	r0
    403a:	0f 90       	pop	r0
    403c:	0f 90       	pop	r0
    403e:	0f 90       	pop	r0
		switch(menuMode) {
    4040:	80 91 1a 2d 	lds	r24, 0x2D1A	; 0x802d1a <menuMode.4866>
    4044:	88 2f       	mov	r24, r24
    4046:	90 e0       	ldi	r25, 0x00	; 0
    4048:	81 30       	cpi	r24, 0x01	; 1
    404a:	91 05       	cpc	r25, r1
    404c:	09 f4       	brne	.+2      	; 0x4050 <__stack+0x51>
    404e:	a1 c0       	rjmp	.+322    	; 0x4192 <__stack+0x193>
    4050:	82 30       	cpi	r24, 0x02	; 2
    4052:	91 05       	cpc	r25, r1
    4054:	09 f4       	brne	.+2      	; 0x4058 <__stack+0x59>
    4056:	f7 c0       	rjmp	.+494    	; 0x4246 <__stack+0x247>
    4058:	89 2b       	or	r24, r25
    405a:	09 f0       	breq	.+2      	; 0x405e <__stack+0x5f>
    405c:	52 c1       	rjmp	.+676    	; 0x4302 <__stack+0x303>
			case MENU_MAINSCREEN:
			drawTime();
    405e:	0e 94 34 23 	call	0x4668	; 0x4668 <drawTime>
			drawAlarm();
    4062:	0e 94 08 24 	call	0x4810	; 0x4810 <drawAlarm>
			if(alarmState == 0) {
    4066:	80 91 1b 2d 	lds	r24, 0x2D1B	; 0x802d1b <alarmState.4868>
    406a:	88 23       	and	r24, r24
    406c:	a9 f4       	brne	.+42     	; 0x4098 <__stack+0x99>
				vDisplayWriteStringAtPos(3,0,"ON - ___ - ALR - CLK");
    406e:	81 e4       	ldi	r24, 0x41	; 65
    4070:	90 e2       	ldi	r25, 0x20	; 32
    4072:	89 2f       	mov	r24, r25
    4074:	8f 93       	push	r24
    4076:	81 e4       	ldi	r24, 0x41	; 65
    4078:	90 e2       	ldi	r25, 0x20	; 32
    407a:	8f 93       	push	r24
    407c:	1f 92       	push	r1
    407e:	1f 92       	push	r1
    4080:	1f 92       	push	r1
    4082:	83 e0       	ldi	r24, 0x03	; 3
    4084:	8f 93       	push	r24
    4086:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    408a:	0f 90       	pop	r0
    408c:	0f 90       	pop	r0
    408e:	0f 90       	pop	r0
    4090:	0f 90       	pop	r0
    4092:	0f 90       	pop	r0
    4094:	0f 90       	pop	r0
    4096:	14 c0       	rjmp	.+40     	; 0x40c0 <__stack+0xc1>
				} else {
				vDisplayWriteStringAtPos(3,0,"__ - OFF - ALR - CLK");
    4098:	86 e5       	ldi	r24, 0x56	; 86
    409a:	90 e2       	ldi	r25, 0x20	; 32
    409c:	89 2f       	mov	r24, r25
    409e:	8f 93       	push	r24
    40a0:	86 e5       	ldi	r24, 0x56	; 86
    40a2:	90 e2       	ldi	r25, 0x20	; 32
    40a4:	8f 93       	push	r24
    40a6:	1f 92       	push	r1
    40a8:	1f 92       	push	r1
    40aa:	1f 92       	push	r1
    40ac:	83 e0       	ldi	r24, 0x03	; 3
    40ae:	8f 93       	push	r24
    40b0:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    40b4:	0f 90       	pop	r0
    40b6:	0f 90       	pop	r0
    40b8:	0f 90       	pop	r0
    40ba:	0f 90       	pop	r0
    40bc:	0f 90       	pop	r0
    40be:	0f 90       	pop	r0
			}
			if(buttonstate & ALARMCLOCK_BUTTON4_LONG) {
    40c0:	89 81       	ldd	r24, Y+1	; 0x01
    40c2:	9a 81       	ldd	r25, Y+2	; 0x02
    40c4:	88 27       	eor	r24, r24
    40c6:	92 70       	andi	r25, 0x02	; 2
    40c8:	89 2b       	or	r24, r25
    40ca:	79 f0       	breq	.+30     	; 0x40ea <__stack+0xeb>
				menuMode = MENU_SETCLOCK;
    40cc:	81 e0       	ldi	r24, 0x01	; 1
    40ce:	80 93 1a 2d 	sts	0x2D1A, r24	; 0x802d1a <menuMode.4866>
				xEventGroupClearBits(egAlarmClock, ALARMCLOCK_ALARM_ON);
    40d2:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    40d6:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    40da:	42 e0       	ldi	r20, 0x02	; 2
    40dc:	50 e0       	ldi	r21, 0x00	; 0
    40de:	60 e0       	ldi	r22, 0x00	; 0
    40e0:	70 e0       	ldi	r23, 0x00	; 0
    40e2:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
				selector = 0;
    40e6:	10 92 1c 2d 	sts	0x2D1C, r1	; 0x802d1c <selector.4867>
			}
			if(buttonstate & ALARMCLOCK_BUTTON3_LONG) {
    40ea:	89 81       	ldd	r24, Y+1	; 0x01
    40ec:	9a 81       	ldd	r25, Y+2	; 0x02
    40ee:	80 78       	andi	r24, 0x80	; 128
    40f0:	99 27       	eor	r25, r25
    40f2:	89 2b       	or	r24, r25
    40f4:	79 f0       	breq	.+30     	; 0x4114 <__stack+0x115>
				menuMode = MENU_SETALARM;
    40f6:	82 e0       	ldi	r24, 0x02	; 2
    40f8:	80 93 1a 2d 	sts	0x2D1A, r24	; 0x802d1a <menuMode.4866>
				xEventGroupClearBits(egAlarmClock, ALARMCLOCK_ALARM_ON);
    40fc:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    4100:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4104:	42 e0       	ldi	r20, 0x02	; 2
    4106:	50 e0       	ldi	r21, 0x00	; 0
    4108:	60 e0       	ldi	r22, 0x00	; 0
    410a:	70 e0       	ldi	r23, 0x00	; 0
    410c:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
				selector = 0;
    4110:	10 92 1c 2d 	sts	0x2D1C, r1	; 0x802d1c <selector.4867>
			}
			if(buttonstate & ALARMCLOCK_BUTTON1_LONG) {
    4114:	89 81       	ldd	r24, Y+1	; 0x01
    4116:	9a 81       	ldd	r25, Y+2	; 0x02
    4118:	88 70       	andi	r24, 0x08	; 8
    411a:	99 27       	eor	r25, r25
    411c:	89 2b       	or	r24, r25
    411e:	69 f0       	breq	.+26     	; 0x413a <__stack+0x13b>
				alarmState = 1;
    4120:	81 e0       	ldi	r24, 0x01	; 1
    4122:	80 93 1b 2d 	sts	0x2D1B, r24	; 0x802d1b <alarmState.4868>
				xEventGroupClearBits(egAlarmClock, ALARMCLOCK_ALARM_ON);
    4126:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    412a:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    412e:	42 e0       	ldi	r20, 0x02	; 2
    4130:	50 e0       	ldi	r21, 0x00	; 0
    4132:	60 e0       	ldi	r22, 0x00	; 0
    4134:	70 e0       	ldi	r23, 0x00	; 0
    4136:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
			}
			if(buttonstate & ALARMCLOCK_BUTTON2_LONG) {
    413a:	89 81       	ldd	r24, Y+1	; 0x01
    413c:	9a 81       	ldd	r25, Y+2	; 0x02
    413e:	80 72       	andi	r24, 0x20	; 32
    4140:	99 27       	eor	r25, r25
    4142:	89 2b       	or	r24, r25
    4144:	61 f0       	breq	.+24     	; 0x415e <__stack+0x15f>
				alarmState = 0;
    4146:	10 92 1b 2d 	sts	0x2D1B, r1	; 0x802d1b <alarmState.4868>
				xEventGroupClearBits(egAlarmClock, ALARMCLOCK_ALARM_ON);
    414a:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    414e:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4152:	42 e0       	ldi	r20, 0x02	; 2
    4154:	50 e0       	ldi	r21, 0x00	; 0
    4156:	60 e0       	ldi	r22, 0x00	; 0
    4158:	70 e0       	ldi	r23, 0x00	; 0
    415a:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
			}
			if(alarmState == 1) {
    415e:	80 91 1b 2d 	lds	r24, 0x2D1B	; 0x802d1b <alarmState.4868>
    4162:	81 30       	cpi	r24, 0x01	; 1
    4164:	09 f0       	breq	.+2      	; 0x4168 <__stack+0x169>
    4166:	c8 c0       	rjmp	.+400    	; 0x42f8 <__stack+0x2f9>
				vDisplayWriteStringAtPos(2,0,"ON>");
    4168:	8b e6       	ldi	r24, 0x6B	; 107
    416a:	90 e2       	ldi	r25, 0x20	; 32
    416c:	89 2f       	mov	r24, r25
    416e:	8f 93       	push	r24
    4170:	8b e6       	ldi	r24, 0x6B	; 107
    4172:	90 e2       	ldi	r25, 0x20	; 32
    4174:	8f 93       	push	r24
    4176:	1f 92       	push	r1
    4178:	1f 92       	push	r1
    417a:	1f 92       	push	r1
    417c:	82 e0       	ldi	r24, 0x02	; 2
    417e:	8f 93       	push	r24
    4180:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4184:	0f 90       	pop	r0
    4186:	0f 90       	pop	r0
    4188:	0f 90       	pop	r0
    418a:	0f 90       	pop	r0
    418c:	0f 90       	pop	r0
    418e:	0f 90       	pop	r0
			}
			break;
    4190:	b3 c0       	rjmp	.+358    	; 0x42f8 <__stack+0x2f9>
			case MENU_SETCLOCK:
			drawTime();
    4192:	0e 94 34 23 	call	0x4668	; 0x4668 <drawTime>
			drawPointer(2,selector);
    4196:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    419a:	88 2f       	mov	r24, r24
    419c:	90 e0       	ldi	r25, 0x00	; 0
    419e:	bc 01       	movw	r22, r24
    41a0:	82 e0       	ldi	r24, 0x02	; 2
    41a2:	90 e0       	ldi	r25, 0x00	; 0
    41a4:	0e 94 dc 24 	call	0x49b8	; 0x49b8 <drawPointer>
			vDisplayWriteStringAtPos(3,0,"UP - DWN - NEX - BAK");
    41a8:	8f e6       	ldi	r24, 0x6F	; 111
    41aa:	90 e2       	ldi	r25, 0x20	; 32
    41ac:	89 2f       	mov	r24, r25
    41ae:	8f 93       	push	r24
    41b0:	8f e6       	ldi	r24, 0x6F	; 111
    41b2:	90 e2       	ldi	r25, 0x20	; 32
    41b4:	8f 93       	push	r24
    41b6:	1f 92       	push	r1
    41b8:	1f 92       	push	r1
    41ba:	1f 92       	push	r1
    41bc:	83 e0       	ldi	r24, 0x03	; 3
    41be:	8f 93       	push	r24
    41c0:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    41c4:	0f 90       	pop	r0
    41c6:	0f 90       	pop	r0
    41c8:	0f 90       	pop	r0
    41ca:	0f 90       	pop	r0
    41cc:	0f 90       	pop	r0
    41ce:	0f 90       	pop	r0
			if(buttonstate & ALARMCLOCK_BUTTON1_SHORT) {
    41d0:	89 81       	ldd	r24, Y+1	; 0x01
    41d2:	9a 81       	ldd	r25, Y+2	; 0x02
    41d4:	84 70       	andi	r24, 0x04	; 4
    41d6:	99 27       	eor	r25, r25
    41d8:	89 2b       	or	r24, r25
    41da:	51 f0       	breq	.+20     	; 0x41f0 <__stack+0x1f1>
				changeValue(VALUETYPE_CLOCK, selector, 1);
    41dc:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    41e0:	88 2f       	mov	r24, r24
    41e2:	90 e0       	ldi	r25, 0x00	; 0
    41e4:	41 e0       	ldi	r20, 0x01	; 1
    41e6:	bc 01       	movw	r22, r24
    41e8:	80 e0       	ldi	r24, 0x00	; 0
    41ea:	90 e0       	ldi	r25, 0x00	; 0
    41ec:	0e 94 30 25 	call	0x4a60	; 0x4a60 <changeValue>
			}
			if(buttonstate & ALARMCLOCK_BUTTON2_SHORT) {
    41f0:	89 81       	ldd	r24, Y+1	; 0x01
    41f2:	9a 81       	ldd	r25, Y+2	; 0x02
    41f4:	80 71       	andi	r24, 0x10	; 16
    41f6:	99 27       	eor	r25, r25
    41f8:	89 2b       	or	r24, r25
    41fa:	51 f0       	breq	.+20     	; 0x4210 <__stack+0x211>
				changeValue(VALUETYPE_CLOCK, selector, -1);
    41fc:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    4200:	88 2f       	mov	r24, r24
    4202:	90 e0       	ldi	r25, 0x00	; 0
    4204:	4f ef       	ldi	r20, 0xFF	; 255
    4206:	bc 01       	movw	r22, r24
    4208:	80 e0       	ldi	r24, 0x00	; 0
    420a:	90 e0       	ldi	r25, 0x00	; 0
    420c:	0e 94 30 25 	call	0x4a60	; 0x4a60 <changeValue>
			}
			if(buttonstate & ALARMCLOCK_BUTTON3_SHORT) {
    4210:	89 81       	ldd	r24, Y+1	; 0x01
    4212:	9a 81       	ldd	r25, Y+2	; 0x02
    4214:	80 74       	andi	r24, 0x40	; 64
    4216:	99 27       	eor	r25, r25
    4218:	89 2b       	or	r24, r25
    421a:	59 f0       	breq	.+22     	; 0x4232 <__stack+0x233>
				selector++;
    421c:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    4220:	8f 5f       	subi	r24, 0xFF	; 255
    4222:	80 93 1c 2d 	sts	0x2D1C, r24	; 0x802d1c <selector.4867>
				if(selector > POS_SECONDS) {
    4226:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    422a:	83 30       	cpi	r24, 0x03	; 3
    422c:	10 f0       	brcs	.+4      	; 0x4232 <__stack+0x233>
					selector = POS_HOURS;
    422e:	10 92 1c 2d 	sts	0x2D1C, r1	; 0x802d1c <selector.4867>
				}
			}
			if(buttonstate & ALARMCLOCK_BUTTON4_LONG) {
    4232:	89 81       	ldd	r24, Y+1	; 0x01
    4234:	9a 81       	ldd	r25, Y+2	; 0x02
    4236:	88 27       	eor	r24, r24
    4238:	92 70       	andi	r25, 0x02	; 2
    423a:	89 2b       	or	r24, r25
    423c:	09 f4       	brne	.+2      	; 0x4240 <__stack+0x241>
    423e:	5e c0       	rjmp	.+188    	; 0x42fc <__stack+0x2fd>
				menuMode = MENU_MAINSCREEN;
    4240:	10 92 1a 2d 	sts	0x2D1A, r1	; 0x802d1a <menuMode.4866>
			}
			break;
    4244:	5b c0       	rjmp	.+182    	; 0x42fc <__stack+0x2fd>
			case MENU_SETALARM:
			drawAlarm();
    4246:	0e 94 08 24 	call	0x4810	; 0x4810 <drawAlarm>
			drawPointer(1,selector);
    424a:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    424e:	88 2f       	mov	r24, r24
    4250:	90 e0       	ldi	r25, 0x00	; 0
    4252:	bc 01       	movw	r22, r24
    4254:	81 e0       	ldi	r24, 0x01	; 1
    4256:	90 e0       	ldi	r25, 0x00	; 0
    4258:	0e 94 dc 24 	call	0x49b8	; 0x49b8 <drawPointer>
			vDisplayWriteStringAtPos(3,0,"UP - DWN - NEX - BAK");
    425c:	8f e6       	ldi	r24, 0x6F	; 111
    425e:	90 e2       	ldi	r25, 0x20	; 32
    4260:	89 2f       	mov	r24, r25
    4262:	8f 93       	push	r24
    4264:	8f e6       	ldi	r24, 0x6F	; 111
    4266:	90 e2       	ldi	r25, 0x20	; 32
    4268:	8f 93       	push	r24
    426a:	1f 92       	push	r1
    426c:	1f 92       	push	r1
    426e:	1f 92       	push	r1
    4270:	83 e0       	ldi	r24, 0x03	; 3
    4272:	8f 93       	push	r24
    4274:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4278:	0f 90       	pop	r0
    427a:	0f 90       	pop	r0
    427c:	0f 90       	pop	r0
    427e:	0f 90       	pop	r0
    4280:	0f 90       	pop	r0
    4282:	0f 90       	pop	r0
			if(buttonstate & ALARMCLOCK_BUTTON1_SHORT) {
    4284:	89 81       	ldd	r24, Y+1	; 0x01
    4286:	9a 81       	ldd	r25, Y+2	; 0x02
    4288:	84 70       	andi	r24, 0x04	; 4
    428a:	99 27       	eor	r25, r25
    428c:	89 2b       	or	r24, r25
    428e:	51 f0       	breq	.+20     	; 0x42a4 <__stack+0x2a5>
				changeValue(VALUETYPE_ALARM, selector, 1);
    4290:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    4294:	88 2f       	mov	r24, r24
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	41 e0       	ldi	r20, 0x01	; 1
    429a:	bc 01       	movw	r22, r24
    429c:	81 e0       	ldi	r24, 0x01	; 1
    429e:	90 e0       	ldi	r25, 0x00	; 0
    42a0:	0e 94 30 25 	call	0x4a60	; 0x4a60 <changeValue>
			}
			if(buttonstate & ALARMCLOCK_BUTTON2_SHORT) {
    42a4:	89 81       	ldd	r24, Y+1	; 0x01
    42a6:	9a 81       	ldd	r25, Y+2	; 0x02
    42a8:	80 71       	andi	r24, 0x10	; 16
    42aa:	99 27       	eor	r25, r25
    42ac:	89 2b       	or	r24, r25
    42ae:	51 f0       	breq	.+20     	; 0x42c4 <__stack+0x2c5>
				changeValue(VALUETYPE_ALARM, selector, -1);
    42b0:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    42b4:	88 2f       	mov	r24, r24
    42b6:	90 e0       	ldi	r25, 0x00	; 0
    42b8:	4f ef       	ldi	r20, 0xFF	; 255
    42ba:	bc 01       	movw	r22, r24
    42bc:	81 e0       	ldi	r24, 0x01	; 1
    42be:	90 e0       	ldi	r25, 0x00	; 0
    42c0:	0e 94 30 25 	call	0x4a60	; 0x4a60 <changeValue>
			}
			if(buttonstate & ALARMCLOCK_BUTTON3_SHORT) {
    42c4:	89 81       	ldd	r24, Y+1	; 0x01
    42c6:	9a 81       	ldd	r25, Y+2	; 0x02
    42c8:	80 74       	andi	r24, 0x40	; 64
    42ca:	99 27       	eor	r25, r25
    42cc:	89 2b       	or	r24, r25
    42ce:	59 f0       	breq	.+22     	; 0x42e6 <__stack+0x2e7>
				selector++;
    42d0:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    42d4:	8f 5f       	subi	r24, 0xFF	; 255
    42d6:	80 93 1c 2d 	sts	0x2D1C, r24	; 0x802d1c <selector.4867>
				if(selector > POS_SECONDS) {
    42da:	80 91 1c 2d 	lds	r24, 0x2D1C	; 0x802d1c <selector.4867>
    42de:	83 30       	cpi	r24, 0x03	; 3
    42e0:	10 f0       	brcs	.+4      	; 0x42e6 <__stack+0x2e7>
					selector = POS_HOURS;
    42e2:	10 92 1c 2d 	sts	0x2D1C, r1	; 0x802d1c <selector.4867>
				}
			}
			if(buttonstate & ALARMCLOCK_BUTTON4_LONG) {
    42e6:	89 81       	ldd	r24, Y+1	; 0x01
    42e8:	9a 81       	ldd	r25, Y+2	; 0x02
    42ea:	88 27       	eor	r24, r24
    42ec:	92 70       	andi	r25, 0x02	; 2
    42ee:	89 2b       	or	r24, r25
    42f0:	39 f0       	breq	.+14     	; 0x4300 <__stack+0x301>
				menuMode = MENU_MAINSCREEN;
    42f2:	10 92 1a 2d 	sts	0x2D1A, r1	; 0x802d1a <menuMode.4866>
			}
			break;
    42f6:	04 c0       	rjmp	.+8      	; 0x4300 <__stack+0x301>
				xEventGroupClearBits(egAlarmClock, ALARMCLOCK_ALARM_ON);
			}
			if(alarmState == 1) {
				vDisplayWriteStringAtPos(2,0,"ON>");
			}
			break;
    42f8:	00 00       	nop
    42fa:	03 c0       	rjmp	.+6      	; 0x4302 <__stack+0x303>
				}
			}
			if(buttonstate & ALARMCLOCK_BUTTON4_LONG) {
				menuMode = MENU_MAINSCREEN;
			}
			break;
    42fc:	00 00       	nop
    42fe:	01 c0       	rjmp	.+2      	; 0x4302 <__stack+0x303>
				}
			}
			if(buttonstate & ALARMCLOCK_BUTTON4_LONG) {
				menuMode = MENU_MAINSCREEN;
			}
			break;
    4300:	00 00       	nop
		}
		if((checkIfAlarm()) && (alarmState == 1)) {
    4302:	0e 94 f0 25 	call	0x4be0	; 0x4be0 <checkIfAlarm>
    4306:	88 23       	and	r24, r24
    4308:	71 f0       	breq	.+28     	; 0x4326 <__stack+0x327>
    430a:	80 91 1b 2d 	lds	r24, 0x2D1B	; 0x802d1b <alarmState.4868>
    430e:	81 30       	cpi	r24, 0x01	; 1
    4310:	51 f4       	brne	.+20     	; 0x4326 <__stack+0x327>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_ALARM_ON);
    4312:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    4316:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    431a:	42 e0       	ldi	r20, 0x02	; 2
    431c:	50 e0       	ldi	r21, 0x00	; 0
    431e:	60 e0       	ldi	r22, 0x00	; 0
    4320:	70 e0       	ldi	r23, 0x00	; 0
    4322:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		xEventGroupClearBits(egAlarmClock, ALARMCLOCK_BUTTON_ALL);
    4326:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    432a:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    432e:	4c ef       	ldi	r20, 0xFC	; 252
    4330:	53 e0       	ldi	r21, 0x03	; 3
    4332:	60 e0       	ldi	r22, 0x00	; 0
    4334:	70 e0       	ldi	r23, 0x00	; 0
    4336:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
		PORTE.OUTSET = 0x08;
    433a:	80 e8       	ldi	r24, 0x80	; 128
    433c:	96 e0       	ldi	r25, 0x06	; 6
    433e:	28 e0       	ldi	r18, 0x08	; 8
    4340:	fc 01       	movw	r30, r24
    4342:	25 83       	std	Z+5, r18	; 0x05
		vTaskDelay(200 / portTICK_RATE_MS);
    4344:	68 ec       	ldi	r22, 0xC8	; 200
    4346:	70 e0       	ldi	r23, 0x00	; 0
    4348:	80 e0       	ldi	r24, 0x00	; 0
    434a:	90 e0       	ldi	r25, 0x00	; 0
    434c:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
	}
    4350:	50 ce       	rjmp	.-864    	; 0x3ff2 <vInterfaceTask+0x38>

00004352 <vButtonTask>:
}

void vButtonTask(void * pvParameters) {
    4352:	cf 93       	push	r28
    4354:	df 93       	push	r29
    4356:	1f 92       	push	r1
    4358:	1f 92       	push	r1
    435a:	cd b7       	in	r28, 0x3d	; 61
    435c:	de b7       	in	r29, 0x3e	; 62
    435e:	89 83       	std	Y+1, r24	; 0x01
    4360:	9a 83       	std	Y+2, r25	; 0x02
	initButtons();
    4362:	0e 94 4c 01 	call	0x298	; 0x298 <initButtons>
	for(;;) {
		updateButtons();
    4366:	0e 94 68 01 	call	0x2d0	; 0x2d0 <updateButtons>
		if(getButtonPress(BUTTON1) == SHORT_PRESSED) {
    436a:	80 e0       	ldi	r24, 0x00	; 0
    436c:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    4370:	81 30       	cpi	r24, 0x01	; 1
    4372:	51 f4       	brne	.+20     	; 0x4388 <vButtonTask+0x36>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON1_SHORT);
    4374:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    4378:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    437c:	44 e0       	ldi	r20, 0x04	; 4
    437e:	50 e0       	ldi	r21, 0x00	; 0
    4380:	60 e0       	ldi	r22, 0x00	; 0
    4382:	70 e0       	ldi	r23, 0x00	; 0
    4384:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON2) == SHORT_PRESSED) {
    4388:	81 e0       	ldi	r24, 0x01	; 1
    438a:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    438e:	81 30       	cpi	r24, 0x01	; 1
    4390:	51 f4       	brne	.+20     	; 0x43a6 <vButtonTask+0x54>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON2_SHORT);
    4392:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    4396:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    439a:	40 e1       	ldi	r20, 0x10	; 16
    439c:	50 e0       	ldi	r21, 0x00	; 0
    439e:	60 e0       	ldi	r22, 0x00	; 0
    43a0:	70 e0       	ldi	r23, 0x00	; 0
    43a2:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON3) == SHORT_PRESSED) {
    43a6:	82 e0       	ldi	r24, 0x02	; 2
    43a8:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    43ac:	81 30       	cpi	r24, 0x01	; 1
    43ae:	51 f4       	brne	.+20     	; 0x43c4 <vButtonTask+0x72>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON3_SHORT);
    43b0:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    43b4:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    43b8:	40 e4       	ldi	r20, 0x40	; 64
    43ba:	50 e0       	ldi	r21, 0x00	; 0
    43bc:	60 e0       	ldi	r22, 0x00	; 0
    43be:	70 e0       	ldi	r23, 0x00	; 0
    43c0:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON4) == SHORT_PRESSED) {
    43c4:	83 e0       	ldi	r24, 0x03	; 3
    43c6:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    43ca:	81 30       	cpi	r24, 0x01	; 1
    43cc:	51 f4       	brne	.+20     	; 0x43e2 <vButtonTask+0x90>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON4_SHORT);
    43ce:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    43d2:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    43d6:	40 e0       	ldi	r20, 0x00	; 0
    43d8:	51 e0       	ldi	r21, 0x01	; 1
    43da:	60 e0       	ldi	r22, 0x00	; 0
    43dc:	70 e0       	ldi	r23, 0x00	; 0
    43de:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON1) == LONG_PRESSED) {
    43e2:	80 e0       	ldi	r24, 0x00	; 0
    43e4:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    43e8:	88 23       	and	r24, r24
    43ea:	51 f4       	brne	.+20     	; 0x4400 <vButtonTask+0xae>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON1_LONG);
    43ec:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    43f0:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    43f4:	48 e0       	ldi	r20, 0x08	; 8
    43f6:	50 e0       	ldi	r21, 0x00	; 0
    43f8:	60 e0       	ldi	r22, 0x00	; 0
    43fa:	70 e0       	ldi	r23, 0x00	; 0
    43fc:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON2) == LONG_PRESSED) {
    4400:	81 e0       	ldi	r24, 0x01	; 1
    4402:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    4406:	88 23       	and	r24, r24
    4408:	51 f4       	brne	.+20     	; 0x441e <vButtonTask+0xcc>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON2_LONG);
    440a:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    440e:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4412:	40 e2       	ldi	r20, 0x20	; 32
    4414:	50 e0       	ldi	r21, 0x00	; 0
    4416:	60 e0       	ldi	r22, 0x00	; 0
    4418:	70 e0       	ldi	r23, 0x00	; 0
    441a:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON3) == LONG_PRESSED) {
    441e:	82 e0       	ldi	r24, 0x02	; 2
    4420:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    4424:	88 23       	and	r24, r24
    4426:	51 f4       	brne	.+20     	; 0x443c <vButtonTask+0xea>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON3_LONG);
    4428:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    442c:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4430:	40 e8       	ldi	r20, 0x80	; 128
    4432:	50 e0       	ldi	r21, 0x00	; 0
    4434:	60 e0       	ldi	r22, 0x00	; 0
    4436:	70 e0       	ldi	r23, 0x00	; 0
    4438:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		if(getButtonPress(BUTTON4) == LONG_PRESSED) {
    443c:	83 e0       	ldi	r24, 0x03	; 3
    443e:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <getButtonPress>
    4442:	88 23       	and	r24, r24
    4444:	51 f4       	brne	.+20     	; 0x445a <vButtonTask+0x108>
			xEventGroupSetBits(egAlarmClock, ALARMCLOCK_BUTTON4_LONG);
    4446:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    444a:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    444e:	40 e0       	ldi	r20, 0x00	; 0
    4450:	52 e0       	ldi	r21, 0x02	; 2
    4452:	60 e0       	ldi	r22, 0x00	; 0
    4454:	70 e0       	ldi	r23, 0x00	; 0
    4456:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
		}
		vTaskDelay(10/portTICK_RATE_MS);
    445a:	6a e0       	ldi	r22, 0x0A	; 10
    445c:	70 e0       	ldi	r23, 0x00	; 0
    445e:	80 e0       	ldi	r24, 0x00	; 0
    4460:	90 e0       	ldi	r25, 0x00	; 0
    4462:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
	}
    4466:	7f cf       	rjmp	.-258    	; 0x4366 <vButtonTask+0x14>

00004468 <vInitTimer>:
}

void vInitTimer() {
    4468:	cf 93       	push	r28
    446a:	df 93       	push	r29
    446c:	cd b7       	in	r28, 0x3d	; 61
    446e:	de b7       	in	r29, 0x3e	; 62
	TCD0.CTRLA = TC_CLKSEL_DIV1024_gc ;
    4470:	80 e0       	ldi	r24, 0x00	; 0
    4472:	99 e0       	ldi	r25, 0x09	; 9
    4474:	27 e0       	ldi	r18, 0x07	; 7
    4476:	fc 01       	movw	r30, r24
    4478:	20 83       	st	Z, r18
	TCD0.CTRLB = 0x00;
    447a:	80 e0       	ldi	r24, 0x00	; 0
    447c:	99 e0       	ldi	r25, 0x09	; 9
    447e:	fc 01       	movw	r30, r24
    4480:	11 82       	std	Z+1, r1	; 0x01
	TCD0.INTCTRLA = 0x03;
    4482:	80 e0       	ldi	r24, 0x00	; 0
    4484:	99 e0       	ldi	r25, 0x09	; 9
    4486:	23 e0       	ldi	r18, 0x03	; 3
    4488:	fc 01       	movw	r30, r24
    448a:	26 83       	std	Z+6, r18	; 0x06
	TCD0.PER = 31250-1;
    448c:	80 e0       	ldi	r24, 0x00	; 0
    448e:	99 e0       	ldi	r25, 0x09	; 9
    4490:	21 e1       	ldi	r18, 0x11	; 17
    4492:	3a e7       	ldi	r19, 0x7A	; 122
    4494:	fc 01       	movw	r30, r24
    4496:	26 a3       	std	Z+38, r18	; 0x26
    4498:	37 a3       	std	Z+39, r19	; 0x27
}
    449a:	00 00       	nop
    449c:	df 91       	pop	r29
    449e:	cf 91       	pop	r28
    44a0:	08 95       	ret

000044a2 <vTime>:

void vTime(void *pvParameters) {
    44a2:	cf 92       	push	r12
    44a4:	df 92       	push	r13
    44a6:	ef 92       	push	r14
    44a8:	ff 92       	push	r15
    44aa:	0f 93       	push	r16
    44ac:	cf 93       	push	r28
    44ae:	df 93       	push	r29
    44b0:	1f 92       	push	r1
    44b2:	1f 92       	push	r1
    44b4:	cd b7       	in	r28, 0x3d	; 61
    44b6:	de b7       	in	r29, 0x3e	; 62
    44b8:	89 83       	std	Y+1, r24	; 0x01
    44ba:	9a 83       	std	Y+2, r25	; 0x02
	vInitTimer();
    44bc:	0e 94 34 22 	call	0x4468	; 0x4468 <vInitTimer>
	for(;;) {
		globalTimeStorage.hours = 18;
    44c0:	82 e1       	ldi	r24, 0x12	; 18
    44c2:	80 93 16 2d 	sts	0x2D16, r24	; 0x802d16 <globalTimeStorage+0x2>
		globalTimeStorage.minutes = 15;
    44c6:	8f e0       	ldi	r24, 0x0F	; 15
    44c8:	80 93 15 2d 	sts	0x2D15, r24	; 0x802d15 <globalTimeStorage+0x1>
		globalTimeStorage.seconds = 0;
    44cc:	10 92 14 2d 	sts	0x2D14, r1	; 0x802d14 <globalTimeStorage>
		globalAlarmStorage.hours = 18;
    44d0:	82 e1       	ldi	r24, 0x12	; 18
    44d2:	80 93 19 2d 	sts	0x2D19, r24	; 0x802d19 <globalAlarmStorage+0x2>
		globalAlarmStorage.minutes = 16;
    44d6:	80 e1       	ldi	r24, 0x10	; 16
    44d8:	80 93 18 2d 	sts	0x2D18, r24	; 0x802d18 <globalAlarmStorage+0x1>
		globalAlarmStorage.seconds = 0;
    44dc:	10 92 17 2d 	sts	0x2D17, r1	; 0x802d17 <globalAlarmStorage>
		for(;;) {
			xEventGroupWaitBits(egAlarmClock, ALARMCLOCK_COUNT1SECOND, pdTRUE, pdFALSE, portMAX_DELAY);
    44e0:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    44e4:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    44e8:	cc 24       	eor	r12, r12
    44ea:	ca 94       	dec	r12
    44ec:	dc 2c       	mov	r13, r12
    44ee:	76 01       	movw	r14, r12
    44f0:	00 e0       	ldi	r16, 0x00	; 0
    44f2:	21 e0       	ldi	r18, 0x01	; 1
    44f4:	41 e0       	ldi	r20, 0x01	; 1
    44f6:	50 e0       	ldi	r21, 0x00	; 0
    44f8:	60 e0       	ldi	r22, 0x00	; 0
    44fa:	70 e0       	ldi	r23, 0x00	; 0
    44fc:	0e 94 fe 03 	call	0x7fc	; 0x7fc <xEventGroupWaitBits>
			globalTimeStorage.seconds++;
    4500:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    4504:	8f 5f       	subi	r24, 0xFF	; 255
    4506:	80 93 14 2d 	sts	0x2D14, r24	; 0x802d14 <globalTimeStorage>
			if(globalTimeStorage.seconds>=60) {
    450a:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    450e:	8c 33       	cpi	r24, 0x3C	; 60
    4510:	3c f0       	brlt	.+14     	; 0x4520 <vTime+0x7e>
				globalTimeStorage.minutes++;
    4512:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4516:	8f 5f       	subi	r24, 0xFF	; 255
    4518:	80 93 15 2d 	sts	0x2D15, r24	; 0x802d15 <globalTimeStorage+0x1>
				globalTimeStorage.seconds = 0;
    451c:	10 92 14 2d 	sts	0x2D14, r1	; 0x802d14 <globalTimeStorage>
			}
			if(globalTimeStorage.minutes >= 60) {
    4520:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4524:	8c 33       	cpi	r24, 0x3C	; 60
    4526:	3c f0       	brlt	.+14     	; 0x4536 <vTime+0x94>
				globalTimeStorage.hours++;
    4528:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    452c:	8f 5f       	subi	r24, 0xFF	; 255
    452e:	80 93 16 2d 	sts	0x2D16, r24	; 0x802d16 <globalTimeStorage+0x2>
				globalTimeStorage.minutes = 0;
    4532:	10 92 15 2d 	sts	0x2D15, r1	; 0x802d15 <globalTimeStorage+0x1>
			}
			if(globalTimeStorage.hours >= 24) {
    4536:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    453a:	88 31       	cpi	r24, 0x18	; 24
    453c:	14 f0       	brlt	.+4      	; 0x4542 <vTime+0xa0>
				globalTimeStorage.hours = 0;
    453e:	10 92 16 2d 	sts	0x2D16, r1	; 0x802d16 <globalTimeStorage+0x2>
			}
			vTaskDelay(150 / portTICK_RATE_MS);
    4542:	66 e9       	ldi	r22, 0x96	; 150
    4544:	70 e0       	ldi	r23, 0x00	; 0
    4546:	80 e0       	ldi	r24, 0x00	; 0
    4548:	90 e0       	ldi	r25, 0x00	; 0
    454a:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
		}
    454e:	c8 cf       	rjmp	.-112    	; 0x44e0 <vTime+0x3e>

00004550 <__vector_77>:
	}
}

ISR(TCD0_OVF_vect) 
{	
    4550:	1f 92       	push	r1
    4552:	0f 92       	push	r0
    4554:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7de03f>
    4558:	0f 92       	push	r0
    455a:	11 24       	eor	r1, r1
    455c:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7de03b>
    4560:	0f 92       	push	r0
    4562:	2f 93       	push	r18
    4564:	3f 93       	push	r19
    4566:	4f 93       	push	r20
    4568:	5f 93       	push	r21
    456a:	6f 93       	push	r22
    456c:	7f 93       	push	r23
    456e:	8f 93       	push	r24
    4570:	9f 93       	push	r25
    4572:	af 93       	push	r26
    4574:	bf 93       	push	r27
    4576:	ef 93       	push	r30
    4578:	ff 93       	push	r31
    457a:	cf 93       	push	r28
    457c:	df 93       	push	r29
    457e:	1f 92       	push	r1
    4580:	cd b7       	in	r28, 0x3d	; 61
    4582:	de b7       	in	r29, 0x3e	; 62
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
    4584:	19 82       	std	Y+1, r1	; 0x01
	xEventGroupSetBitsFromISR(egAlarmClock, ALARMCLOCK_COUNT1SECOND,&xHigherPriorityTaskWoken );
    4586:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    458a:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    458e:	9e 01       	movw	r18, r28
    4590:	2f 5f       	subi	r18, 0xFF	; 255
    4592:	3f 4f       	sbci	r19, 0xFF	; 255
    4594:	41 e0       	ldi	r20, 0x01	; 1
    4596:	50 e0       	ldi	r21, 0x00	; 0
    4598:	60 e0       	ldi	r22, 0x00	; 0
    459a:	70 e0       	ldi	r23, 0x00	; 0
    459c:	0e 94 ee 06 	call	0xddc	; 0xddc <xEventGroupSetBitsFromISR>
}
    45a0:	00 00       	nop
    45a2:	0f 90       	pop	r0
    45a4:	df 91       	pop	r29
    45a6:	cf 91       	pop	r28
    45a8:	ff 91       	pop	r31
    45aa:	ef 91       	pop	r30
    45ac:	bf 91       	pop	r27
    45ae:	af 91       	pop	r26
    45b0:	9f 91       	pop	r25
    45b2:	8f 91       	pop	r24
    45b4:	7f 91       	pop	r23
    45b6:	6f 91       	pop	r22
    45b8:	5f 91       	pop	r21
    45ba:	4f 91       	pop	r20
    45bc:	3f 91       	pop	r19
    45be:	2f 91       	pop	r18
    45c0:	0f 90       	pop	r0
    45c2:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7de03b>
    45c6:	0f 90       	pop	r0
    45c8:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7de03f>
    45cc:	0f 90       	pop	r0
    45ce:	1f 90       	pop	r1
    45d0:	18 95       	reti

000045d2 <vLedBlink>:

void vLedBlink(void *pvParameters) {
    45d2:	cf 92       	push	r12
    45d4:	df 92       	push	r13
    45d6:	ef 92       	push	r14
    45d8:	ff 92       	push	r15
    45da:	0f 93       	push	r16
    45dc:	cf 93       	push	r28
    45de:	df 93       	push	r29
    45e0:	1f 92       	push	r1
    45e2:	1f 92       	push	r1
    45e4:	cd b7       	in	r28, 0x3d	; 61
    45e6:	de b7       	in	r29, 0x3e	; 62
    45e8:	89 83       	std	Y+1, r24	; 0x01
    45ea:	9a 83       	std	Y+2, r25	; 0x02
	PORTF.DIRSET = 0x0F;
    45ec:	80 ea       	ldi	r24, 0xA0	; 160
    45ee:	96 e0       	ldi	r25, 0x06	; 6
    45f0:	2f e0       	ldi	r18, 0x0F	; 15
    45f2:	fc 01       	movw	r30, r24
    45f4:	21 83       	std	Z+1, r18	; 0x01
	PORTF.OUT = 0x0F;
    45f6:	80 ea       	ldi	r24, 0xA0	; 160
    45f8:	96 e0       	ldi	r25, 0x06	; 6
    45fa:	2f e0       	ldi	r18, 0x0F	; 15
    45fc:	fc 01       	movw	r30, r24
    45fe:	24 83       	std	Z+4, r18	; 0x04
	while(egAlarmClock == NULL) {
    4600:	06 c0       	rjmp	.+12     	; 0x460e <vLedBlink+0x3c>
		vTaskDelay(1);
    4602:	61 e0       	ldi	r22, 0x01	; 1
    4604:	70 e0       	ldi	r23, 0x00	; 0
    4606:	80 e0       	ldi	r24, 0x00	; 0
    4608:	90 e0       	ldi	r25, 0x00	; 0
    460a:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
}

void vLedBlink(void *pvParameters) {
	PORTF.DIRSET = 0x0F;
	PORTF.OUT = 0x0F;
	while(egAlarmClock == NULL) {
    460e:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    4612:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4616:	89 2b       	or	r24, r25
    4618:	a1 f3       	breq	.-24     	; 0x4602 <vLedBlink+0x30>
		vTaskDelay(1);
	}
	for(;;) {
		xEventGroupWaitBits(egAlarmClock, ALARMCLOCK_ALARM_ON, pdFALSE, pdFALSE, portMAX_DELAY);
    461a:	80 91 4a 2d 	lds	r24, 0x2D4A	; 0x802d4a <egAlarmClock>
    461e:	90 91 4b 2d 	lds	r25, 0x2D4B	; 0x802d4b <egAlarmClock+0x1>
    4622:	cc 24       	eor	r12, r12
    4624:	ca 94       	dec	r12
    4626:	dc 2c       	mov	r13, r12
    4628:	76 01       	movw	r14, r12
    462a:	00 e0       	ldi	r16, 0x00	; 0
    462c:	20 e0       	ldi	r18, 0x00	; 0
    462e:	42 e0       	ldi	r20, 0x02	; 2
    4630:	50 e0       	ldi	r21, 0x00	; 0
    4632:	60 e0       	ldi	r22, 0x00	; 0
    4634:	70 e0       	ldi	r23, 0x00	; 0
    4636:	0e 94 fe 03 	call	0x7fc	; 0x7fc <xEventGroupWaitBits>
		PORTF.OUTCLR = 0x0F;
    463a:	80 ea       	ldi	r24, 0xA0	; 160
    463c:	96 e0       	ldi	r25, 0x06	; 6
    463e:	2f e0       	ldi	r18, 0x0F	; 15
    4640:	fc 01       	movw	r30, r24
    4642:	26 83       	std	Z+6, r18	; 0x06
		vTaskDelay(30 / portTICK_RATE_MS);
    4644:	6e e1       	ldi	r22, 0x1E	; 30
    4646:	70 e0       	ldi	r23, 0x00	; 0
    4648:	80 e0       	ldi	r24, 0x00	; 0
    464a:	90 e0       	ldi	r25, 0x00	; 0
    464c:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
		PORTF.OUTSET = 0x0F;
    4650:	80 ea       	ldi	r24, 0xA0	; 160
    4652:	96 e0       	ldi	r25, 0x06	; 6
    4654:	2f e0       	ldi	r18, 0x0F	; 15
    4656:	fc 01       	movw	r30, r24
    4658:	25 83       	std	Z+5, r18	; 0x05
		vTaskDelay(100 / portTICK_RATE_MS);
    465a:	64 e6       	ldi	r22, 0x64	; 100
    465c:	70 e0       	ldi	r23, 0x00	; 0
    465e:	80 e0       	ldi	r24, 0x00	; 0
    4660:	90 e0       	ldi	r25, 0x00	; 0
    4662:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
	}
    4666:	d9 cf       	rjmp	.-78     	; 0x461a <vLedBlink+0x48>

00004668 <drawTime>:
}



void drawTime(void) {
    4668:	cf 93       	push	r28
    466a:	df 93       	push	r29
    466c:	cd b7       	in	r28, 0x3d	; 61
    466e:	de b7       	in	r29, 0x3e	; 62
	vDisplayWriteStringAtPos(1,3,"Time:    00:00:00");
    4670:	84 e8       	ldi	r24, 0x84	; 132
    4672:	90 e2       	ldi	r25, 0x20	; 32
    4674:	89 2f       	mov	r24, r25
    4676:	8f 93       	push	r24
    4678:	84 e8       	ldi	r24, 0x84	; 132
    467a:	90 e2       	ldi	r25, 0x20	; 32
    467c:	8f 93       	push	r24
    467e:	1f 92       	push	r1
    4680:	83 e0       	ldi	r24, 0x03	; 3
    4682:	8f 93       	push	r24
    4684:	1f 92       	push	r1
    4686:	81 e0       	ldi	r24, 0x01	; 1
    4688:	8f 93       	push	r24
    468a:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    468e:	0f 90       	pop	r0
    4690:	0f 90       	pop	r0
    4692:	0f 90       	pop	r0
    4694:	0f 90       	pop	r0
    4696:	0f 90       	pop	r0
    4698:	0f 90       	pop	r0
	if(globalTimeStorage.hours > 9) {
    469a:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    469e:	8a 30       	cpi	r24, 0x0A	; 10
    46a0:	ec f0       	brlt	.+58     	; 0x46dc <drawTime+0x74>
		vDisplayWriteStringAtPos(1,12,"%d", globalTimeStorage.hours);
    46a2:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    46a6:	08 2e       	mov	r0, r24
    46a8:	00 0c       	add	r0, r0
    46aa:	99 0b       	sbc	r25, r25
    46ac:	29 2f       	mov	r18, r25
    46ae:	2f 93       	push	r18
    46b0:	8f 93       	push	r24
    46b2:	86 e9       	ldi	r24, 0x96	; 150
    46b4:	90 e2       	ldi	r25, 0x20	; 32
    46b6:	89 2f       	mov	r24, r25
    46b8:	8f 93       	push	r24
    46ba:	86 e9       	ldi	r24, 0x96	; 150
    46bc:	90 e2       	ldi	r25, 0x20	; 32
    46be:	8f 93       	push	r24
    46c0:	1f 92       	push	r1
    46c2:	8c e0       	ldi	r24, 0x0C	; 12
    46c4:	8f 93       	push	r24
    46c6:	1f 92       	push	r1
    46c8:	81 e0       	ldi	r24, 0x01	; 1
    46ca:	8f 93       	push	r24
    46cc:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    46d0:	8d b7       	in	r24, 0x3d	; 61
    46d2:	9e b7       	in	r25, 0x3e	; 62
    46d4:	08 96       	adiw	r24, 0x08	; 8
    46d6:	cd bf       	out	0x3d, r28	; 61
    46d8:	de bf       	out	0x3e, r29	; 62
    46da:	1c c0       	rjmp	.+56     	; 0x4714 <drawTime+0xac>
		} else {
		vDisplayWriteStringAtPos(1,13,"%d", globalTimeStorage.hours);
    46dc:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    46e0:	08 2e       	mov	r0, r24
    46e2:	00 0c       	add	r0, r0
    46e4:	99 0b       	sbc	r25, r25
    46e6:	29 2f       	mov	r18, r25
    46e8:	2f 93       	push	r18
    46ea:	8f 93       	push	r24
    46ec:	86 e9       	ldi	r24, 0x96	; 150
    46ee:	90 e2       	ldi	r25, 0x20	; 32
    46f0:	89 2f       	mov	r24, r25
    46f2:	8f 93       	push	r24
    46f4:	86 e9       	ldi	r24, 0x96	; 150
    46f6:	90 e2       	ldi	r25, 0x20	; 32
    46f8:	8f 93       	push	r24
    46fa:	1f 92       	push	r1
    46fc:	8d e0       	ldi	r24, 0x0D	; 13
    46fe:	8f 93       	push	r24
    4700:	1f 92       	push	r1
    4702:	81 e0       	ldi	r24, 0x01	; 1
    4704:	8f 93       	push	r24
    4706:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    470a:	8d b7       	in	r24, 0x3d	; 61
    470c:	9e b7       	in	r25, 0x3e	; 62
    470e:	08 96       	adiw	r24, 0x08	; 8
    4710:	cd bf       	out	0x3d, r28	; 61
    4712:	de bf       	out	0x3e, r29	; 62
	}
	if(globalTimeStorage.minutes > 9) {
    4714:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4718:	8a 30       	cpi	r24, 0x0A	; 10
    471a:	ec f0       	brlt	.+58     	; 0x4756 <drawTime+0xee>
		vDisplayWriteStringAtPos(1,15,"%d", globalTimeStorage.minutes);
    471c:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4720:	08 2e       	mov	r0, r24
    4722:	00 0c       	add	r0, r0
    4724:	99 0b       	sbc	r25, r25
    4726:	29 2f       	mov	r18, r25
    4728:	2f 93       	push	r18
    472a:	8f 93       	push	r24
    472c:	86 e9       	ldi	r24, 0x96	; 150
    472e:	90 e2       	ldi	r25, 0x20	; 32
    4730:	89 2f       	mov	r24, r25
    4732:	8f 93       	push	r24
    4734:	86 e9       	ldi	r24, 0x96	; 150
    4736:	90 e2       	ldi	r25, 0x20	; 32
    4738:	8f 93       	push	r24
    473a:	1f 92       	push	r1
    473c:	8f e0       	ldi	r24, 0x0F	; 15
    473e:	8f 93       	push	r24
    4740:	1f 92       	push	r1
    4742:	81 e0       	ldi	r24, 0x01	; 1
    4744:	8f 93       	push	r24
    4746:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    474a:	8d b7       	in	r24, 0x3d	; 61
    474c:	9e b7       	in	r25, 0x3e	; 62
    474e:	08 96       	adiw	r24, 0x08	; 8
    4750:	cd bf       	out	0x3d, r28	; 61
    4752:	de bf       	out	0x3e, r29	; 62
    4754:	1c c0       	rjmp	.+56     	; 0x478e <drawTime+0x126>
		} else {
		vDisplayWriteStringAtPos(1,16,"%d", globalTimeStorage.minutes);
    4756:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    475a:	08 2e       	mov	r0, r24
    475c:	00 0c       	add	r0, r0
    475e:	99 0b       	sbc	r25, r25
    4760:	29 2f       	mov	r18, r25
    4762:	2f 93       	push	r18
    4764:	8f 93       	push	r24
    4766:	86 e9       	ldi	r24, 0x96	; 150
    4768:	90 e2       	ldi	r25, 0x20	; 32
    476a:	89 2f       	mov	r24, r25
    476c:	8f 93       	push	r24
    476e:	86 e9       	ldi	r24, 0x96	; 150
    4770:	90 e2       	ldi	r25, 0x20	; 32
    4772:	8f 93       	push	r24
    4774:	1f 92       	push	r1
    4776:	80 e1       	ldi	r24, 0x10	; 16
    4778:	8f 93       	push	r24
    477a:	1f 92       	push	r1
    477c:	81 e0       	ldi	r24, 0x01	; 1
    477e:	8f 93       	push	r24
    4780:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4784:	8d b7       	in	r24, 0x3d	; 61
    4786:	9e b7       	in	r25, 0x3e	; 62
    4788:	08 96       	adiw	r24, 0x08	; 8
    478a:	cd bf       	out	0x3d, r28	; 61
    478c:	de bf       	out	0x3e, r29	; 62
	}
	if(globalTimeStorage.seconds > 9) {
    478e:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    4792:	8a 30       	cpi	r24, 0x0A	; 10
    4794:	ec f0       	brlt	.+58     	; 0x47d0 <drawTime+0x168>
		vDisplayWriteStringAtPos(1,18,"%d", globalTimeStorage.seconds);
    4796:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    479a:	08 2e       	mov	r0, r24
    479c:	00 0c       	add	r0, r0
    479e:	99 0b       	sbc	r25, r25
    47a0:	29 2f       	mov	r18, r25
    47a2:	2f 93       	push	r18
    47a4:	8f 93       	push	r24
    47a6:	86 e9       	ldi	r24, 0x96	; 150
    47a8:	90 e2       	ldi	r25, 0x20	; 32
    47aa:	89 2f       	mov	r24, r25
    47ac:	8f 93       	push	r24
    47ae:	86 e9       	ldi	r24, 0x96	; 150
    47b0:	90 e2       	ldi	r25, 0x20	; 32
    47b2:	8f 93       	push	r24
    47b4:	1f 92       	push	r1
    47b6:	82 e1       	ldi	r24, 0x12	; 18
    47b8:	8f 93       	push	r24
    47ba:	1f 92       	push	r1
    47bc:	81 e0       	ldi	r24, 0x01	; 1
    47be:	8f 93       	push	r24
    47c0:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    47c4:	8d b7       	in	r24, 0x3d	; 61
    47c6:	9e b7       	in	r25, 0x3e	; 62
    47c8:	08 96       	adiw	r24, 0x08	; 8
    47ca:	cd bf       	out	0x3d, r28	; 61
    47cc:	de bf       	out	0x3e, r29	; 62
		} else {
		vDisplayWriteStringAtPos(1,19,"%d", globalTimeStorage.seconds);
	}
}
    47ce:	1c c0       	rjmp	.+56     	; 0x4808 <drawTime+0x1a0>
		vDisplayWriteStringAtPos(1,16,"%d", globalTimeStorage.minutes);
	}
	if(globalTimeStorage.seconds > 9) {
		vDisplayWriteStringAtPos(1,18,"%d", globalTimeStorage.seconds);
		} else {
		vDisplayWriteStringAtPos(1,19,"%d", globalTimeStorage.seconds);
    47d0:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    47d4:	08 2e       	mov	r0, r24
    47d6:	00 0c       	add	r0, r0
    47d8:	99 0b       	sbc	r25, r25
    47da:	29 2f       	mov	r18, r25
    47dc:	2f 93       	push	r18
    47de:	8f 93       	push	r24
    47e0:	86 e9       	ldi	r24, 0x96	; 150
    47e2:	90 e2       	ldi	r25, 0x20	; 32
    47e4:	89 2f       	mov	r24, r25
    47e6:	8f 93       	push	r24
    47e8:	86 e9       	ldi	r24, 0x96	; 150
    47ea:	90 e2       	ldi	r25, 0x20	; 32
    47ec:	8f 93       	push	r24
    47ee:	1f 92       	push	r1
    47f0:	83 e1       	ldi	r24, 0x13	; 19
    47f2:	8f 93       	push	r24
    47f4:	1f 92       	push	r1
    47f6:	81 e0       	ldi	r24, 0x01	; 1
    47f8:	8f 93       	push	r24
    47fa:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    47fe:	8d b7       	in	r24, 0x3d	; 61
    4800:	9e b7       	in	r25, 0x3e	; 62
    4802:	08 96       	adiw	r24, 0x08	; 8
    4804:	cd bf       	out	0x3d, r28	; 61
    4806:	de bf       	out	0x3e, r29	; 62
	}
}
    4808:	00 00       	nop
    480a:	df 91       	pop	r29
    480c:	cf 91       	pop	r28
    480e:	08 95       	ret

00004810 <drawAlarm>:
void drawAlarm(void) {
    4810:	cf 93       	push	r28
    4812:	df 93       	push	r29
    4814:	cd b7       	in	r28, 0x3d	; 61
    4816:	de b7       	in	r29, 0x3e	; 62
	vDisplayWriteStringAtPos(2,3,"Alarm:   00:00:00");
    4818:	89 e9       	ldi	r24, 0x99	; 153
    481a:	90 e2       	ldi	r25, 0x20	; 32
    481c:	89 2f       	mov	r24, r25
    481e:	8f 93       	push	r24
    4820:	89 e9       	ldi	r24, 0x99	; 153
    4822:	90 e2       	ldi	r25, 0x20	; 32
    4824:	8f 93       	push	r24
    4826:	1f 92       	push	r1
    4828:	83 e0       	ldi	r24, 0x03	; 3
    482a:	8f 93       	push	r24
    482c:	1f 92       	push	r1
    482e:	82 e0       	ldi	r24, 0x02	; 2
    4830:	8f 93       	push	r24
    4832:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4836:	0f 90       	pop	r0
    4838:	0f 90       	pop	r0
    483a:	0f 90       	pop	r0
    483c:	0f 90       	pop	r0
    483e:	0f 90       	pop	r0
    4840:	0f 90       	pop	r0
	if(globalAlarmStorage.hours > 9) {
    4842:	80 91 19 2d 	lds	r24, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    4846:	8a 30       	cpi	r24, 0x0A	; 10
    4848:	ec f0       	brlt	.+58     	; 0x4884 <drawAlarm+0x74>
		vDisplayWriteStringAtPos(2,12,"%d", globalAlarmStorage.hours);
    484a:	80 91 19 2d 	lds	r24, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    484e:	08 2e       	mov	r0, r24
    4850:	00 0c       	add	r0, r0
    4852:	99 0b       	sbc	r25, r25
    4854:	29 2f       	mov	r18, r25
    4856:	2f 93       	push	r18
    4858:	8f 93       	push	r24
    485a:	86 e9       	ldi	r24, 0x96	; 150
    485c:	90 e2       	ldi	r25, 0x20	; 32
    485e:	89 2f       	mov	r24, r25
    4860:	8f 93       	push	r24
    4862:	86 e9       	ldi	r24, 0x96	; 150
    4864:	90 e2       	ldi	r25, 0x20	; 32
    4866:	8f 93       	push	r24
    4868:	1f 92       	push	r1
    486a:	8c e0       	ldi	r24, 0x0C	; 12
    486c:	8f 93       	push	r24
    486e:	1f 92       	push	r1
    4870:	82 e0       	ldi	r24, 0x02	; 2
    4872:	8f 93       	push	r24
    4874:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4878:	8d b7       	in	r24, 0x3d	; 61
    487a:	9e b7       	in	r25, 0x3e	; 62
    487c:	08 96       	adiw	r24, 0x08	; 8
    487e:	cd bf       	out	0x3d, r28	; 61
    4880:	de bf       	out	0x3e, r29	; 62
    4882:	1c c0       	rjmp	.+56     	; 0x48bc <drawAlarm+0xac>
		} else {
		vDisplayWriteStringAtPos(2,13,"%d", globalAlarmStorage.hours);
    4884:	80 91 19 2d 	lds	r24, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    4888:	08 2e       	mov	r0, r24
    488a:	00 0c       	add	r0, r0
    488c:	99 0b       	sbc	r25, r25
    488e:	29 2f       	mov	r18, r25
    4890:	2f 93       	push	r18
    4892:	8f 93       	push	r24
    4894:	86 e9       	ldi	r24, 0x96	; 150
    4896:	90 e2       	ldi	r25, 0x20	; 32
    4898:	89 2f       	mov	r24, r25
    489a:	8f 93       	push	r24
    489c:	86 e9       	ldi	r24, 0x96	; 150
    489e:	90 e2       	ldi	r25, 0x20	; 32
    48a0:	8f 93       	push	r24
    48a2:	1f 92       	push	r1
    48a4:	8d e0       	ldi	r24, 0x0D	; 13
    48a6:	8f 93       	push	r24
    48a8:	1f 92       	push	r1
    48aa:	82 e0       	ldi	r24, 0x02	; 2
    48ac:	8f 93       	push	r24
    48ae:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    48b2:	8d b7       	in	r24, 0x3d	; 61
    48b4:	9e b7       	in	r25, 0x3e	; 62
    48b6:	08 96       	adiw	r24, 0x08	; 8
    48b8:	cd bf       	out	0x3d, r28	; 61
    48ba:	de bf       	out	0x3e, r29	; 62
	}
	if(globalAlarmStorage.minutes > 9) {
    48bc:	80 91 18 2d 	lds	r24, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    48c0:	8a 30       	cpi	r24, 0x0A	; 10
    48c2:	ec f0       	brlt	.+58     	; 0x48fe <drawAlarm+0xee>
		vDisplayWriteStringAtPos(2,15,"%d", globalAlarmStorage.minutes);
    48c4:	80 91 18 2d 	lds	r24, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    48c8:	08 2e       	mov	r0, r24
    48ca:	00 0c       	add	r0, r0
    48cc:	99 0b       	sbc	r25, r25
    48ce:	29 2f       	mov	r18, r25
    48d0:	2f 93       	push	r18
    48d2:	8f 93       	push	r24
    48d4:	86 e9       	ldi	r24, 0x96	; 150
    48d6:	90 e2       	ldi	r25, 0x20	; 32
    48d8:	89 2f       	mov	r24, r25
    48da:	8f 93       	push	r24
    48dc:	86 e9       	ldi	r24, 0x96	; 150
    48de:	90 e2       	ldi	r25, 0x20	; 32
    48e0:	8f 93       	push	r24
    48e2:	1f 92       	push	r1
    48e4:	8f e0       	ldi	r24, 0x0F	; 15
    48e6:	8f 93       	push	r24
    48e8:	1f 92       	push	r1
    48ea:	82 e0       	ldi	r24, 0x02	; 2
    48ec:	8f 93       	push	r24
    48ee:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    48f2:	8d b7       	in	r24, 0x3d	; 61
    48f4:	9e b7       	in	r25, 0x3e	; 62
    48f6:	08 96       	adiw	r24, 0x08	; 8
    48f8:	cd bf       	out	0x3d, r28	; 61
    48fa:	de bf       	out	0x3e, r29	; 62
    48fc:	1c c0       	rjmp	.+56     	; 0x4936 <drawAlarm+0x126>
		} else {
		vDisplayWriteStringAtPos(2,16,"%d", globalAlarmStorage.minutes);
    48fe:	80 91 18 2d 	lds	r24, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    4902:	08 2e       	mov	r0, r24
    4904:	00 0c       	add	r0, r0
    4906:	99 0b       	sbc	r25, r25
    4908:	29 2f       	mov	r18, r25
    490a:	2f 93       	push	r18
    490c:	8f 93       	push	r24
    490e:	86 e9       	ldi	r24, 0x96	; 150
    4910:	90 e2       	ldi	r25, 0x20	; 32
    4912:	89 2f       	mov	r24, r25
    4914:	8f 93       	push	r24
    4916:	86 e9       	ldi	r24, 0x96	; 150
    4918:	90 e2       	ldi	r25, 0x20	; 32
    491a:	8f 93       	push	r24
    491c:	1f 92       	push	r1
    491e:	80 e1       	ldi	r24, 0x10	; 16
    4920:	8f 93       	push	r24
    4922:	1f 92       	push	r1
    4924:	82 e0       	ldi	r24, 0x02	; 2
    4926:	8f 93       	push	r24
    4928:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    492c:	8d b7       	in	r24, 0x3d	; 61
    492e:	9e b7       	in	r25, 0x3e	; 62
    4930:	08 96       	adiw	r24, 0x08	; 8
    4932:	cd bf       	out	0x3d, r28	; 61
    4934:	de bf       	out	0x3e, r29	; 62
	}
	if(globalAlarmStorage.seconds > 9) {
    4936:	80 91 17 2d 	lds	r24, 0x2D17	; 0x802d17 <globalAlarmStorage>
    493a:	8a 30       	cpi	r24, 0x0A	; 10
    493c:	ec f0       	brlt	.+58     	; 0x4978 <drawAlarm+0x168>
		vDisplayWriteStringAtPos(2,18,"%d", globalAlarmStorage.seconds);
    493e:	80 91 17 2d 	lds	r24, 0x2D17	; 0x802d17 <globalAlarmStorage>
    4942:	08 2e       	mov	r0, r24
    4944:	00 0c       	add	r0, r0
    4946:	99 0b       	sbc	r25, r25
    4948:	29 2f       	mov	r18, r25
    494a:	2f 93       	push	r18
    494c:	8f 93       	push	r24
    494e:	86 e9       	ldi	r24, 0x96	; 150
    4950:	90 e2       	ldi	r25, 0x20	; 32
    4952:	89 2f       	mov	r24, r25
    4954:	8f 93       	push	r24
    4956:	86 e9       	ldi	r24, 0x96	; 150
    4958:	90 e2       	ldi	r25, 0x20	; 32
    495a:	8f 93       	push	r24
    495c:	1f 92       	push	r1
    495e:	82 e1       	ldi	r24, 0x12	; 18
    4960:	8f 93       	push	r24
    4962:	1f 92       	push	r1
    4964:	82 e0       	ldi	r24, 0x02	; 2
    4966:	8f 93       	push	r24
    4968:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    496c:	8d b7       	in	r24, 0x3d	; 61
    496e:	9e b7       	in	r25, 0x3e	; 62
    4970:	08 96       	adiw	r24, 0x08	; 8
    4972:	cd bf       	out	0x3d, r28	; 61
    4974:	de bf       	out	0x3e, r29	; 62
		} else {
		vDisplayWriteStringAtPos(2,19,"%d", globalAlarmStorage.seconds);
	}
}
    4976:	1c c0       	rjmp	.+56     	; 0x49b0 <drawAlarm+0x1a0>
		vDisplayWriteStringAtPos(2,16,"%d", globalAlarmStorage.minutes);
	}
	if(globalAlarmStorage.seconds > 9) {
		vDisplayWriteStringAtPos(2,18,"%d", globalAlarmStorage.seconds);
		} else {
		vDisplayWriteStringAtPos(2,19,"%d", globalAlarmStorage.seconds);
    4978:	80 91 17 2d 	lds	r24, 0x2D17	; 0x802d17 <globalAlarmStorage>
    497c:	08 2e       	mov	r0, r24
    497e:	00 0c       	add	r0, r0
    4980:	99 0b       	sbc	r25, r25
    4982:	29 2f       	mov	r18, r25
    4984:	2f 93       	push	r18
    4986:	8f 93       	push	r24
    4988:	86 e9       	ldi	r24, 0x96	; 150
    498a:	90 e2       	ldi	r25, 0x20	; 32
    498c:	89 2f       	mov	r24, r25
    498e:	8f 93       	push	r24
    4990:	86 e9       	ldi	r24, 0x96	; 150
    4992:	90 e2       	ldi	r25, 0x20	; 32
    4994:	8f 93       	push	r24
    4996:	1f 92       	push	r1
    4998:	83 e1       	ldi	r24, 0x13	; 19
    499a:	8f 93       	push	r24
    499c:	1f 92       	push	r1
    499e:	82 e0       	ldi	r24, 0x02	; 2
    49a0:	8f 93       	push	r24
    49a2:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    49a6:	8d b7       	in	r24, 0x3d	; 61
    49a8:	9e b7       	in	r25, 0x3e	; 62
    49aa:	08 96       	adiw	r24, 0x08	; 8
    49ac:	cd bf       	out	0x3d, r28	; 61
    49ae:	de bf       	out	0x3e, r29	; 62
	}
}
    49b0:	00 00       	nop
    49b2:	df 91       	pop	r29
    49b4:	cf 91       	pop	r28
    49b6:	08 95       	ret

000049b8 <drawPointer>:



void drawPointer(int line, int pos) {
    49b8:	cf 93       	push	r28
    49ba:	df 93       	push	r29
    49bc:	00 d0       	rcall	.+0      	; 0x49be <drawPointer+0x6>
    49be:	1f 92       	push	r1
    49c0:	cd b7       	in	r28, 0x3d	; 61
    49c2:	de b7       	in	r29, 0x3e	; 62
    49c4:	89 83       	std	Y+1, r24	; 0x01
    49c6:	9a 83       	std	Y+2, r25	; 0x02
    49c8:	6b 83       	std	Y+3, r22	; 0x03
    49ca:	7c 83       	std	Y+4, r23	; 0x04
	if(line == 1) {
    49cc:	89 81       	ldd	r24, Y+1	; 0x01
    49ce:	9a 81       	ldd	r25, Y+2	; 0x02
    49d0:	01 97       	sbiw	r24, 0x01	; 1
    49d2:	f1 f4       	brne	.+60     	; 0x4a10 <drawPointer+0x58>
		vDisplayWriteStringAtPos(1,12+pos*3,"vv");
    49d4:	2b 81       	ldd	r18, Y+3	; 0x03
    49d6:	3c 81       	ldd	r19, Y+4	; 0x04
    49d8:	c9 01       	movw	r24, r18
    49da:	88 0f       	add	r24, r24
    49dc:	99 1f       	adc	r25, r25
    49de:	82 0f       	add	r24, r18
    49e0:	93 1f       	adc	r25, r19
    49e2:	0c 96       	adiw	r24, 0x0c	; 12
    49e4:	2b ea       	ldi	r18, 0xAB	; 171
    49e6:	30 e2       	ldi	r19, 0x20	; 32
    49e8:	23 2f       	mov	r18, r19
    49ea:	2f 93       	push	r18
    49ec:	2b ea       	ldi	r18, 0xAB	; 171
    49ee:	30 e2       	ldi	r19, 0x20	; 32
    49f0:	2f 93       	push	r18
    49f2:	29 2f       	mov	r18, r25
    49f4:	2f 93       	push	r18
    49f6:	8f 93       	push	r24
    49f8:	1f 92       	push	r1
    49fa:	81 e0       	ldi	r24, 0x01	; 1
    49fc:	8f 93       	push	r24
    49fe:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4a02:	0f 90       	pop	r0
    4a04:	0f 90       	pop	r0
    4a06:	0f 90       	pop	r0
    4a08:	0f 90       	pop	r0
    4a0a:	0f 90       	pop	r0
    4a0c:	0f 90       	pop	r0
		} else if(line == 2) {
		vDisplayWriteStringAtPos(2,12+pos*3,"^^");
	}
}
    4a0e:	21 c0       	rjmp	.+66     	; 0x4a52 <drawPointer+0x9a>


void drawPointer(int line, int pos) {
	if(line == 1) {
		vDisplayWriteStringAtPos(1,12+pos*3,"vv");
		} else if(line == 2) {
    4a10:	89 81       	ldd	r24, Y+1	; 0x01
    4a12:	9a 81       	ldd	r25, Y+2	; 0x02
    4a14:	02 97       	sbiw	r24, 0x02	; 2
    4a16:	e9 f4       	brne	.+58     	; 0x4a52 <drawPointer+0x9a>
		vDisplayWriteStringAtPos(2,12+pos*3,"^^");
    4a18:	2b 81       	ldd	r18, Y+3	; 0x03
    4a1a:	3c 81       	ldd	r19, Y+4	; 0x04
    4a1c:	c9 01       	movw	r24, r18
    4a1e:	88 0f       	add	r24, r24
    4a20:	99 1f       	adc	r25, r25
    4a22:	82 0f       	add	r24, r18
    4a24:	93 1f       	adc	r25, r19
    4a26:	0c 96       	adiw	r24, 0x0c	; 12
    4a28:	2e ea       	ldi	r18, 0xAE	; 174
    4a2a:	30 e2       	ldi	r19, 0x20	; 32
    4a2c:	23 2f       	mov	r18, r19
    4a2e:	2f 93       	push	r18
    4a30:	2e ea       	ldi	r18, 0xAE	; 174
    4a32:	30 e2       	ldi	r19, 0x20	; 32
    4a34:	2f 93       	push	r18
    4a36:	29 2f       	mov	r18, r25
    4a38:	2f 93       	push	r18
    4a3a:	8f 93       	push	r24
    4a3c:	1f 92       	push	r1
    4a3e:	82 e0       	ldi	r24, 0x02	; 2
    4a40:	8f 93       	push	r24
    4a42:	0e 94 fe 29 	call	0x53fc	; 0x53fc <vDisplayWriteStringAtPos>
    4a46:	0f 90       	pop	r0
    4a48:	0f 90       	pop	r0
    4a4a:	0f 90       	pop	r0
    4a4c:	0f 90       	pop	r0
    4a4e:	0f 90       	pop	r0
    4a50:	0f 90       	pop	r0
	}
}
    4a52:	00 00       	nop
    4a54:	24 96       	adiw	r28, 0x04	; 4
    4a56:	cd bf       	out	0x3d, r28	; 61
    4a58:	de bf       	out	0x3e, r29	; 62
    4a5a:	df 91       	pop	r29
    4a5c:	cf 91       	pop	r28
    4a5e:	08 95       	ret

00004a60 <changeValue>:



void changeValue(int valueType, int timeType, int8_t value) {
    4a60:	cf 93       	push	r28
    4a62:	df 93       	push	r29
    4a64:	cd b7       	in	r28, 0x3d	; 61
    4a66:	de b7       	in	r29, 0x3e	; 62
    4a68:	25 97       	sbiw	r28, 0x05	; 5
    4a6a:	cd bf       	out	0x3d, r28	; 61
    4a6c:	de bf       	out	0x3e, r29	; 62
    4a6e:	89 83       	std	Y+1, r24	; 0x01
    4a70:	9a 83       	std	Y+2, r25	; 0x02
    4a72:	6b 83       	std	Y+3, r22	; 0x03
    4a74:	7c 83       	std	Y+4, r23	; 0x04
    4a76:	4d 83       	std	Y+5, r20	; 0x05
	if(valueType == VALUETYPE_CLOCK) {
    4a78:	89 81       	ldd	r24, Y+1	; 0x01
    4a7a:	9a 81       	ldd	r25, Y+2	; 0x02
    4a7c:	89 2b       	or	r24, r25
    4a7e:	09 f0       	breq	.+2      	; 0x4a82 <changeValue+0x22>
    4a80:	4e c0       	rjmp	.+156    	; 0x4b1e <changeValue+0xbe>
		switch(timeType) {
    4a82:	8b 81       	ldd	r24, Y+3	; 0x03
    4a84:	9c 81       	ldd	r25, Y+4	; 0x04
    4a86:	81 30       	cpi	r24, 0x01	; 1
    4a88:	91 05       	cpc	r25, r1
    4a8a:	e1 f0       	breq	.+56     	; 0x4ac4 <changeValue+0x64>
    4a8c:	82 30       	cpi	r24, 0x02	; 2
    4a8e:	91 05       	cpc	r25, r1
    4a90:	79 f1       	breq	.+94     	; 0x4af0 <changeValue+0x90>
    4a92:	89 2b       	or	r24, r25
    4a94:	09 f0       	breq	.+2      	; 0x4a98 <changeValue+0x38>
			if(globalAlarmStorage.seconds < 0) globalAlarmStorage.seconds = 59;
			if(globalAlarmStorage.seconds > 59) globalAlarmStorage.seconds = 0;
			break;
		}
	}
}
    4a96:	9d c0       	rjmp	.+314    	; 0x4bd2 <changeValue+0x172>

void changeValue(int valueType, int timeType, int8_t value) {
	if(valueType == VALUETYPE_CLOCK) {
		switch(timeType) {
			case HOURS:
			globalTimeStorage.hours+=value;
    4a98:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    4a9c:	98 2f       	mov	r25, r24
    4a9e:	8d 81       	ldd	r24, Y+5	; 0x05
    4aa0:	89 0f       	add	r24, r25
    4aa2:	80 93 16 2d 	sts	0x2D16, r24	; 0x802d16 <globalTimeStorage+0x2>
			if(globalTimeStorage.hours < 0) globalTimeStorage.hours = 23;
    4aa6:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    4aaa:	88 23       	and	r24, r24
    4aac:	1c f4       	brge	.+6      	; 0x4ab4 <changeValue+0x54>
    4aae:	87 e1       	ldi	r24, 0x17	; 23
    4ab0:	80 93 16 2d 	sts	0x2D16, r24	; 0x802d16 <globalTimeStorage+0x2>
			if(globalTimeStorage.hours > 23) globalTimeStorage.hours = 0;
    4ab4:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    4ab8:	88 31       	cpi	r24, 0x18	; 24
    4aba:	0c f4       	brge	.+2      	; 0x4abe <changeValue+0x5e>
    4abc:	7f c0       	rjmp	.+254    	; 0x4bbc <changeValue+0x15c>
    4abe:	10 92 16 2d 	sts	0x2D16, r1	; 0x802d16 <globalTimeStorage+0x2>
			break;
    4ac2:	7c c0       	rjmp	.+248    	; 0x4bbc <changeValue+0x15c>
			case MINUTES:
			globalTimeStorage.minutes+=value;
    4ac4:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4ac8:	98 2f       	mov	r25, r24
    4aca:	8d 81       	ldd	r24, Y+5	; 0x05
    4acc:	89 0f       	add	r24, r25
    4ace:	80 93 15 2d 	sts	0x2D15, r24	; 0x802d15 <globalTimeStorage+0x1>
			if(globalTimeStorage.minutes < 0) globalTimeStorage.minutes = 59;
    4ad2:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4ad6:	88 23       	and	r24, r24
    4ad8:	1c f4       	brge	.+6      	; 0x4ae0 <changeValue+0x80>
    4ada:	8b e3       	ldi	r24, 0x3B	; 59
    4adc:	80 93 15 2d 	sts	0x2D15, r24	; 0x802d15 <globalTimeStorage+0x1>
			if(globalTimeStorage.minutes > 59) globalTimeStorage.minutes = 0;
    4ae0:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
    4ae4:	8c 33       	cpi	r24, 0x3C	; 60
    4ae6:	0c f4       	brge	.+2      	; 0x4aea <changeValue+0x8a>
    4ae8:	6b c0       	rjmp	.+214    	; 0x4bc0 <changeValue+0x160>
    4aea:	10 92 15 2d 	sts	0x2D15, r1	; 0x802d15 <globalTimeStorage+0x1>
			break;
    4aee:	68 c0       	rjmp	.+208    	; 0x4bc0 <changeValue+0x160>
			case SECONDS:
			globalTimeStorage.seconds+=value;
    4af0:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    4af4:	98 2f       	mov	r25, r24
    4af6:	8d 81       	ldd	r24, Y+5	; 0x05
    4af8:	89 0f       	add	r24, r25
    4afa:	80 93 14 2d 	sts	0x2D14, r24	; 0x802d14 <globalTimeStorage>
			if(globalTimeStorage.seconds < 0) globalTimeStorage.seconds = 59;
    4afe:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    4b02:	88 23       	and	r24, r24
    4b04:	1c f4       	brge	.+6      	; 0x4b0c <changeValue+0xac>
    4b06:	8b e3       	ldi	r24, 0x3B	; 59
    4b08:	80 93 14 2d 	sts	0x2D14, r24	; 0x802d14 <globalTimeStorage>
			if(globalTimeStorage.seconds > 59) globalTimeStorage.seconds = 0;
    4b0c:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
    4b10:	8c 33       	cpi	r24, 0x3C	; 60
    4b12:	0c f4       	brge	.+2      	; 0x4b16 <changeValue+0xb6>
    4b14:	57 c0       	rjmp	.+174    	; 0x4bc4 <changeValue+0x164>
    4b16:	10 92 14 2d 	sts	0x2D14, r1	; 0x802d14 <globalTimeStorage>
			break;
    4b1a:	00 00       	nop
    4b1c:	53 c0       	rjmp	.+166    	; 0x4bc4 <changeValue+0x164>
		}
		} else if(valueType == VALUETYPE_ALARM) {
    4b1e:	89 81       	ldd	r24, Y+1	; 0x01
    4b20:	9a 81       	ldd	r25, Y+2	; 0x02
    4b22:	01 97       	sbiw	r24, 0x01	; 1
    4b24:	09 f0       	breq	.+2      	; 0x4b28 <changeValue+0xc8>
    4b26:	55 c0       	rjmp	.+170    	; 0x4bd2 <changeValue+0x172>
		switch(timeType) {
    4b28:	8b 81       	ldd	r24, Y+3	; 0x03
    4b2a:	9c 81       	ldd	r25, Y+4	; 0x04
    4b2c:	81 30       	cpi	r24, 0x01	; 1
    4b2e:	91 05       	cpc	r25, r1
    4b30:	d9 f0       	breq	.+54     	; 0x4b68 <changeValue+0x108>
    4b32:	82 30       	cpi	r24, 0x02	; 2
    4b34:	91 05       	cpc	r25, r1
    4b36:	69 f1       	breq	.+90     	; 0x4b92 <changeValue+0x132>
    4b38:	89 2b       	or	r24, r25
    4b3a:	09 f0       	breq	.+2      	; 0x4b3e <changeValue+0xde>
			if(globalAlarmStorage.seconds < 0) globalAlarmStorage.seconds = 59;
			if(globalAlarmStorage.seconds > 59) globalAlarmStorage.seconds = 0;
			break;
		}
	}
}
    4b3c:	4a c0       	rjmp	.+148    	; 0x4bd2 <changeValue+0x172>
			break;
		}
		} else if(valueType == VALUETYPE_ALARM) {
		switch(timeType) {
			case HOURS:
			globalAlarmStorage.hours+=value;
    4b3e:	80 91 19 2d 	lds	r24, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    4b42:	98 2f       	mov	r25, r24
    4b44:	8d 81       	ldd	r24, Y+5	; 0x05
    4b46:	89 0f       	add	r24, r25
    4b48:	80 93 19 2d 	sts	0x2D19, r24	; 0x802d19 <globalAlarmStorage+0x2>
			if(globalAlarmStorage.hours < 0) globalAlarmStorage.hours = 23;
    4b4c:	80 91 19 2d 	lds	r24, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    4b50:	88 23       	and	r24, r24
    4b52:	1c f4       	brge	.+6      	; 0x4b5a <changeValue+0xfa>
    4b54:	87 e1       	ldi	r24, 0x17	; 23
    4b56:	80 93 19 2d 	sts	0x2D19, r24	; 0x802d19 <globalAlarmStorage+0x2>
			if(globalAlarmStorage.hours > 23) globalAlarmStorage.hours = 0;
    4b5a:	80 91 19 2d 	lds	r24, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    4b5e:	88 31       	cpi	r24, 0x18	; 24
    4b60:	9c f1       	brlt	.+102    	; 0x4bc8 <changeValue+0x168>
    4b62:	10 92 19 2d 	sts	0x2D19, r1	; 0x802d19 <globalAlarmStorage+0x2>
			break;
    4b66:	30 c0       	rjmp	.+96     	; 0x4bc8 <changeValue+0x168>
			case MINUTES:
			globalAlarmStorage.minutes+=value;
    4b68:	80 91 18 2d 	lds	r24, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    4b6c:	98 2f       	mov	r25, r24
    4b6e:	8d 81       	ldd	r24, Y+5	; 0x05
    4b70:	89 0f       	add	r24, r25
    4b72:	80 93 18 2d 	sts	0x2D18, r24	; 0x802d18 <globalAlarmStorage+0x1>
			if(globalAlarmStorage.minutes < 0) globalAlarmStorage.minutes = 59;
    4b76:	80 91 18 2d 	lds	r24, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    4b7a:	88 23       	and	r24, r24
    4b7c:	1c f4       	brge	.+6      	; 0x4b84 <changeValue+0x124>
    4b7e:	8b e3       	ldi	r24, 0x3B	; 59
    4b80:	80 93 18 2d 	sts	0x2D18, r24	; 0x802d18 <globalAlarmStorage+0x1>
			if(globalAlarmStorage.minutes > 59) globalAlarmStorage.minutes = 0;
    4b84:	80 91 18 2d 	lds	r24, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    4b88:	8c 33       	cpi	r24, 0x3C	; 60
    4b8a:	04 f1       	brlt	.+64     	; 0x4bcc <changeValue+0x16c>
    4b8c:	10 92 18 2d 	sts	0x2D18, r1	; 0x802d18 <globalAlarmStorage+0x1>
			break;
    4b90:	1d c0       	rjmp	.+58     	; 0x4bcc <changeValue+0x16c>
			case SECONDS:
			globalAlarmStorage.seconds+=value;
    4b92:	80 91 17 2d 	lds	r24, 0x2D17	; 0x802d17 <globalAlarmStorage>
    4b96:	98 2f       	mov	r25, r24
    4b98:	8d 81       	ldd	r24, Y+5	; 0x05
    4b9a:	89 0f       	add	r24, r25
    4b9c:	80 93 17 2d 	sts	0x2D17, r24	; 0x802d17 <globalAlarmStorage>
			if(globalAlarmStorage.seconds < 0) globalAlarmStorage.seconds = 59;
    4ba0:	80 91 17 2d 	lds	r24, 0x2D17	; 0x802d17 <globalAlarmStorage>
    4ba4:	88 23       	and	r24, r24
    4ba6:	1c f4       	brge	.+6      	; 0x4bae <changeValue+0x14e>
    4ba8:	8b e3       	ldi	r24, 0x3B	; 59
    4baa:	80 93 17 2d 	sts	0x2D17, r24	; 0x802d17 <globalAlarmStorage>
			if(globalAlarmStorage.seconds > 59) globalAlarmStorage.seconds = 0;
    4bae:	80 91 17 2d 	lds	r24, 0x2D17	; 0x802d17 <globalAlarmStorage>
    4bb2:	8c 33       	cpi	r24, 0x3C	; 60
    4bb4:	6c f0       	brlt	.+26     	; 0x4bd0 <changeValue+0x170>
    4bb6:	10 92 17 2d 	sts	0x2D17, r1	; 0x802d17 <globalAlarmStorage>
			break;
    4bba:	0a c0       	rjmp	.+20     	; 0x4bd0 <changeValue+0x170>
		switch(timeType) {
			case HOURS:
			globalTimeStorage.hours+=value;
			if(globalTimeStorage.hours < 0) globalTimeStorage.hours = 23;
			if(globalTimeStorage.hours > 23) globalTimeStorage.hours = 0;
			break;
    4bbc:	00 00       	nop
    4bbe:	09 c0       	rjmp	.+18     	; 0x4bd2 <changeValue+0x172>
			case MINUTES:
			globalTimeStorage.minutes+=value;
			if(globalTimeStorage.minutes < 0) globalTimeStorage.minutes = 59;
			if(globalTimeStorage.minutes > 59) globalTimeStorage.minutes = 0;
			break;
    4bc0:	00 00       	nop
    4bc2:	07 c0       	rjmp	.+14     	; 0x4bd2 <changeValue+0x172>
			case SECONDS:
			globalTimeStorage.seconds+=value;
			if(globalTimeStorage.seconds < 0) globalTimeStorage.seconds = 59;
			if(globalTimeStorage.seconds > 59) globalTimeStorage.seconds = 0;
			break;
    4bc4:	00 00       	nop
    4bc6:	05 c0       	rjmp	.+10     	; 0x4bd2 <changeValue+0x172>
		switch(timeType) {
			case HOURS:
			globalAlarmStorage.hours+=value;
			if(globalAlarmStorage.hours < 0) globalAlarmStorage.hours = 23;
			if(globalAlarmStorage.hours > 23) globalAlarmStorage.hours = 0;
			break;
    4bc8:	00 00       	nop
    4bca:	03 c0       	rjmp	.+6      	; 0x4bd2 <changeValue+0x172>
			case MINUTES:
			globalAlarmStorage.minutes+=value;
			if(globalAlarmStorage.minutes < 0) globalAlarmStorage.minutes = 59;
			if(globalAlarmStorage.minutes > 59) globalAlarmStorage.minutes = 0;
			break;
    4bcc:	00 00       	nop
    4bce:	01 c0       	rjmp	.+2      	; 0x4bd2 <changeValue+0x172>
			case SECONDS:
			globalAlarmStorage.seconds+=value;
			if(globalAlarmStorage.seconds < 0) globalAlarmStorage.seconds = 59;
			if(globalAlarmStorage.seconds > 59) globalAlarmStorage.seconds = 0;
			break;
    4bd0:	00 00       	nop
		}
	}
}
    4bd2:	00 00       	nop
    4bd4:	25 96       	adiw	r28, 0x05	; 5
    4bd6:	cd bf       	out	0x3d, r28	; 61
    4bd8:	de bf       	out	0x3e, r29	; 62
    4bda:	df 91       	pop	r29
    4bdc:	cf 91       	pop	r28
    4bde:	08 95       	ret

00004be0 <checkIfAlarm>:

bool checkIfAlarm() {
    4be0:	cf 93       	push	r28
    4be2:	df 93       	push	r29
    4be4:	cd b7       	in	r28, 0x3d	; 61
    4be6:	de b7       	in	r29, 0x3e	; 62
	if((globalAlarmStorage.hours == globalTimeStorage.hours) &&
    4be8:	90 91 19 2d 	lds	r25, 0x2D19	; 0x802d19 <globalAlarmStorage+0x2>
    4bec:	80 91 16 2d 	lds	r24, 0x2D16	; 0x802d16 <globalTimeStorage+0x2>
    4bf0:	98 17       	cp	r25, r24
    4bf2:	71 f4       	brne	.+28     	; 0x4c10 <checkIfAlarm+0x30>
	(globalAlarmStorage.minutes == globalTimeStorage.minutes) &&
    4bf4:	90 91 18 2d 	lds	r25, 0x2D18	; 0x802d18 <globalAlarmStorage+0x1>
    4bf8:	80 91 15 2d 	lds	r24, 0x2D15	; 0x802d15 <globalTimeStorage+0x1>
		}
	}
}

bool checkIfAlarm() {
	if((globalAlarmStorage.hours == globalTimeStorage.hours) &&
    4bfc:	98 17       	cp	r25, r24
    4bfe:	41 f4       	brne	.+16     	; 0x4c10 <checkIfAlarm+0x30>
	(globalAlarmStorage.minutes == globalTimeStorage.minutes) &&
	(globalAlarmStorage.seconds == globalTimeStorage.seconds)) {
    4c00:	90 91 17 2d 	lds	r25, 0x2D17	; 0x802d17 <globalAlarmStorage>
    4c04:	80 91 14 2d 	lds	r24, 0x2D14	; 0x802d14 <globalTimeStorage>
	}
}

bool checkIfAlarm() {
	if((globalAlarmStorage.hours == globalTimeStorage.hours) &&
	(globalAlarmStorage.minutes == globalTimeStorage.minutes) &&
    4c08:	98 17       	cp	r25, r24
    4c0a:	11 f4       	brne	.+4      	; 0x4c10 <checkIfAlarm+0x30>
	(globalAlarmStorage.seconds == globalTimeStorage.seconds)) {
		return true;
    4c0c:	81 e0       	ldi	r24, 0x01	; 1
    4c0e:	01 c0       	rjmp	.+2      	; 0x4c12 <checkIfAlarm+0x32>
		} else {
		return false;
    4c10:	80 e0       	ldi	r24, 0x00	; 0
	}
    4c12:	df 91       	pop	r29
    4c14:	cf 91       	pop	r28
    4c16:	08 95       	ret

00004c18 <__vector_108>:
    4c18:	1f 92       	push	r1
    4c1a:	0f 92       	push	r0
    4c1c:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x7de03f>
    4c20:	0f 92       	push	r0
    4c22:	11 24       	eor	r1, r1
    4c24:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x7de03b>
    4c28:	0f 92       	push	r0
    4c2a:	2f 93       	push	r18
    4c2c:	3f 93       	push	r19
    4c2e:	4f 93       	push	r20
    4c30:	5f 93       	push	r21
    4c32:	6f 93       	push	r22
    4c34:	7f 93       	push	r23
    4c36:	8f 93       	push	r24
    4c38:	9f 93       	push	r25
    4c3a:	af 93       	push	r26
    4c3c:	bf 93       	push	r27
    4c3e:	ef 93       	push	r30
    4c40:	ff 93       	push	r31
    4c42:	cf 93       	push	r28
    4c44:	df 93       	push	r29
    4c46:	1f 92       	push	r1
    4c48:	cd b7       	in	r28, 0x3d	; 61
    4c4a:	de b7       	in	r29, 0x3e	; 62
    4c4c:	19 82       	std	Y+1, r1	; 0x01
    4c4e:	80 91 50 2d 	lds	r24, 0x2D50	; 0x802d50 <egDisplayTiming>
    4c52:	90 91 51 2d 	lds	r25, 0x2D51	; 0x802d51 <egDisplayTiming+0x1>
    4c56:	9e 01       	movw	r18, r28
    4c58:	2f 5f       	subi	r18, 0xFF	; 255
    4c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    4c5c:	41 e0       	ldi	r20, 0x01	; 1
    4c5e:	50 e0       	ldi	r21, 0x00	; 0
    4c60:	60 e0       	ldi	r22, 0x00	; 0
    4c62:	70 e0       	ldi	r23, 0x00	; 0
    4c64:	0e 94 ee 06 	call	0xddc	; 0xddc <xEventGroupSetBitsFromISR>
    4c68:	60 e0       	ldi	r22, 0x00	; 0
    4c6a:	80 e0       	ldi	r24, 0x00	; 0
    4c6c:	9b e0       	ldi	r25, 0x0B	; 11
    4c6e:	0e 94 3d 03 	call	0x67a	; 0x67a <TC0_ConfigClockSource>
    4c72:	80 e0       	ldi	r24, 0x00	; 0
    4c74:	9b e0       	ldi	r25, 0x0B	; 11
    4c76:	fc 01       	movw	r30, r24
    4c78:	16 82       	std	Z+6, r1	; 0x06
    4c7a:	00 00       	nop
    4c7c:	0f 90       	pop	r0
    4c7e:	df 91       	pop	r29
    4c80:	cf 91       	pop	r28
    4c82:	ff 91       	pop	r31
    4c84:	ef 91       	pop	r30
    4c86:	bf 91       	pop	r27
    4c88:	af 91       	pop	r26
    4c8a:	9f 91       	pop	r25
    4c8c:	8f 91       	pop	r24
    4c8e:	7f 91       	pop	r23
    4c90:	6f 91       	pop	r22
    4c92:	5f 91       	pop	r21
    4c94:	4f 91       	pop	r20
    4c96:	3f 91       	pop	r19
    4c98:	2f 91       	pop	r18
    4c9a:	0f 90       	pop	r0
    4c9c:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x7de03b>
    4ca0:	0f 90       	pop	r0
    4ca2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x7de03f>
    4ca6:	0f 90       	pop	r0
    4ca8:	1f 90       	pop	r1
    4caa:	18 95       	reti

00004cac <delayUS>:
    4cac:	cf 92       	push	r12
    4cae:	df 92       	push	r13
    4cb0:	ef 92       	push	r14
    4cb2:	ff 92       	push	r15
    4cb4:	0f 93       	push	r16
    4cb6:	cf 93       	push	r28
    4cb8:	df 93       	push	r29
    4cba:	00 d0       	rcall	.+0      	; 0x4cbc <delayUS+0x10>
    4cbc:	1f 92       	push	r1
    4cbe:	cd b7       	in	r28, 0x3d	; 61
    4cc0:	de b7       	in	r29, 0x3e	; 62
    4cc2:	69 83       	std	Y+1, r22	; 0x01
    4cc4:	7a 83       	std	Y+2, r23	; 0x02
    4cc6:	8b 83       	std	Y+3, r24	; 0x03
    4cc8:	9c 83       	std	Y+4, r25	; 0x04
    4cca:	89 81       	ldd	r24, Y+1	; 0x01
    4ccc:	9a 81       	ldd	r25, Y+2	; 0x02
    4cce:	ab 81       	ldd	r26, Y+3	; 0x03
    4cd0:	bc 81       	ldd	r27, Y+4	; 0x04
    4cd2:	02 97       	sbiw	r24, 0x02	; 2
    4cd4:	a1 05       	cpc	r26, r1
    4cd6:	b1 05       	cpc	r27, r1
    4cd8:	40 f4       	brcc	.+16     	; 0x4cea <delayUS+0x3e>
    4cda:	82 e0       	ldi	r24, 0x02	; 2
    4cdc:	90 e0       	ldi	r25, 0x00	; 0
    4cde:	a0 e0       	ldi	r26, 0x00	; 0
    4ce0:	b0 e0       	ldi	r27, 0x00	; 0
    4ce2:	89 83       	std	Y+1, r24	; 0x01
    4ce4:	9a 83       	std	Y+2, r25	; 0x02
    4ce6:	ab 83       	std	Y+3, r26	; 0x03
    4ce8:	bc 83       	std	Y+4, r27	; 0x04
    4cea:	80 e0       	ldi	r24, 0x00	; 0
    4cec:	9b e0       	ldi	r25, 0x0B	; 11
    4cee:	21 e0       	ldi	r18, 0x01	; 1
    4cf0:	fc 01       	movw	r30, r24
    4cf2:	26 83       	std	Z+6, r18	; 0x06
    4cf4:	80 e0       	ldi	r24, 0x00	; 0
    4cf6:	9b e0       	ldi	r25, 0x0B	; 11
    4cf8:	fc 01       	movw	r30, r24
    4cfa:	10 a2       	std	Z+32, r1	; 0x20
    4cfc:	11 a2       	std	Z+33, r1	; 0x21
    4cfe:	60 e0       	ldi	r22, 0x00	; 0
    4d00:	80 e0       	ldi	r24, 0x00	; 0
    4d02:	9b e0       	ldi	r25, 0x0B	; 11
    4d04:	0e 94 59 03 	call	0x6b2	; 0x6b2 <TC0_ConfigWGM>
    4d08:	89 81       	ldd	r24, Y+1	; 0x01
    4d0a:	9a 81       	ldd	r25, Y+2	; 0x02
    4d0c:	ab 81       	ldd	r26, Y+3	; 0x03
    4d0e:	bc 81       	ldd	r27, Y+4	; 0x04
    4d10:	8e 3f       	cpi	r24, 0xFE	; 254
    4d12:	9f 4f       	sbci	r25, 0xFF	; 255
    4d14:	a1 05       	cpc	r26, r1
    4d16:	b1 05       	cpc	r27, r1
    4d18:	98 f4       	brcc	.+38     	; 0x4d40 <delayUS+0x94>
    4d1a:	20 e0       	ldi	r18, 0x00	; 0
    4d1c:	3b e0       	ldi	r19, 0x0B	; 11
    4d1e:	89 81       	ldd	r24, Y+1	; 0x01
    4d20:	9a 81       	ldd	r25, Y+2	; 0x02
    4d22:	ab 81       	ldd	r26, Y+3	; 0x03
    4d24:	bc 81       	ldd	r27, Y+4	; 0x04
    4d26:	b6 95       	lsr	r27
    4d28:	a7 95       	ror	r26
    4d2a:	97 95       	ror	r25
    4d2c:	87 95       	ror	r24
    4d2e:	f9 01       	movw	r30, r18
    4d30:	86 a3       	std	Z+38, r24	; 0x26
    4d32:	97 a3       	std	Z+39, r25	; 0x27
    4d34:	65 e0       	ldi	r22, 0x05	; 5
    4d36:	80 e0       	ldi	r24, 0x00	; 0
    4d38:	9b e0       	ldi	r25, 0x0B	; 11
    4d3a:	0e 94 3d 03 	call	0x67a	; 0x67a <TC0_ConfigClockSource>
    4d3e:	1f c0       	rjmp	.+62     	; 0x4d7e <delayUS+0xd2>
    4d40:	89 81       	ldd	r24, Y+1	; 0x01
    4d42:	9a 81       	ldd	r25, Y+2	; 0x02
    4d44:	ab 81       	ldd	r26, Y+3	; 0x03
    4d46:	bc 81       	ldd	r27, Y+4	; 0x04
    4d48:	80 34       	cpi	r24, 0x40	; 64
    4d4a:	92 44       	sbci	r25, 0x42	; 66
    4d4c:	af 40       	sbci	r26, 0x0F	; 15
    4d4e:	b1 05       	cpc	r27, r1
    4d50:	b0 f4       	brcc	.+44     	; 0x4d7e <delayUS+0xd2>
    4d52:	20 e0       	ldi	r18, 0x00	; 0
    4d54:	3b e0       	ldi	r19, 0x0B	; 11
    4d56:	89 81       	ldd	r24, Y+1	; 0x01
    4d58:	9a 81       	ldd	r25, Y+2	; 0x02
    4d5a:	ab 81       	ldd	r26, Y+3	; 0x03
    4d5c:	bc 81       	ldd	r27, Y+4	; 0x04
    4d5e:	68 94       	set
    4d60:	14 f8       	bld	r1, 4
    4d62:	b6 95       	lsr	r27
    4d64:	a7 95       	ror	r26
    4d66:	97 95       	ror	r25
    4d68:	87 95       	ror	r24
    4d6a:	16 94       	lsr	r1
    4d6c:	d1 f7       	brne	.-12     	; 0x4d62 <delayUS+0xb6>
    4d6e:	f9 01       	movw	r30, r18
    4d70:	86 a3       	std	Z+38, r24	; 0x26
    4d72:	97 a3       	std	Z+39, r25	; 0x27
    4d74:	67 e0       	ldi	r22, 0x07	; 7
    4d76:	80 e0       	ldi	r24, 0x00	; 0
    4d78:	9b e0       	ldi	r25, 0x0B	; 11
    4d7a:	0e 94 3d 03 	call	0x67a	; 0x67a <TC0_ConfigClockSource>
    4d7e:	80 91 50 2d 	lds	r24, 0x2D50	; 0x802d50 <egDisplayTiming>
    4d82:	90 91 51 2d 	lds	r25, 0x2D51	; 0x802d51 <egDisplayTiming+0x1>
    4d86:	0f 2e       	mov	r0, r31
    4d88:	f4 ef       	ldi	r31, 0xF4	; 244
    4d8a:	cf 2e       	mov	r12, r31
    4d8c:	dd 24       	eor	r13, r13
    4d8e:	d3 94       	inc	r13
    4d90:	e1 2c       	mov	r14, r1
    4d92:	f1 2c       	mov	r15, r1
    4d94:	f0 2d       	mov	r31, r0
    4d96:	00 e0       	ldi	r16, 0x00	; 0
    4d98:	21 e0       	ldi	r18, 0x01	; 1
    4d9a:	41 e0       	ldi	r20, 0x01	; 1
    4d9c:	50 e0       	ldi	r21, 0x00	; 0
    4d9e:	60 e0       	ldi	r22, 0x00	; 0
    4da0:	70 e0       	ldi	r23, 0x00	; 0
    4da2:	0e 94 fe 03 	call	0x7fc	; 0x7fc <xEventGroupWaitBits>
    4da6:	00 00       	nop
    4da8:	24 96       	adiw	r28, 0x04	; 4
    4daa:	cd bf       	out	0x3d, r28	; 61
    4dac:	de bf       	out	0x3e, r29	; 62
    4dae:	df 91       	pop	r29
    4db0:	cf 91       	pop	r28
    4db2:	0f 91       	pop	r16
    4db4:	ff 90       	pop	r15
    4db6:	ef 90       	pop	r14
    4db8:	df 90       	pop	r13
    4dba:	cf 90       	pop	r12
    4dbc:	08 95       	ret

00004dbe <setPort>:
    4dbe:	cf 93       	push	r28
    4dc0:	df 93       	push	r29
    4dc2:	1f 92       	push	r1
    4dc4:	cd b7       	in	r28, 0x3d	; 61
    4dc6:	de b7       	in	r29, 0x3e	; 62
    4dc8:	89 83       	std	Y+1, r24	; 0x01
    4dca:	89 81       	ldd	r24, Y+1	; 0x01
    4dcc:	8f 70       	andi	r24, 0x0F	; 15
    4dce:	89 83       	std	Y+1, r24	; 0x01
    4dd0:	89 81       	ldd	r24, Y+1	; 0x01
    4dd2:	82 95       	swap	r24
    4dd4:	80 7f       	andi	r24, 0xF0	; 240
    4dd6:	89 83       	std	Y+1, r24	; 0x01
    4dd8:	80 e0       	ldi	r24, 0x00	; 0
    4dda:	96 e0       	ldi	r25, 0x06	; 6
    4ddc:	20 e0       	ldi	r18, 0x00	; 0
    4dde:	36 e0       	ldi	r19, 0x06	; 6
    4de0:	f9 01       	movw	r30, r18
    4de2:	34 81       	ldd	r19, Z+4	; 0x04
    4de4:	29 81       	ldd	r18, Y+1	; 0x01
    4de6:	2f 60       	ori	r18, 0x0F	; 15
    4de8:	23 23       	and	r18, r19
    4dea:	fc 01       	movw	r30, r24
    4dec:	24 83       	std	Z+4, r18	; 0x04
    4dee:	80 e0       	ldi	r24, 0x00	; 0
    4df0:	96 e0       	ldi	r25, 0x06	; 6
    4df2:	20 e0       	ldi	r18, 0x00	; 0
    4df4:	36 e0       	ldi	r19, 0x06	; 6
    4df6:	f9 01       	movw	r30, r18
    4df8:	34 81       	ldd	r19, Z+4	; 0x04
    4dfa:	29 81       	ldd	r18, Y+1	; 0x01
    4dfc:	23 2b       	or	r18, r19
    4dfe:	fc 01       	movw	r30, r24
    4e00:	24 83       	std	Z+4, r18	; 0x04
    4e02:	00 00       	nop
    4e04:	0f 90       	pop	r0
    4e06:	df 91       	pop	r29
    4e08:	cf 91       	pop	r28
    4e0a:	08 95       	ret

00004e0c <setRS>:
    4e0c:	cf 93       	push	r28
    4e0e:	df 93       	push	r29
    4e10:	1f 92       	push	r1
    4e12:	cd b7       	in	r28, 0x3d	; 61
    4e14:	de b7       	in	r29, 0x3e	; 62
    4e16:	89 83       	std	Y+1, r24	; 0x01
    4e18:	89 81       	ldd	r24, Y+1	; 0x01
    4e1a:	88 23       	and	r24, r24
    4e1c:	31 f0       	breq	.+12     	; 0x4e2a <setRS+0x1e>
    4e1e:	80 e6       	ldi	r24, 0x60	; 96
    4e20:	96 e0       	ldi	r25, 0x06	; 6
    4e22:	21 e0       	ldi	r18, 0x01	; 1
    4e24:	fc 01       	movw	r30, r24
    4e26:	25 83       	std	Z+5, r18	; 0x05
    4e28:	05 c0       	rjmp	.+10     	; 0x4e34 <setRS+0x28>
    4e2a:	80 e6       	ldi	r24, 0x60	; 96
    4e2c:	96 e0       	ldi	r25, 0x06	; 6
    4e2e:	21 e0       	ldi	r18, 0x01	; 1
    4e30:	fc 01       	movw	r30, r24
    4e32:	26 83       	std	Z+6, r18	; 0x06
    4e34:	00 00       	nop
    4e36:	0f 90       	pop	r0
    4e38:	df 91       	pop	r29
    4e3a:	cf 91       	pop	r28
    4e3c:	08 95       	ret

00004e3e <setRW>:
    4e3e:	cf 93       	push	r28
    4e40:	df 93       	push	r29
    4e42:	1f 92       	push	r1
    4e44:	cd b7       	in	r28, 0x3d	; 61
    4e46:	de b7       	in	r29, 0x3e	; 62
    4e48:	89 83       	std	Y+1, r24	; 0x01
    4e4a:	89 81       	ldd	r24, Y+1	; 0x01
    4e4c:	88 23       	and	r24, r24
    4e4e:	31 f0       	breq	.+12     	; 0x4e5c <setRW+0x1e>
    4e50:	80 e6       	ldi	r24, 0x60	; 96
    4e52:	96 e0       	ldi	r25, 0x06	; 6
    4e54:	22 e0       	ldi	r18, 0x02	; 2
    4e56:	fc 01       	movw	r30, r24
    4e58:	25 83       	std	Z+5, r18	; 0x05
    4e5a:	05 c0       	rjmp	.+10     	; 0x4e66 <setRW+0x28>
    4e5c:	80 e6       	ldi	r24, 0x60	; 96
    4e5e:	96 e0       	ldi	r25, 0x06	; 6
    4e60:	22 e0       	ldi	r18, 0x02	; 2
    4e62:	fc 01       	movw	r30, r24
    4e64:	26 83       	std	Z+6, r18	; 0x06
    4e66:	00 00       	nop
    4e68:	0f 90       	pop	r0
    4e6a:	df 91       	pop	r29
    4e6c:	cf 91       	pop	r28
    4e6e:	08 95       	ret

00004e70 <setE>:
    4e70:	cf 93       	push	r28
    4e72:	df 93       	push	r29
    4e74:	1f 92       	push	r1
    4e76:	cd b7       	in	r28, 0x3d	; 61
    4e78:	de b7       	in	r29, 0x3e	; 62
    4e7a:	89 83       	std	Y+1, r24	; 0x01
    4e7c:	89 81       	ldd	r24, Y+1	; 0x01
    4e7e:	88 23       	and	r24, r24
    4e80:	31 f0       	breq	.+12     	; 0x4e8e <setE+0x1e>
    4e82:	80 e6       	ldi	r24, 0x60	; 96
    4e84:	96 e0       	ldi	r25, 0x06	; 6
    4e86:	24 e0       	ldi	r18, 0x04	; 4
    4e88:	fc 01       	movw	r30, r24
    4e8a:	25 83       	std	Z+5, r18	; 0x05
    4e8c:	05 c0       	rjmp	.+10     	; 0x4e98 <setE+0x28>
    4e8e:	80 e6       	ldi	r24, 0x60	; 96
    4e90:	96 e0       	ldi	r25, 0x06	; 6
    4e92:	24 e0       	ldi	r18, 0x04	; 4
    4e94:	fc 01       	movw	r30, r24
    4e96:	26 83       	std	Z+6, r18	; 0x06
    4e98:	00 00       	nop
    4e9a:	0f 90       	pop	r0
    4e9c:	df 91       	pop	r29
    4e9e:	cf 91       	pop	r28
    4ea0:	08 95       	ret

00004ea2 <Nybble>:
    4ea2:	cf 93       	push	r28
    4ea4:	df 93       	push	r29
    4ea6:	cd b7       	in	r28, 0x3d	; 61
    4ea8:	de b7       	in	r29, 0x3e	; 62
    4eaa:	81 e0       	ldi	r24, 0x01	; 1
    4eac:	0e 94 38 27 	call	0x4e70	; 0x4e70 <setE>
    4eb0:	61 e0       	ldi	r22, 0x01	; 1
    4eb2:	70 e0       	ldi	r23, 0x00	; 0
    4eb4:	80 e0       	ldi	r24, 0x00	; 0
    4eb6:	90 e0       	ldi	r25, 0x00	; 0
    4eb8:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    4ebc:	80 e0       	ldi	r24, 0x00	; 0
    4ebe:	0e 94 38 27 	call	0x4e70	; 0x4e70 <setE>
    4ec2:	00 00       	nop
    4ec4:	df 91       	pop	r29
    4ec6:	cf 91       	pop	r28
    4ec8:	08 95       	ret

00004eca <command>:
    4eca:	cf 93       	push	r28
    4ecc:	df 93       	push	r29
    4ece:	1f 92       	push	r1
    4ed0:	cd b7       	in	r28, 0x3d	; 61
    4ed2:	de b7       	in	r29, 0x3e	; 62
    4ed4:	89 83       	std	Y+1, r24	; 0x01
    4ed6:	89 81       	ldd	r24, Y+1	; 0x01
    4ed8:	82 95       	swap	r24
    4eda:	8f 70       	andi	r24, 0x0F	; 15
    4edc:	0e 94 df 26 	call	0x4dbe	; 0x4dbe <setPort>
    4ee0:	80 e0       	ldi	r24, 0x00	; 0
    4ee2:	0e 94 06 27 	call	0x4e0c	; 0x4e0c <setRS>
    4ee6:	80 e0       	ldi	r24, 0x00	; 0
    4ee8:	0e 94 1f 27 	call	0x4e3e	; 0x4e3e <setRW>
    4eec:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    4ef0:	89 81       	ldd	r24, Y+1	; 0x01
    4ef2:	8f 70       	andi	r24, 0x0F	; 15
    4ef4:	0e 94 df 26 	call	0x4dbe	; 0x4dbe <setPort>
    4ef8:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    4efc:	00 00       	nop
    4efe:	0f 90       	pop	r0
    4f00:	df 91       	pop	r29
    4f02:	cf 91       	pop	r28
    4f04:	08 95       	ret

00004f06 <write>:
    4f06:	cf 93       	push	r28
    4f08:	df 93       	push	r29
    4f0a:	1f 92       	push	r1
    4f0c:	cd b7       	in	r28, 0x3d	; 61
    4f0e:	de b7       	in	r29, 0x3e	; 62
    4f10:	89 83       	std	Y+1, r24	; 0x01
    4f12:	89 81       	ldd	r24, Y+1	; 0x01
    4f14:	82 95       	swap	r24
    4f16:	8f 70       	andi	r24, 0x0F	; 15
    4f18:	0e 94 df 26 	call	0x4dbe	; 0x4dbe <setPort>
    4f1c:	81 e0       	ldi	r24, 0x01	; 1
    4f1e:	0e 94 06 27 	call	0x4e0c	; 0x4e0c <setRS>
    4f22:	80 e0       	ldi	r24, 0x00	; 0
    4f24:	0e 94 1f 27 	call	0x4e3e	; 0x4e3e <setRW>
    4f28:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    4f2c:	89 81       	ldd	r24, Y+1	; 0x01
    4f2e:	8f 70       	andi	r24, 0x0F	; 15
    4f30:	0e 94 df 26 	call	0x4dbe	; 0x4dbe <setPort>
    4f34:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    4f38:	00 00       	nop
    4f3a:	0f 90       	pop	r0
    4f3c:	df 91       	pop	r29
    4f3e:	cf 91       	pop	r28
    4f40:	08 95       	ret

00004f42 <vInitDisplay>:
    4f42:	ef 92       	push	r14
    4f44:	ff 92       	push	r15
    4f46:	0f 93       	push	r16
    4f48:	cf 93       	push	r28
    4f4a:	df 93       	push	r29
    4f4c:	cd b7       	in	r28, 0x3d	; 61
    4f4e:	de b7       	in	r29, 0x3e	; 62
    4f50:	80 e0       	ldi	r24, 0x00	; 0
    4f52:	96 e0       	ldi	r25, 0x06	; 6
    4f54:	20 e1       	ldi	r18, 0x10	; 16
    4f56:	fc 01       	movw	r30, r24
    4f58:	21 83       	std	Z+1, r18	; 0x01
    4f5a:	80 e0       	ldi	r24, 0x00	; 0
    4f5c:	96 e0       	ldi	r25, 0x06	; 6
    4f5e:	20 e2       	ldi	r18, 0x20	; 32
    4f60:	fc 01       	movw	r30, r24
    4f62:	21 83       	std	Z+1, r18	; 0x01
    4f64:	80 e0       	ldi	r24, 0x00	; 0
    4f66:	96 e0       	ldi	r25, 0x06	; 6
    4f68:	20 e4       	ldi	r18, 0x40	; 64
    4f6a:	fc 01       	movw	r30, r24
    4f6c:	21 83       	std	Z+1, r18	; 0x01
    4f6e:	80 e0       	ldi	r24, 0x00	; 0
    4f70:	96 e0       	ldi	r25, 0x06	; 6
    4f72:	20 e8       	ldi	r18, 0x80	; 128
    4f74:	fc 01       	movw	r30, r24
    4f76:	21 83       	std	Z+1, r18	; 0x01
    4f78:	80 e6       	ldi	r24, 0x60	; 96
    4f7a:	96 e0       	ldi	r25, 0x06	; 6
    4f7c:	21 e0       	ldi	r18, 0x01	; 1
    4f7e:	fc 01       	movw	r30, r24
    4f80:	21 83       	std	Z+1, r18	; 0x01
    4f82:	80 e6       	ldi	r24, 0x60	; 96
    4f84:	96 e0       	ldi	r25, 0x06	; 6
    4f86:	22 e0       	ldi	r18, 0x02	; 2
    4f88:	fc 01       	movw	r30, r24
    4f8a:	21 83       	std	Z+1, r18	; 0x01
    4f8c:	80 e6       	ldi	r24, 0x60	; 96
    4f8e:	96 e0       	ldi	r25, 0x06	; 6
    4f90:	24 e0       	ldi	r18, 0x04	; 4
    4f92:	fc 01       	movw	r30, r24
    4f94:	21 83       	std	Z+1, r18	; 0x01
    4f96:	80 e0       	ldi	r24, 0x00	; 0
    4f98:	96 e0       	ldi	r25, 0x06	; 6
    4f9a:	20 e0       	ldi	r18, 0x00	; 0
    4f9c:	36 e0       	ldi	r19, 0x06	; 6
    4f9e:	f9 01       	movw	r30, r18
    4fa0:	24 81       	ldd	r18, Z+4	; 0x04
    4fa2:	2f 70       	andi	r18, 0x0F	; 15
    4fa4:	fc 01       	movw	r30, r24
    4fa6:	24 83       	std	Z+4, r18	; 0x04
    4fa8:	80 e6       	ldi	r24, 0x60	; 96
    4faa:	96 e0       	ldi	r25, 0x06	; 6
    4fac:	20 e6       	ldi	r18, 0x60	; 96
    4fae:	36 e0       	ldi	r19, 0x06	; 6
    4fb0:	f9 01       	movw	r30, r18
    4fb2:	24 81       	ldd	r18, Z+4	; 0x04
    4fb4:	28 7f       	andi	r18, 0xF8	; 248
    4fb6:	fc 01       	movw	r30, r24
    4fb8:	24 83       	std	Z+4, r18	; 0x04
    4fba:	40 e0       	ldi	r20, 0x00	; 0
    4fbc:	66 e1       	ldi	r22, 0x16	; 22
    4fbe:	88 e0       	ldi	r24, 0x08	; 8
    4fc0:	0e 94 e7 0c 	call	0x19ce	; 0x19ce <xQueueGenericCreate>
    4fc4:	80 93 4e 2d 	sts	0x2D4E, r24	; 0x802d4e <displayLineQueue>
    4fc8:	90 93 4f 2d 	sts	0x2D4F, r25	; 0x802d4f <displayLineQueue+0x1>
    4fcc:	0e 94 db 03 	call	0x7b6	; 0x7b6 <xEventGroupCreate>
    4fd0:	80 93 50 2d 	sts	0x2D50, r24	; 0x802d50 <egDisplayTiming>
    4fd4:	90 93 51 2d 	sts	0x2D51, r25	; 0x802d51 <egDisplayTiming+0x1>
    4fd8:	e1 2c       	mov	r14, r1
    4fda:	f1 2c       	mov	r15, r1
    4fdc:	01 e0       	ldi	r16, 0x01	; 1
    4fde:	20 e0       	ldi	r18, 0x00	; 0
    4fe0:	30 e0       	ldi	r19, 0x00	; 0
    4fe2:	4e e5       	ldi	r20, 0x5E	; 94
    4fe4:	51 e0       	ldi	r21, 0x01	; 1
    4fe6:	61 eb       	ldi	r22, 0xB1	; 177
    4fe8:	70 e2       	ldi	r23, 0x20	; 32
    4fea:	8f e9       	ldi	r24, 0x9F	; 159
    4fec:	98 e2       	ldi	r25, 0x28	; 40
    4fee:	0e 94 68 11 	call	0x22d0	; 0x22d0 <xTaskCreate>
    4ff2:	00 00       	nop
    4ff4:	df 91       	pop	r29
    4ff6:	cf 91       	pop	r28
    4ff8:	0f 91       	pop	r16
    4ffa:	ff 90       	pop	r15
    4ffc:	ef 90       	pop	r14
    4ffe:	08 95       	ret

00005000 <_displaySetPos>:
    5000:	cf 93       	push	r28
    5002:	df 93       	push	r29
    5004:	00 d0       	rcall	.+0      	; 0x5006 <_displaySetPos+0x6>
    5006:	1f 92       	push	r1
    5008:	cd b7       	in	r28, 0x3d	; 61
    500a:	de b7       	in	r29, 0x3e	; 62
    500c:	89 83       	std	Y+1, r24	; 0x01
    500e:	9a 83       	std	Y+2, r25	; 0x02
    5010:	6b 83       	std	Y+3, r22	; 0x03
    5012:	7c 83       	std	Y+4, r23	; 0x04
    5014:	89 81       	ldd	r24, Y+1	; 0x01
    5016:	9a 81       	ldd	r25, Y+2	; 0x02
    5018:	81 30       	cpi	r24, 0x01	; 1
    501a:	91 05       	cpc	r25, r1
    501c:	89 f0       	breq	.+34     	; 0x5040 <_displaySetPos+0x40>
    501e:	82 30       	cpi	r24, 0x02	; 2
    5020:	91 05       	cpc	r25, r1
    5022:	1c f4       	brge	.+6      	; 0x502a <_displaySetPos+0x2a>
    5024:	89 2b       	or	r24, r25
    5026:	39 f0       	breq	.+14     	; 0x5036 <_displaySetPos+0x36>
    5028:	1a c0       	rjmp	.+52     	; 0x505e <_displaySetPos+0x5e>
    502a:	82 30       	cpi	r24, 0x02	; 2
    502c:	91 05       	cpc	r25, r1
    502e:	69 f0       	breq	.+26     	; 0x504a <_displaySetPos+0x4a>
    5030:	03 97       	sbiw	r24, 0x03	; 3
    5032:	81 f0       	breq	.+32     	; 0x5054 <_displaySetPos+0x54>
    5034:	14 c0       	rjmp	.+40     	; 0x505e <_displaySetPos+0x5e>
    5036:	8b 81       	ldd	r24, Y+3	; 0x03
    5038:	80 58       	subi	r24, 0x80	; 128
    503a:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    503e:	0f c0       	rjmp	.+30     	; 0x505e <_displaySetPos+0x5e>
    5040:	8b 81       	ldd	r24, Y+3	; 0x03
    5042:	80 54       	subi	r24, 0x40	; 64
    5044:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    5048:	0a c0       	rjmp	.+20     	; 0x505e <_displaySetPos+0x5e>
    504a:	8b 81       	ldd	r24, Y+3	; 0x03
    504c:	8c 56       	subi	r24, 0x6C	; 108
    504e:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    5052:	05 c0       	rjmp	.+10     	; 0x505e <_displaySetPos+0x5e>
    5054:	8b 81       	ldd	r24, Y+3	; 0x03
    5056:	8c 52       	subi	r24, 0x2C	; 44
    5058:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    505c:	00 00       	nop
    505e:	67 e2       	ldi	r22, 0x27	; 39
    5060:	70 e0       	ldi	r23, 0x00	; 0
    5062:	80 e0       	ldi	r24, 0x00	; 0
    5064:	90 e0       	ldi	r25, 0x00	; 0
    5066:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    506a:	00 00       	nop
    506c:	24 96       	adiw	r28, 0x04	; 4
    506e:	cd bf       	out	0x3d, r28	; 61
    5070:	de bf       	out	0x3e, r29	; 62
    5072:	df 91       	pop	r29
    5074:	cf 91       	pop	r28
    5076:	08 95       	ret

00005078 <_displayWriteChar>:
    5078:	cf 93       	push	r28
    507a:	df 93       	push	r29
    507c:	1f 92       	push	r1
    507e:	cd b7       	in	r28, 0x3d	; 61
    5080:	de b7       	in	r29, 0x3e	; 62
    5082:	89 83       	std	Y+1, r24	; 0x01
    5084:	89 81       	ldd	r24, Y+1	; 0x01
    5086:	0e 94 83 27 	call	0x4f06	; 0x4f06 <write>
    508a:	6b e2       	ldi	r22, 0x2B	; 43
    508c:	70 e0       	ldi	r23, 0x00	; 0
    508e:	80 e0       	ldi	r24, 0x00	; 0
    5090:	90 e0       	ldi	r25, 0x00	; 0
    5092:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    5096:	00 00       	nop
    5098:	0f 90       	pop	r0
    509a:	df 91       	pop	r29
    509c:	cf 91       	pop	r28
    509e:	08 95       	ret

000050a0 <_displayWriteString>:
    50a0:	cf 93       	push	r28
    50a2:	df 93       	push	r29
    50a4:	00 d0       	rcall	.+0      	; 0x50a6 <_displayWriteString+0x6>
    50a6:	1f 92       	push	r1
    50a8:	cd b7       	in	r28, 0x3d	; 61
    50aa:	de b7       	in	r29, 0x3e	; 62
    50ac:	8b 83       	std	Y+3, r24	; 0x03
    50ae:	9c 83       	std	Y+4, r25	; 0x04
    50b0:	19 82       	std	Y+1, r1	; 0x01
    50b2:	1a 82       	std	Y+2, r1	; 0x02
    50b4:	19 c0       	rjmp	.+50     	; 0x50e8 <_displayWriteString+0x48>
    50b6:	89 81       	ldd	r24, Y+1	; 0x01
    50b8:	9a 81       	ldd	r25, Y+2	; 0x02
    50ba:	2b 81       	ldd	r18, Y+3	; 0x03
    50bc:	3c 81       	ldd	r19, Y+4	; 0x04
    50be:	82 0f       	add	r24, r18
    50c0:	93 1f       	adc	r25, r19
    50c2:	fc 01       	movw	r30, r24
    50c4:	80 81       	ld	r24, Z
    50c6:	88 23       	and	r24, r24
    50c8:	a1 f0       	breq	.+40     	; 0x50f2 <_displayWriteString+0x52>
    50ca:	89 81       	ldd	r24, Y+1	; 0x01
    50cc:	9a 81       	ldd	r25, Y+2	; 0x02
    50ce:	2b 81       	ldd	r18, Y+3	; 0x03
    50d0:	3c 81       	ldd	r19, Y+4	; 0x04
    50d2:	82 0f       	add	r24, r18
    50d4:	93 1f       	adc	r25, r19
    50d6:	fc 01       	movw	r30, r24
    50d8:	80 81       	ld	r24, Z
    50da:	0e 94 3c 28 	call	0x5078	; 0x5078 <_displayWriteChar>
    50de:	89 81       	ldd	r24, Y+1	; 0x01
    50e0:	9a 81       	ldd	r25, Y+2	; 0x02
    50e2:	01 96       	adiw	r24, 0x01	; 1
    50e4:	89 83       	std	Y+1, r24	; 0x01
    50e6:	9a 83       	std	Y+2, r25	; 0x02
    50e8:	89 81       	ldd	r24, Y+1	; 0x01
    50ea:	9a 81       	ldd	r25, Y+2	; 0x02
    50ec:	44 97       	sbiw	r24, 0x14	; 20
    50ee:	1c f3       	brlt	.-58     	; 0x50b6 <_displayWriteString+0x16>
    50f0:	01 c0       	rjmp	.+2      	; 0x50f4 <_displayWriteString+0x54>
    50f2:	00 00       	nop
    50f4:	00 00       	nop
    50f6:	24 96       	adiw	r28, 0x04	; 4
    50f8:	cd bf       	out	0x3d, r28	; 61
    50fa:	de bf       	out	0x3e, r29	; 62
    50fc:	df 91       	pop	r29
    50fe:	cf 91       	pop	r28
    5100:	08 95       	ret

00005102 <_displayWriteStringAtPos>:
    5102:	cf 93       	push	r28
    5104:	df 93       	push	r29
    5106:	00 d0       	rcall	.+0      	; 0x5108 <_displayWriteStringAtPos+0x6>
    5108:	00 d0       	rcall	.+0      	; 0x510a <_displayWriteStringAtPos+0x8>
    510a:	cd b7       	in	r28, 0x3d	; 61
    510c:	de b7       	in	r29, 0x3e	; 62
    510e:	89 83       	std	Y+1, r24	; 0x01
    5110:	9a 83       	std	Y+2, r25	; 0x02
    5112:	6b 83       	std	Y+3, r22	; 0x03
    5114:	7c 83       	std	Y+4, r23	; 0x04
    5116:	4d 83       	std	Y+5, r20	; 0x05
    5118:	5e 83       	std	Y+6, r21	; 0x06
    511a:	2b 81       	ldd	r18, Y+3	; 0x03
    511c:	3c 81       	ldd	r19, Y+4	; 0x04
    511e:	89 81       	ldd	r24, Y+1	; 0x01
    5120:	9a 81       	ldd	r25, Y+2	; 0x02
    5122:	b9 01       	movw	r22, r18
    5124:	0e 94 00 28 	call	0x5000	; 0x5000 <_displaySetPos>
    5128:	8d 81       	ldd	r24, Y+5	; 0x05
    512a:	9e 81       	ldd	r25, Y+6	; 0x06
    512c:	0e 94 50 28 	call	0x50a0	; 0x50a0 <_displayWriteString>
    5130:	00 00       	nop
    5132:	26 96       	adiw	r28, 0x06	; 6
    5134:	cd bf       	out	0x3d, r28	; 61
    5136:	de bf       	out	0x3e, r29	; 62
    5138:	df 91       	pop	r29
    513a:	cf 91       	pop	r28
    513c:	08 95       	ret

0000513e <vDisplayUpdateTask>:
    513e:	cf 93       	push	r28
    5140:	df 93       	push	r29
    5142:	cd b7       	in	r28, 0x3d	; 61
    5144:	de b7       	in	r29, 0x3e	; 62
    5146:	c0 57       	subi	r28, 0x70	; 112
    5148:	d1 09       	sbc	r29, r1
    514a:	cd bf       	out	0x3d, r28	; 61
    514c:	de bf       	out	0x3e, r29	; 62
    514e:	9e 01       	movw	r18, r28
    5150:	21 59       	subi	r18, 0x91	; 145
    5152:	3f 4f       	sbci	r19, 0xFF	; 255
    5154:	f9 01       	movw	r30, r18
    5156:	80 83       	st	Z, r24
    5158:	91 83       	std	Z+1, r25	; 0x01
    515a:	19 82       	std	Y+1, r1	; 0x01
    515c:	1a 82       	std	Y+2, r1	; 0x02
    515e:	1b 82       	std	Y+3, r1	; 0x03
    5160:	1c 82       	std	Y+4, r1	; 0x04
    5162:	1d 82       	std	Y+5, r1	; 0x05
    5164:	1e 82       	std	Y+6, r1	; 0x06
    5166:	26 c0       	rjmp	.+76     	; 0x51b4 <vDisplayUpdateTask+0x76>
    5168:	1f 82       	std	Y+7, r1	; 0x07
    516a:	18 86       	std	Y+8, r1	; 0x08
    516c:	1a c0       	rjmp	.+52     	; 0x51a2 <vDisplayUpdateTask+0x64>
    516e:	2d 81       	ldd	r18, Y+5	; 0x05
    5170:	3e 81       	ldd	r19, Y+6	; 0x06
    5172:	44 e1       	ldi	r20, 0x14	; 20
    5174:	42 9f       	mul	r20, r18
    5176:	c0 01       	movw	r24, r0
    5178:	43 9f       	mul	r20, r19
    517a:	90 0d       	add	r25, r0
    517c:	11 24       	eor	r1, r1
    517e:	9e 01       	movw	r18, r28
    5180:	2f 5f       	subi	r18, 0xFF	; 255
    5182:	3f 4f       	sbci	r19, 0xFF	; 255
    5184:	28 0f       	add	r18, r24
    5186:	39 1f       	adc	r19, r25
    5188:	8f 81       	ldd	r24, Y+7	; 0x07
    518a:	98 85       	ldd	r25, Y+8	; 0x08
    518c:	82 0f       	add	r24, r18
    518e:	93 1f       	adc	r25, r19
    5190:	08 96       	adiw	r24, 0x08	; 8
    5192:	20 e2       	ldi	r18, 0x20	; 32
    5194:	fc 01       	movw	r30, r24
    5196:	20 83       	st	Z, r18
    5198:	8f 81       	ldd	r24, Y+7	; 0x07
    519a:	98 85       	ldd	r25, Y+8	; 0x08
    519c:	01 96       	adiw	r24, 0x01	; 1
    519e:	8f 83       	std	Y+7, r24	; 0x07
    51a0:	98 87       	std	Y+8, r25	; 0x08
    51a2:	8f 81       	ldd	r24, Y+7	; 0x07
    51a4:	98 85       	ldd	r25, Y+8	; 0x08
    51a6:	44 97       	sbiw	r24, 0x14	; 20
    51a8:	14 f3       	brlt	.-60     	; 0x516e <vDisplayUpdateTask+0x30>
    51aa:	8d 81       	ldd	r24, Y+5	; 0x05
    51ac:	9e 81       	ldd	r25, Y+6	; 0x06
    51ae:	01 96       	adiw	r24, 0x01	; 1
    51b0:	8d 83       	std	Y+5, r24	; 0x05
    51b2:	9e 83       	std	Y+6, r25	; 0x06
    51b4:	8d 81       	ldd	r24, Y+5	; 0x05
    51b6:	9e 81       	ldd	r25, Y+6	; 0x06
    51b8:	04 97       	sbiw	r24, 0x04	; 4
    51ba:	b4 f2       	brlt	.-84     	; 0x5168 <vDisplayUpdateTask+0x2a>
    51bc:	60 e4       	ldi	r22, 0x40	; 64
    51be:	7c e9       	ldi	r23, 0x9C	; 156
    51c0:	80 e0       	ldi	r24, 0x00	; 0
    51c2:	90 e0       	ldi	r25, 0x00	; 0
    51c4:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    51c8:	83 e0       	ldi	r24, 0x03	; 3
    51ca:	0e 94 df 26 	call	0x4dbe	; 0x4dbe <setPort>
    51ce:	68 e8       	ldi	r22, 0x88	; 136
    51d0:	73 e1       	ldi	r23, 0x13	; 19
    51d2:	80 e0       	ldi	r24, 0x00	; 0
    51d4:	90 e0       	ldi	r25, 0x00	; 0
    51d6:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    51da:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    51de:	60 ea       	ldi	r22, 0xA0	; 160
    51e0:	70 e0       	ldi	r23, 0x00	; 0
    51e2:	80 e0       	ldi	r24, 0x00	; 0
    51e4:	90 e0       	ldi	r25, 0x00	; 0
    51e6:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    51ea:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    51ee:	60 ea       	ldi	r22, 0xA0	; 160
    51f0:	70 e0       	ldi	r23, 0x00	; 0
    51f2:	80 e0       	ldi	r24, 0x00	; 0
    51f4:	90 e0       	ldi	r25, 0x00	; 0
    51f6:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    51fa:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    51fe:	60 ea       	ldi	r22, 0xA0	; 160
    5200:	70 e0       	ldi	r23, 0x00	; 0
    5202:	80 e0       	ldi	r24, 0x00	; 0
    5204:	90 e0       	ldi	r25, 0x00	; 0
    5206:	0e 94 56 26 	call	0x4cac	; 0x4cac <delayUS>
    520a:	82 e0       	ldi	r24, 0x02	; 2
    520c:	0e 94 df 26 	call	0x4dbe	; 0x4dbe <setPort>
    5210:	0e 94 51 27 	call	0x4ea2	; 0x4ea2 <Nybble>
    5214:	88 e2       	ldi	r24, 0x28	; 40
    5216:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    521a:	80 e1       	ldi	r24, 0x10	; 16
    521c:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    5220:	8c e0       	ldi	r24, 0x0C	; 12
    5222:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    5226:	86 e0       	ldi	r24, 0x06	; 6
    5228:	0e 94 65 27 	call	0x4eca	; 0x4eca <command>
    522c:	68 ec       	ldi	r22, 0xC8	; 200
    522e:	70 e0       	ldi	r23, 0x00	; 0
    5230:	80 e0       	ldi	r24, 0x00	; 0
    5232:	90 e0       	ldi	r25, 0x00	; 0
    5234:	0e 94 3b 13 	call	0x2676	; 0x2676 <vTaskDelay>
    5238:	80 91 50 2d 	lds	r24, 0x2D50	; 0x802d50 <egDisplayTiming>
    523c:	90 91 51 2d 	lds	r25, 0x2D51	; 0x802d51 <egDisplayTiming+0x1>
    5240:	40 e0       	ldi	r20, 0x00	; 0
    5242:	50 e0       	ldi	r21, 0x00	; 0
    5244:	ba 01       	movw	r22, r20
    5246:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
    524a:	dc 01       	movw	r26, r24
    524c:	cb 01       	movw	r24, r22
    524e:	89 2b       	or	r24, r25
    5250:	8a 2b       	or	r24, r26
    5252:	8b 2b       	or	r24, r27
    5254:	09 f4       	brne	.+2      	; 0x5258 <vDisplayUpdateTask+0x11a>
    5256:	96 c0       	rjmp	.+300    	; 0x5384 <vDisplayUpdateTask+0x246>
    5258:	80 91 50 2d 	lds	r24, 0x2D50	; 0x802d50 <egDisplayTiming>
    525c:	90 91 51 2d 	lds	r25, 0x2D51	; 0x802d51 <egDisplayTiming+0x1>
    5260:	42 e0       	ldi	r20, 0x02	; 2
    5262:	50 e0       	ldi	r21, 0x00	; 0
    5264:	60 e0       	ldi	r22, 0x00	; 0
    5266:	70 e0       	ldi	r23, 0x00	; 0
    5268:	0e 94 36 05 	call	0xa6c	; 0xa6c <xEventGroupClearBits>
    526c:	19 82       	std	Y+1, r1	; 0x01
    526e:	1a 82       	std	Y+2, r1	; 0x02
    5270:	26 c0       	rjmp	.+76     	; 0x52be <vDisplayUpdateTask+0x180>
    5272:	1b 82       	std	Y+3, r1	; 0x03
    5274:	1c 82       	std	Y+4, r1	; 0x04
    5276:	1a c0       	rjmp	.+52     	; 0x52ac <vDisplayUpdateTask+0x16e>
    5278:	29 81       	ldd	r18, Y+1	; 0x01
    527a:	3a 81       	ldd	r19, Y+2	; 0x02
    527c:	44 e1       	ldi	r20, 0x14	; 20
    527e:	42 9f       	mul	r20, r18
    5280:	c0 01       	movw	r24, r0
    5282:	43 9f       	mul	r20, r19
    5284:	90 0d       	add	r25, r0
    5286:	11 24       	eor	r1, r1
    5288:	9e 01       	movw	r18, r28
    528a:	2f 5f       	subi	r18, 0xFF	; 255
    528c:	3f 4f       	sbci	r19, 0xFF	; 255
    528e:	28 0f       	add	r18, r24
    5290:	39 1f       	adc	r19, r25
    5292:	8b 81       	ldd	r24, Y+3	; 0x03
    5294:	9c 81       	ldd	r25, Y+4	; 0x04
    5296:	82 0f       	add	r24, r18
    5298:	93 1f       	adc	r25, r19
    529a:	08 96       	adiw	r24, 0x08	; 8
    529c:	20 e2       	ldi	r18, 0x20	; 32
    529e:	fc 01       	movw	r30, r24
    52a0:	20 83       	st	Z, r18
    52a2:	8b 81       	ldd	r24, Y+3	; 0x03
    52a4:	9c 81       	ldd	r25, Y+4	; 0x04
    52a6:	01 96       	adiw	r24, 0x01	; 1
    52a8:	8b 83       	std	Y+3, r24	; 0x03
    52aa:	9c 83       	std	Y+4, r25	; 0x04
    52ac:	8b 81       	ldd	r24, Y+3	; 0x03
    52ae:	9c 81       	ldd	r25, Y+4	; 0x04
    52b0:	44 97       	sbiw	r24, 0x14	; 20
    52b2:	14 f3       	brlt	.-60     	; 0x5278 <vDisplayUpdateTask+0x13a>
    52b4:	89 81       	ldd	r24, Y+1	; 0x01
    52b6:	9a 81       	ldd	r25, Y+2	; 0x02
    52b8:	01 96       	adiw	r24, 0x01	; 1
    52ba:	89 83       	std	Y+1, r24	; 0x01
    52bc:	9a 83       	std	Y+2, r25	; 0x02
    52be:	89 81       	ldd	r24, Y+1	; 0x01
    52c0:	9a 81       	ldd	r25, Y+2	; 0x02
    52c2:	04 97       	sbiw	r24, 0x04	; 4
    52c4:	b4 f2       	brlt	.-84     	; 0x5272 <vDisplayUpdateTask+0x134>
    52c6:	5e c0       	rjmp	.+188    	; 0x5384 <vDisplayUpdateTask+0x246>
    52c8:	80 91 4e 2d 	lds	r24, 0x2D4E	; 0x802d4e <displayLineQueue>
    52cc:	90 91 4f 2d 	lds	r25, 0x2D4F	; 0x802d4f <displayLineQueue+0x1>
    52d0:	be 01       	movw	r22, r28
    52d2:	67 5a       	subi	r22, 0xA7	; 167
    52d4:	7f 4f       	sbci	r23, 0xFF	; 255
    52d6:	2f ef       	ldi	r18, 0xFF	; 255
    52d8:	3f ef       	ldi	r19, 0xFF	; 255
    52da:	a9 01       	movw	r20, r18
    52dc:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <xQueueReceive>
    52e0:	88 23       	and	r24, r24
    52e2:	09 f4       	brne	.+2      	; 0x52e6 <vDisplayUpdateTask+0x1a8>
    52e4:	4f c0       	rjmp	.+158    	; 0x5384 <vDisplayUpdateTask+0x246>
    52e6:	19 82       	std	Y+1, r1	; 0x01
    52e8:	1a 82       	std	Y+2, r1	; 0x02
    52ea:	32 c0       	rjmp	.+100    	; 0x5350 <vDisplayUpdateTask+0x212>
    52ec:	ce 01       	movw	r24, r28
    52ee:	87 5a       	subi	r24, 0xA7	; 167
    52f0:	9f 4f       	sbci	r25, 0xFF	; 255
    52f2:	fc 01       	movw	r30, r24
    52f4:	80 81       	ld	r24, Z
    52f6:	48 2f       	mov	r20, r24
    52f8:	50 e0       	ldi	r21, 0x00	; 0
    52fa:	ce 01       	movw	r24, r28
    52fc:	87 5a       	subi	r24, 0xA7	; 167
    52fe:	9f 4f       	sbci	r25, 0xFF	; 255
    5300:	fc 01       	movw	r30, r24
    5302:	81 81       	ldd	r24, Z+1	; 0x01
    5304:	28 2f       	mov	r18, r24
    5306:	30 e0       	ldi	r19, 0x00	; 0
    5308:	89 81       	ldd	r24, Y+1	; 0x01
    530a:	9a 81       	ldd	r25, Y+2	; 0x02
    530c:	82 0f       	add	r24, r18
    530e:	93 1f       	adc	r25, r19
    5310:	be 01       	movw	r22, r28
    5312:	67 5a       	subi	r22, 0xA7	; 167
    5314:	7f 4f       	sbci	r23, 0xFF	; 255
    5316:	29 81       	ldd	r18, Y+1	; 0x01
    5318:	3a 81       	ldd	r19, Y+2	; 0x02
    531a:	26 0f       	add	r18, r22
    531c:	37 1f       	adc	r19, r23
    531e:	2e 5f       	subi	r18, 0xFE	; 254
    5320:	3f 4f       	sbci	r19, 0xFF	; 255
    5322:	f9 01       	movw	r30, r18
    5324:	60 81       	ld	r22, Z
    5326:	74 e1       	ldi	r23, 0x14	; 20
    5328:	74 9f       	mul	r23, r20
    532a:	90 01       	movw	r18, r0
    532c:	75 9f       	mul	r23, r21
    532e:	30 0d       	add	r19, r0
    5330:	11 24       	eor	r1, r1
    5332:	ae 01       	movw	r20, r28
    5334:	4f 5f       	subi	r20, 0xFF	; 255
    5336:	5f 4f       	sbci	r21, 0xFF	; 255
    5338:	24 0f       	add	r18, r20
    533a:	35 1f       	adc	r19, r21
    533c:	82 0f       	add	r24, r18
    533e:	93 1f       	adc	r25, r19
    5340:	08 96       	adiw	r24, 0x08	; 8
    5342:	fc 01       	movw	r30, r24
    5344:	60 83       	st	Z, r22
    5346:	89 81       	ldd	r24, Y+1	; 0x01
    5348:	9a 81       	ldd	r25, Y+2	; 0x02
    534a:	01 96       	adiw	r24, 0x01	; 1
    534c:	89 83       	std	Y+1, r24	; 0x01
    534e:	9a 83       	std	Y+2, r25	; 0x02
    5350:	ce 01       	movw	r24, r28
    5352:	87 5a       	subi	r24, 0xA7	; 167
    5354:	9f 4f       	sbci	r25, 0xFF	; 255
    5356:	fc 01       	movw	r30, r24
    5358:	81 81       	ldd	r24, Z+1	; 0x01
    535a:	28 2f       	mov	r18, r24
    535c:	30 e0       	ldi	r19, 0x00	; 0
    535e:	89 81       	ldd	r24, Y+1	; 0x01
    5360:	9a 81       	ldd	r25, Y+2	; 0x02
    5362:	82 0f       	add	r24, r18
    5364:	93 1f       	adc	r25, r19
    5366:	44 97       	sbiw	r24, 0x14	; 20
    5368:	6c f4       	brge	.+26     	; 0x5384 <vDisplayUpdateTask+0x246>
    536a:	9e 01       	movw	r18, r28
    536c:	27 5a       	subi	r18, 0xA7	; 167
    536e:	3f 4f       	sbci	r19, 0xFF	; 255
    5370:	89 81       	ldd	r24, Y+1	; 0x01
    5372:	9a 81       	ldd	r25, Y+2	; 0x02
    5374:	82 0f       	add	r24, r18
    5376:	93 1f       	adc	r25, r19
    5378:	02 96       	adiw	r24, 0x02	; 2
    537a:	fc 01       	movw	r30, r24
    537c:	80 81       	ld	r24, Z
    537e:	88 23       	and	r24, r24
    5380:	09 f0       	breq	.+2      	; 0x5384 <vDisplayUpdateTask+0x246>
    5382:	b4 cf       	rjmp	.-152    	; 0x52ec <vDisplayUpdateTask+0x1ae>
    5384:	80 91 4e 2d 	lds	r24, 0x2D4E	; 0x802d4e <displayLineQueue>
    5388:	90 91 4f 2d 	lds	r25, 0x2D4F	; 0x802d4f <displayLineQueue+0x1>
    538c:	0e 94 4e 0f 	call	0x1e9c	; 0x1e9c <uxQueueMessagesWaiting>
    5390:	88 23       	and	r24, r24
    5392:	09 f0       	breq	.+2      	; 0x5396 <vDisplayUpdateTask+0x258>
    5394:	99 cf       	rjmp	.-206    	; 0x52c8 <vDisplayUpdateTask+0x18a>
    5396:	19 82       	std	Y+1, r1	; 0x01
    5398:	1a 82       	std	Y+2, r1	; 0x02
    539a:	19 c0       	rjmp	.+50     	; 0x53ce <vDisplayUpdateTask+0x290>
    539c:	9e 01       	movw	r18, r28
    539e:	27 5f       	subi	r18, 0xF7	; 247
    53a0:	3f 4f       	sbci	r19, 0xFF	; 255
    53a2:	49 81       	ldd	r20, Y+1	; 0x01
    53a4:	5a 81       	ldd	r21, Y+2	; 0x02
    53a6:	64 e1       	ldi	r22, 0x14	; 20
    53a8:	64 9f       	mul	r22, r20
    53aa:	c0 01       	movw	r24, r0
    53ac:	65 9f       	mul	r22, r21
    53ae:	90 0d       	add	r25, r0
    53b0:	11 24       	eor	r1, r1
    53b2:	28 0f       	add	r18, r24
    53b4:	39 1f       	adc	r19, r25
    53b6:	89 81       	ldd	r24, Y+1	; 0x01
    53b8:	9a 81       	ldd	r25, Y+2	; 0x02
    53ba:	a9 01       	movw	r20, r18
    53bc:	60 e0       	ldi	r22, 0x00	; 0
    53be:	70 e0       	ldi	r23, 0x00	; 0
    53c0:	0e 94 81 28 	call	0x5102	; 0x5102 <_displayWriteStringAtPos>
    53c4:	89 81       	ldd	r24, Y+1	; 0x01
    53c6:	9a 81       	ldd	r25, Y+2	; 0x02
    53c8:	01 96       	adiw	r24, 0x01	; 1
    53ca:	89 83       	std	Y+1, r24	; 0x01
    53cc:	9a 83       	std	Y+2, r25	; 0x02
    53ce:	89 81       	ldd	r24, Y+1	; 0x01
    53d0:	9a 81       	ldd	r25, Y+2	; 0x02
    53d2:	04 97       	sbiw	r24, 0x04	; 4
    53d4:	1c f3       	brlt	.-58     	; 0x539c <vDisplayUpdateTask+0x25e>
    53d6:	2a cf       	rjmp	.-428    	; 0x522c <vDisplayUpdateTask+0xee>

000053d8 <vDisplayClear>:
    53d8:	cf 93       	push	r28
    53da:	df 93       	push	r29
    53dc:	cd b7       	in	r28, 0x3d	; 61
    53de:	de b7       	in	r29, 0x3e	; 62
    53e0:	80 91 50 2d 	lds	r24, 0x2D50	; 0x802d50 <egDisplayTiming>
    53e4:	90 91 51 2d 	lds	r25, 0x2D51	; 0x802d51 <egDisplayTiming+0x1>
    53e8:	42 e0       	ldi	r20, 0x02	; 2
    53ea:	50 e0       	ldi	r21, 0x00	; 0
    53ec:	60 e0       	ldi	r22, 0x00	; 0
    53ee:	70 e0       	ldi	r23, 0x00	; 0
    53f0:	0e 94 81 05 	call	0xb02	; 0xb02 <xEventGroupSetBits>
    53f4:	00 00       	nop
    53f6:	df 91       	pop	r29
    53f8:	cf 91       	pop	r28
    53fa:	08 95       	ret

000053fc <vDisplayWriteStringAtPos>:
    53fc:	cf 93       	push	r28
    53fe:	df 93       	push	r29
    5400:	1f 92       	push	r1
    5402:	1f 92       	push	r1
    5404:	cd b7       	in	r28, 0x3d	; 61
    5406:	de b7       	in	r29, 0x3e	; 62
    5408:	ce 01       	movw	r24, r28
    540a:	0e 96       	adiw	r24, 0x0e	; 14
    540c:	89 83       	std	Y+1, r24	; 0x01
    540e:	9a 83       	std	Y+2, r25	; 0x02
    5410:	29 81       	ldd	r18, Y+1	; 0x01
    5412:	3a 81       	ldd	r19, Y+2	; 0x02
    5414:	4c 85       	ldd	r20, Y+12	; 0x0c
    5416:	5d 85       	ldd	r21, Y+13	; 0x0d
    5418:	6a 85       	ldd	r22, Y+10	; 0x0a
    541a:	7b 85       	ldd	r23, Y+11	; 0x0b
    541c:	88 85       	ldd	r24, Y+8	; 0x08
    541e:	99 85       	ldd	r25, Y+9	; 0x09
    5420:	0e 94 18 2a 	call	0x5430	; 0x5430 <display_vprintf>
    5424:	00 00       	nop
    5426:	0f 90       	pop	r0
    5428:	0f 90       	pop	r0
    542a:	df 91       	pop	r29
    542c:	cf 91       	pop	r28
    542e:	08 95       	ret

00005430 <display_vprintf>:
    5430:	0f 93       	push	r16
    5432:	cf 93       	push	r28
    5434:	df 93       	push	r29
    5436:	cd b7       	in	r28, 0x3d	; 61
    5438:	de b7       	in	r29, 0x3e	; 62
    543a:	ec 97       	sbiw	r28, 0x3c	; 60
    543c:	cd bf       	out	0x3d, r28	; 61
    543e:	de bf       	out	0x3e, r29	; 62
    5440:	8d ab       	std	Y+53, r24	; 0x35
    5442:	9e ab       	std	Y+54, r25	; 0x36
    5444:	6f ab       	std	Y+55, r22	; 0x37
    5446:	78 af       	std	Y+56, r23	; 0x38
    5448:	49 af       	std	Y+57, r20	; 0x39
    544a:	5a af       	std	Y+58, r21	; 0x3a
    544c:	2b af       	std	Y+59, r18	; 0x3b
    544e:	3c af       	std	Y+60, r19	; 0x3c
    5450:	19 82       	std	Y+1, r1	; 0x01
    5452:	1a 82       	std	Y+2, r1	; 0x02
    5454:	1b 82       	std	Y+3, r1	; 0x03
    5456:	1c 82       	std	Y+4, r1	; 0x04
    5458:	0b c0       	rjmp	.+22     	; 0x5470 <display_vprintf+0x40>
    545a:	8b 81       	ldd	r24, Y+3	; 0x03
    545c:	9c 81       	ldd	r25, Y+4	; 0x04
    545e:	83 5e       	subi	r24, 0xE3	; 227
    5460:	92 4d       	sbci	r25, 0xD2	; 210
    5462:	fc 01       	movw	r30, r24
    5464:	10 82       	st	Z, r1
    5466:	8b 81       	ldd	r24, Y+3	; 0x03
    5468:	9c 81       	ldd	r25, Y+4	; 0x04
    546a:	01 96       	adiw	r24, 0x01	; 1
    546c:	8b 83       	std	Y+3, r24	; 0x03
    546e:	9c 83       	std	Y+4, r25	; 0x04
    5470:	8b 81       	ldd	r24, Y+3	; 0x03
    5472:	9c 81       	ldd	r25, Y+4	; 0x04
    5474:	44 97       	sbiw	r24, 0x14	; 20
    5476:	8c f3       	brlt	.-30     	; 0x545a <display_vprintf+0x2a>
    5478:	1d 82       	std	Y+5, r1	; 0x05
    547a:	1e 82       	std	Y+6, r1	; 0x06
    547c:	0b c0       	rjmp	.+22     	; 0x5494 <display_vprintf+0x64>
    547e:	8d 81       	ldd	r24, Y+5	; 0x05
    5480:	9e 81       	ldd	r25, Y+6	; 0x06
    5482:	8f 5c       	subi	r24, 0xCF	; 207
    5484:	92 4d       	sbci	r25, 0xD2	; 210
    5486:	fc 01       	movw	r30, r24
    5488:	10 82       	st	Z, r1
    548a:	8d 81       	ldd	r24, Y+5	; 0x05
    548c:	9e 81       	ldd	r25, Y+6	; 0x06
    548e:	01 96       	adiw	r24, 0x01	; 1
    5490:	8d 83       	std	Y+5, r24	; 0x05
    5492:	9e 83       	std	Y+6, r25	; 0x06
    5494:	8d 81       	ldd	r24, Y+5	; 0x05
    5496:	9e 81       	ldd	r25, Y+6	; 0x06
    5498:	44 97       	sbiw	r24, 0x14	; 20
    549a:	8c f3       	brlt	.-30     	; 0x547e <display_vprintf+0x4e>
    549c:	be c1       	rjmp	.+892    	; 0x581a <display_vprintf+0x3ea>
    549e:	8d 89       	ldd	r24, Y+21	; 0x15
    54a0:	85 32       	cpi	r24, 0x25	; 37
    54a2:	09 f0       	breq	.+2      	; 0x54a6 <display_vprintf+0x76>
    54a4:	a0 c1       	rjmp	.+832    	; 0x57e6 <display_vprintf+0x3b6>
    54a6:	89 ad       	ldd	r24, Y+57	; 0x39
    54a8:	9a ad       	ldd	r25, Y+58	; 0x3a
    54aa:	9c 01       	movw	r18, r24
    54ac:	2f 5f       	subi	r18, 0xFF	; 255
    54ae:	3f 4f       	sbci	r19, 0xFF	; 255
    54b0:	29 af       	std	Y+57, r18	; 0x39
    54b2:	3a af       	std	Y+58, r19	; 0x3a
    54b4:	fc 01       	movw	r30, r24
    54b6:	80 81       	ld	r24, Z
    54b8:	8d 8b       	std	Y+21, r24	; 0x15
    54ba:	8d 89       	ldd	r24, Y+21	; 0x15
    54bc:	88 2f       	mov	r24, r24
    54be:	90 e0       	ldi	r25, 0x00	; 0
    54c0:	85 36       	cpi	r24, 0x65	; 101
    54c2:	91 05       	cpc	r25, r1
    54c4:	09 f4       	brne	.+2      	; 0x54c8 <display_vprintf+0x98>
    54c6:	46 c1       	rjmp	.+652    	; 0x5754 <display_vprintf+0x324>
    54c8:	86 36       	cpi	r24, 0x66	; 102
    54ca:	91 05       	cpc	r25, r1
    54cc:	54 f4       	brge	.+20     	; 0x54e2 <display_vprintf+0xb2>
    54ce:	83 36       	cpi	r24, 0x63	; 99
    54d0:	91 05       	cpc	r25, r1
    54d2:	01 f1       	breq	.+64     	; 0x5514 <display_vprintf+0xe4>
    54d4:	84 36       	cpi	r24, 0x64	; 100
    54d6:	91 05       	cpc	r25, r1
    54d8:	0c f0       	brlt	.+2      	; 0x54dc <display_vprintf+0xac>
    54da:	70 c0       	rjmp	.+224    	; 0x55bc <display_vprintf+0x18c>
    54dc:	85 97       	sbiw	r24, 0x25	; 37
    54de:	69 f0       	breq	.+26     	; 0x54fa <display_vprintf+0xca>
    54e0:	9c c1       	rjmp	.+824    	; 0x581a <display_vprintf+0x3ea>
    54e2:	83 37       	cpi	r24, 0x73	; 115
    54e4:	91 05       	cpc	r25, r1
    54e6:	71 f1       	breq	.+92     	; 0x5544 <display_vprintf+0x114>
    54e8:	88 37       	cpi	r24, 0x78	; 120
    54ea:	91 05       	cpc	r25, r1
    54ec:	09 f4       	brne	.+2      	; 0x54f0 <display_vprintf+0xc0>
    54ee:	a8 c0       	rjmp	.+336    	; 0x5640 <display_vprintf+0x210>
    54f0:	86 36       	cpi	r24, 0x66	; 102
    54f2:	91 05       	cpc	r25, r1
    54f4:	09 f4       	brne	.+2      	; 0x54f8 <display_vprintf+0xc8>
    54f6:	e6 c0       	rjmp	.+460    	; 0x56c4 <display_vprintf+0x294>
    54f8:	90 c1       	rjmp	.+800    	; 0x581a <display_vprintf+0x3ea>
    54fa:	89 81       	ldd	r24, Y+1	; 0x01
    54fc:	9a 81       	ldd	r25, Y+2	; 0x02
    54fe:	8f 5c       	subi	r24, 0xCF	; 207
    5500:	92 4d       	sbci	r25, 0xD2	; 210
    5502:	25 e2       	ldi	r18, 0x25	; 37
    5504:	fc 01       	movw	r30, r24
    5506:	20 83       	st	Z, r18
    5508:	89 81       	ldd	r24, Y+1	; 0x01
    550a:	9a 81       	ldd	r25, Y+2	; 0x02
    550c:	01 96       	adiw	r24, 0x01	; 1
    550e:	89 83       	std	Y+1, r24	; 0x01
    5510:	9a 83       	std	Y+2, r25	; 0x02
    5512:	83 c1       	rjmp	.+774    	; 0x581a <display_vprintf+0x3ea>
    5514:	8b ad       	ldd	r24, Y+59	; 0x3b
    5516:	9c ad       	ldd	r25, Y+60	; 0x3c
    5518:	9c 01       	movw	r18, r24
    551a:	2e 5f       	subi	r18, 0xFE	; 254
    551c:	3f 4f       	sbci	r19, 0xFF	; 255
    551e:	2b af       	std	Y+59, r18	; 0x3b
    5520:	3c af       	std	Y+60, r19	; 0x3c
    5522:	fc 01       	movw	r30, r24
    5524:	80 81       	ld	r24, Z
    5526:	91 81       	ldd	r25, Z+1	; 0x01
    5528:	8e 8b       	std	Y+22, r24	; 0x16
    552a:	89 81       	ldd	r24, Y+1	; 0x01
    552c:	9a 81       	ldd	r25, Y+2	; 0x02
    552e:	8f 5c       	subi	r24, 0xCF	; 207
    5530:	92 4d       	sbci	r25, 0xD2	; 210
    5532:	2e 89       	ldd	r18, Y+22	; 0x16
    5534:	fc 01       	movw	r30, r24
    5536:	20 83       	st	Z, r18
    5538:	89 81       	ldd	r24, Y+1	; 0x01
    553a:	9a 81       	ldd	r25, Y+2	; 0x02
    553c:	01 96       	adiw	r24, 0x01	; 1
    553e:	89 83       	std	Y+1, r24	; 0x01
    5540:	9a 83       	std	Y+2, r25	; 0x02
    5542:	6b c1       	rjmp	.+726    	; 0x581a <display_vprintf+0x3ea>
    5544:	8b ad       	ldd	r24, Y+59	; 0x3b
    5546:	9c ad       	ldd	r25, Y+60	; 0x3c
    5548:	9c 01       	movw	r18, r24
    554a:	2e 5f       	subi	r18, 0xFE	; 254
    554c:	3f 4f       	sbci	r19, 0xFF	; 255
    554e:	2b af       	std	Y+59, r18	; 0x3b
    5550:	3c af       	std	Y+60, r19	; 0x3c
    5552:	fc 01       	movw	r30, r24
    5554:	80 81       	ld	r24, Z
    5556:	91 81       	ldd	r25, Z+1	; 0x01
    5558:	8f 8b       	std	Y+23, r24	; 0x17
    555a:	98 8f       	std	Y+24, r25	; 0x18
    555c:	1f 82       	std	Y+7, r1	; 0x07
    555e:	18 86       	std	Y+8, r1	; 0x08
    5560:	17 c0       	rjmp	.+46     	; 0x5590 <display_vprintf+0x160>
    5562:	29 81       	ldd	r18, Y+1	; 0x01
    5564:	3a 81       	ldd	r19, Y+2	; 0x02
    5566:	8f 81       	ldd	r24, Y+7	; 0x07
    5568:	98 85       	ldd	r25, Y+8	; 0x08
    556a:	82 0f       	add	r24, r18
    556c:	93 1f       	adc	r25, r19
    556e:	2f 81       	ldd	r18, Y+7	; 0x07
    5570:	38 85       	ldd	r19, Y+8	; 0x08
    5572:	4f 89       	ldd	r20, Y+23	; 0x17
    5574:	58 8d       	ldd	r21, Y+24	; 0x18
    5576:	24 0f       	add	r18, r20
    5578:	35 1f       	adc	r19, r21
    557a:	f9 01       	movw	r30, r18
    557c:	20 81       	ld	r18, Z
    557e:	8f 5c       	subi	r24, 0xCF	; 207
    5580:	92 4d       	sbci	r25, 0xD2	; 210
    5582:	fc 01       	movw	r30, r24
    5584:	20 83       	st	Z, r18
    5586:	8f 81       	ldd	r24, Y+7	; 0x07
    5588:	98 85       	ldd	r25, Y+8	; 0x08
    558a:	01 96       	adiw	r24, 0x01	; 1
    558c:	8f 83       	std	Y+7, r24	; 0x07
    558e:	98 87       	std	Y+8, r25	; 0x08
    5590:	8f 89       	ldd	r24, Y+23	; 0x17
    5592:	98 8d       	ldd	r25, Y+24	; 0x18
    5594:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    5598:	9c 01       	movw	r18, r24
    559a:	8f 81       	ldd	r24, Y+7	; 0x07
    559c:	98 85       	ldd	r25, Y+8	; 0x08
    559e:	82 17       	cp	r24, r18
    55a0:	93 07       	cpc	r25, r19
    55a2:	f8 f2       	brcs	.-66     	; 0x5562 <display_vprintf+0x132>
    55a4:	8f 89       	ldd	r24, Y+23	; 0x17
    55a6:	98 8d       	ldd	r25, Y+24	; 0x18
    55a8:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    55ac:	9c 01       	movw	r18, r24
    55ae:	89 81       	ldd	r24, Y+1	; 0x01
    55b0:	9a 81       	ldd	r25, Y+2	; 0x02
    55b2:	82 0f       	add	r24, r18
    55b4:	93 1f       	adc	r25, r19
    55b6:	89 83       	std	Y+1, r24	; 0x01
    55b8:	9a 83       	std	Y+2, r25	; 0x02
    55ba:	2f c1       	rjmp	.+606    	; 0x581a <display_vprintf+0x3ea>
    55bc:	8b ad       	ldd	r24, Y+59	; 0x3b
    55be:	9c ad       	ldd	r25, Y+60	; 0x3c
    55c0:	9c 01       	movw	r18, r24
    55c2:	2e 5f       	subi	r18, 0xFE	; 254
    55c4:	3f 4f       	sbci	r19, 0xFF	; 255
    55c6:	2b af       	std	Y+59, r18	; 0x3b
    55c8:	3c af       	std	Y+60, r19	; 0x3c
    55ca:	fc 01       	movw	r30, r24
    55cc:	80 81       	ld	r24, Z
    55ce:	91 81       	ldd	r25, Z+1	; 0x01
    55d0:	89 8f       	std	Y+25, r24	; 0x19
    55d2:	9a 8f       	std	Y+26, r25	; 0x1a
    55d4:	89 8d       	ldd	r24, Y+25	; 0x19
    55d6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    55d8:	4a e0       	ldi	r20, 0x0A	; 10
    55da:	50 e0       	ldi	r21, 0x00	; 0
    55dc:	6d e1       	ldi	r22, 0x1D	; 29
    55de:	7d e2       	ldi	r23, 0x2D	; 45
    55e0:	0e 94 09 32 	call	0x6412	; 0x6412 <itoa>
    55e4:	19 86       	std	Y+9, r1	; 0x09
    55e6:	1a 86       	std	Y+10, r1	; 0x0a
    55e8:	15 c0       	rjmp	.+42     	; 0x5614 <display_vprintf+0x1e4>
    55ea:	29 81       	ldd	r18, Y+1	; 0x01
    55ec:	3a 81       	ldd	r19, Y+2	; 0x02
    55ee:	89 85       	ldd	r24, Y+9	; 0x09
    55f0:	9a 85       	ldd	r25, Y+10	; 0x0a
    55f2:	82 0f       	add	r24, r18
    55f4:	93 1f       	adc	r25, r19
    55f6:	29 85       	ldd	r18, Y+9	; 0x09
    55f8:	3a 85       	ldd	r19, Y+10	; 0x0a
    55fa:	23 5e       	subi	r18, 0xE3	; 227
    55fc:	32 4d       	sbci	r19, 0xD2	; 210
    55fe:	f9 01       	movw	r30, r18
    5600:	20 81       	ld	r18, Z
    5602:	8f 5c       	subi	r24, 0xCF	; 207
    5604:	92 4d       	sbci	r25, 0xD2	; 210
    5606:	fc 01       	movw	r30, r24
    5608:	20 83       	st	Z, r18
    560a:	89 85       	ldd	r24, Y+9	; 0x09
    560c:	9a 85       	ldd	r25, Y+10	; 0x0a
    560e:	01 96       	adiw	r24, 0x01	; 1
    5610:	89 87       	std	Y+9, r24	; 0x09
    5612:	9a 87       	std	Y+10, r25	; 0x0a
    5614:	8d e1       	ldi	r24, 0x1D	; 29
    5616:	9d e2       	ldi	r25, 0x2D	; 45
    5618:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    561c:	9c 01       	movw	r18, r24
    561e:	89 85       	ldd	r24, Y+9	; 0x09
    5620:	9a 85       	ldd	r25, Y+10	; 0x0a
    5622:	82 17       	cp	r24, r18
    5624:	93 07       	cpc	r25, r19
    5626:	08 f3       	brcs	.-62     	; 0x55ea <display_vprintf+0x1ba>
    5628:	8d e1       	ldi	r24, 0x1D	; 29
    562a:	9d e2       	ldi	r25, 0x2D	; 45
    562c:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    5630:	9c 01       	movw	r18, r24
    5632:	89 81       	ldd	r24, Y+1	; 0x01
    5634:	9a 81       	ldd	r25, Y+2	; 0x02
    5636:	82 0f       	add	r24, r18
    5638:	93 1f       	adc	r25, r19
    563a:	89 83       	std	Y+1, r24	; 0x01
    563c:	9a 83       	std	Y+2, r25	; 0x02
    563e:	ed c0       	rjmp	.+474    	; 0x581a <display_vprintf+0x3ea>
    5640:	8b ad       	ldd	r24, Y+59	; 0x3b
    5642:	9c ad       	ldd	r25, Y+60	; 0x3c
    5644:	9c 01       	movw	r18, r24
    5646:	2e 5f       	subi	r18, 0xFE	; 254
    5648:	3f 4f       	sbci	r19, 0xFF	; 255
    564a:	2b af       	std	Y+59, r18	; 0x3b
    564c:	3c af       	std	Y+60, r19	; 0x3c
    564e:	fc 01       	movw	r30, r24
    5650:	80 81       	ld	r24, Z
    5652:	91 81       	ldd	r25, Z+1	; 0x01
    5654:	89 8f       	std	Y+25, r24	; 0x19
    5656:	9a 8f       	std	Y+26, r25	; 0x1a
    5658:	89 8d       	ldd	r24, Y+25	; 0x19
    565a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    565c:	40 e1       	ldi	r20, 0x10	; 16
    565e:	50 e0       	ldi	r21, 0x00	; 0
    5660:	6d e1       	ldi	r22, 0x1D	; 29
    5662:	7d e2       	ldi	r23, 0x2D	; 45
    5664:	0e 94 09 32 	call	0x6412	; 0x6412 <itoa>
    5668:	1b 86       	std	Y+11, r1	; 0x0b
    566a:	1c 86       	std	Y+12, r1	; 0x0c
    566c:	15 c0       	rjmp	.+42     	; 0x5698 <display_vprintf+0x268>
    566e:	29 81       	ldd	r18, Y+1	; 0x01
    5670:	3a 81       	ldd	r19, Y+2	; 0x02
    5672:	8b 85       	ldd	r24, Y+11	; 0x0b
    5674:	9c 85       	ldd	r25, Y+12	; 0x0c
    5676:	82 0f       	add	r24, r18
    5678:	93 1f       	adc	r25, r19
    567a:	2b 85       	ldd	r18, Y+11	; 0x0b
    567c:	3c 85       	ldd	r19, Y+12	; 0x0c
    567e:	23 5e       	subi	r18, 0xE3	; 227
    5680:	32 4d       	sbci	r19, 0xD2	; 210
    5682:	f9 01       	movw	r30, r18
    5684:	20 81       	ld	r18, Z
    5686:	8f 5c       	subi	r24, 0xCF	; 207
    5688:	92 4d       	sbci	r25, 0xD2	; 210
    568a:	fc 01       	movw	r30, r24
    568c:	20 83       	st	Z, r18
    568e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5690:	9c 85       	ldd	r25, Y+12	; 0x0c
    5692:	01 96       	adiw	r24, 0x01	; 1
    5694:	8b 87       	std	Y+11, r24	; 0x0b
    5696:	9c 87       	std	Y+12, r25	; 0x0c
    5698:	8d e1       	ldi	r24, 0x1D	; 29
    569a:	9d e2       	ldi	r25, 0x2D	; 45
    569c:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    56a0:	9c 01       	movw	r18, r24
    56a2:	8b 85       	ldd	r24, Y+11	; 0x0b
    56a4:	9c 85       	ldd	r25, Y+12	; 0x0c
    56a6:	82 17       	cp	r24, r18
    56a8:	93 07       	cpc	r25, r19
    56aa:	08 f3       	brcs	.-62     	; 0x566e <display_vprintf+0x23e>
    56ac:	8d e1       	ldi	r24, 0x1D	; 29
    56ae:	9d e2       	ldi	r25, 0x2D	; 45
    56b0:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    56b4:	9c 01       	movw	r18, r24
    56b6:	89 81       	ldd	r24, Y+1	; 0x01
    56b8:	9a 81       	ldd	r25, Y+2	; 0x02
    56ba:	82 0f       	add	r24, r18
    56bc:	93 1f       	adc	r25, r19
    56be:	89 83       	std	Y+1, r24	; 0x01
    56c0:	9a 83       	std	Y+2, r25	; 0x02
    56c2:	ab c0       	rjmp	.+342    	; 0x581a <display_vprintf+0x3ea>
    56c4:	8b ad       	ldd	r24, Y+59	; 0x3b
    56c6:	9c ad       	ldd	r25, Y+60	; 0x3c
    56c8:	9c 01       	movw	r18, r24
    56ca:	2c 5f       	subi	r18, 0xFC	; 252
    56cc:	3f 4f       	sbci	r19, 0xFF	; 255
    56ce:	2b af       	std	Y+59, r18	; 0x3b
    56d0:	3c af       	std	Y+60, r19	; 0x3c
    56d2:	fc 01       	movw	r30, r24
    56d4:	80 81       	ld	r24, Z
    56d6:	91 81       	ldd	r25, Z+1	; 0x01
    56d8:	a2 81       	ldd	r26, Z+2	; 0x02
    56da:	b3 81       	ldd	r27, Z+3	; 0x03
    56dc:	8b 8f       	std	Y+27, r24	; 0x1b
    56de:	9c 8f       	std	Y+28, r25	; 0x1c
    56e0:	ad 8f       	std	Y+29, r26	; 0x1d
    56e2:	be 8f       	std	Y+30, r27	; 0x1e
    56e4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    56e6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    56e8:	ad 8d       	ldd	r26, Y+29	; 0x1d
    56ea:	be 8d       	ldd	r27, Y+30	; 0x1e
    56ec:	ac 01       	movw	r20, r24
    56ee:	bd 01       	movw	r22, r26
    56f0:	8d e1       	ldi	r24, 0x1D	; 29
    56f2:	9d e2       	ldi	r25, 0x2D	; 45
    56f4:	0e 94 e7 2c 	call	0x59ce	; 0x59ce <ftoa_fixed>
    56f8:	1d 86       	std	Y+13, r1	; 0x0d
    56fa:	1e 86       	std	Y+14, r1	; 0x0e
    56fc:	15 c0       	rjmp	.+42     	; 0x5728 <display_vprintf+0x2f8>
    56fe:	29 81       	ldd	r18, Y+1	; 0x01
    5700:	3a 81       	ldd	r19, Y+2	; 0x02
    5702:	8d 85       	ldd	r24, Y+13	; 0x0d
    5704:	9e 85       	ldd	r25, Y+14	; 0x0e
    5706:	82 0f       	add	r24, r18
    5708:	93 1f       	adc	r25, r19
    570a:	2d 85       	ldd	r18, Y+13	; 0x0d
    570c:	3e 85       	ldd	r19, Y+14	; 0x0e
    570e:	23 5e       	subi	r18, 0xE3	; 227
    5710:	32 4d       	sbci	r19, 0xD2	; 210
    5712:	f9 01       	movw	r30, r18
    5714:	20 81       	ld	r18, Z
    5716:	8f 5c       	subi	r24, 0xCF	; 207
    5718:	92 4d       	sbci	r25, 0xD2	; 210
    571a:	fc 01       	movw	r30, r24
    571c:	20 83       	st	Z, r18
    571e:	8d 85       	ldd	r24, Y+13	; 0x0d
    5720:	9e 85       	ldd	r25, Y+14	; 0x0e
    5722:	01 96       	adiw	r24, 0x01	; 1
    5724:	8d 87       	std	Y+13, r24	; 0x0d
    5726:	9e 87       	std	Y+14, r25	; 0x0e
    5728:	8d e1       	ldi	r24, 0x1D	; 29
    572a:	9d e2       	ldi	r25, 0x2D	; 45
    572c:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    5730:	9c 01       	movw	r18, r24
    5732:	8d 85       	ldd	r24, Y+13	; 0x0d
    5734:	9e 85       	ldd	r25, Y+14	; 0x0e
    5736:	82 17       	cp	r24, r18
    5738:	93 07       	cpc	r25, r19
    573a:	08 f3       	brcs	.-62     	; 0x56fe <display_vprintf+0x2ce>
    573c:	8d e1       	ldi	r24, 0x1D	; 29
    573e:	9d e2       	ldi	r25, 0x2D	; 45
    5740:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    5744:	9c 01       	movw	r18, r24
    5746:	89 81       	ldd	r24, Y+1	; 0x01
    5748:	9a 81       	ldd	r25, Y+2	; 0x02
    574a:	82 0f       	add	r24, r18
    574c:	93 1f       	adc	r25, r19
    574e:	89 83       	std	Y+1, r24	; 0x01
    5750:	9a 83       	std	Y+2, r25	; 0x02
    5752:	63 c0       	rjmp	.+198    	; 0x581a <display_vprintf+0x3ea>
    5754:	8b ad       	ldd	r24, Y+59	; 0x3b
    5756:	9c ad       	ldd	r25, Y+60	; 0x3c
    5758:	9c 01       	movw	r18, r24
    575a:	2c 5f       	subi	r18, 0xFC	; 252
    575c:	3f 4f       	sbci	r19, 0xFF	; 255
    575e:	2b af       	std	Y+59, r18	; 0x3b
    5760:	3c af       	std	Y+60, r19	; 0x3c
    5762:	fc 01       	movw	r30, r24
    5764:	80 81       	ld	r24, Z
    5766:	91 81       	ldd	r25, Z+1	; 0x01
    5768:	a2 81       	ldd	r26, Z+2	; 0x02
    576a:	b3 81       	ldd	r27, Z+3	; 0x03
    576c:	8b 8f       	std	Y+27, r24	; 0x1b
    576e:	9c 8f       	std	Y+28, r25	; 0x1c
    5770:	ad 8f       	std	Y+29, r26	; 0x1d
    5772:	be 8f       	std	Y+30, r27	; 0x1e
    5774:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5776:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5778:	ad 8d       	ldd	r26, Y+29	; 0x1d
    577a:	be 8d       	ldd	r27, Y+30	; 0x1e
    577c:	ac 01       	movw	r20, r24
    577e:	bd 01       	movw	r22, r26
    5780:	8d e1       	ldi	r24, 0x1D	; 29
    5782:	9d e2       	ldi	r25, 0x2D	; 45
    5784:	0e 94 36 2e 	call	0x5c6c	; 0x5c6c <ftoa_sci>
    5788:	1f 86       	std	Y+15, r1	; 0x0f
    578a:	18 8a       	std	Y+16, r1	; 0x10
    578c:	15 c0       	rjmp	.+42     	; 0x57b8 <display_vprintf+0x388>
    578e:	29 81       	ldd	r18, Y+1	; 0x01
    5790:	3a 81       	ldd	r19, Y+2	; 0x02
    5792:	8f 85       	ldd	r24, Y+15	; 0x0f
    5794:	98 89       	ldd	r25, Y+16	; 0x10
    5796:	82 0f       	add	r24, r18
    5798:	93 1f       	adc	r25, r19
    579a:	2f 85       	ldd	r18, Y+15	; 0x0f
    579c:	38 89       	ldd	r19, Y+16	; 0x10
    579e:	23 5e       	subi	r18, 0xE3	; 227
    57a0:	32 4d       	sbci	r19, 0xD2	; 210
    57a2:	f9 01       	movw	r30, r18
    57a4:	20 81       	ld	r18, Z
    57a6:	8f 5c       	subi	r24, 0xCF	; 207
    57a8:	92 4d       	sbci	r25, 0xD2	; 210
    57aa:	fc 01       	movw	r30, r24
    57ac:	20 83       	st	Z, r18
    57ae:	8f 85       	ldd	r24, Y+15	; 0x0f
    57b0:	98 89       	ldd	r25, Y+16	; 0x10
    57b2:	01 96       	adiw	r24, 0x01	; 1
    57b4:	8f 87       	std	Y+15, r24	; 0x0f
    57b6:	98 8b       	std	Y+16, r25	; 0x10
    57b8:	8d e1       	ldi	r24, 0x1D	; 29
    57ba:	9d e2       	ldi	r25, 0x2D	; 45
    57bc:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    57c0:	9c 01       	movw	r18, r24
    57c2:	8f 85       	ldd	r24, Y+15	; 0x0f
    57c4:	98 89       	ldd	r25, Y+16	; 0x10
    57c6:	82 17       	cp	r24, r18
    57c8:	93 07       	cpc	r25, r19
    57ca:	08 f3       	brcs	.-62     	; 0x578e <display_vprintf+0x35e>
    57cc:	8d e1       	ldi	r24, 0x1D	; 29
    57ce:	9d e2       	ldi	r25, 0x2D	; 45
    57d0:	0e 94 00 32 	call	0x6400	; 0x6400 <strlen>
    57d4:	9c 01       	movw	r18, r24
    57d6:	89 81       	ldd	r24, Y+1	; 0x01
    57d8:	9a 81       	ldd	r25, Y+2	; 0x02
    57da:	82 0f       	add	r24, r18
    57dc:	93 1f       	adc	r25, r19
    57de:	89 83       	std	Y+1, r24	; 0x01
    57e0:	9a 83       	std	Y+2, r25	; 0x02
    57e2:	00 00       	nop
    57e4:	1a c0       	rjmp	.+52     	; 0x581a <display_vprintf+0x3ea>
    57e6:	89 81       	ldd	r24, Y+1	; 0x01
    57e8:	9a 81       	ldd	r25, Y+2	; 0x02
    57ea:	8f 5c       	subi	r24, 0xCF	; 207
    57ec:	92 4d       	sbci	r25, 0xD2	; 210
    57ee:	2d 89       	ldd	r18, Y+21	; 0x15
    57f0:	fc 01       	movw	r30, r24
    57f2:	20 83       	st	Z, r18
    57f4:	89 81       	ldd	r24, Y+1	; 0x01
    57f6:	9a 81       	ldd	r25, Y+2	; 0x02
    57f8:	8f 5c       	subi	r24, 0xCF	; 207
    57fa:	92 4d       	sbci	r25, 0xD2	; 210
    57fc:	fc 01       	movw	r30, r24
    57fe:	80 81       	ld	r24, Z
    5800:	8a 30       	cpi	r24, 0x0A	; 10
    5802:	31 f4       	brne	.+12     	; 0x5810 <display_vprintf+0x3e0>
    5804:	89 81       	ldd	r24, Y+1	; 0x01
    5806:	9a 81       	ldd	r25, Y+2	; 0x02
    5808:	8f 5c       	subi	r24, 0xCF	; 207
    580a:	92 4d       	sbci	r25, 0xD2	; 210
    580c:	fc 01       	movw	r30, r24
    580e:	10 82       	st	Z, r1
    5810:	89 81       	ldd	r24, Y+1	; 0x01
    5812:	9a 81       	ldd	r25, Y+2	; 0x02
    5814:	01 96       	adiw	r24, 0x01	; 1
    5816:	89 83       	std	Y+1, r24	; 0x01
    5818:	9a 83       	std	Y+2, r25	; 0x02
    581a:	89 ad       	ldd	r24, Y+57	; 0x39
    581c:	9a ad       	ldd	r25, Y+58	; 0x3a
    581e:	9c 01       	movw	r18, r24
    5820:	2f 5f       	subi	r18, 0xFF	; 255
    5822:	3f 4f       	sbci	r19, 0xFF	; 255
    5824:	29 af       	std	Y+57, r18	; 0x39
    5826:	3a af       	std	Y+58, r19	; 0x3a
    5828:	fc 01       	movw	r30, r24
    582a:	80 81       	ld	r24, Z
    582c:	8d 8b       	std	Y+21, r24	; 0x15
    582e:	8d 89       	ldd	r24, Y+21	; 0x15
    5830:	88 23       	and	r24, r24
    5832:	09 f0       	breq	.+2      	; 0x5836 <display_vprintf+0x406>
    5834:	34 ce       	rjmp	.-920    	; 0x549e <display_vprintf+0x6e>
    5836:	29 81       	ldd	r18, Y+1	; 0x01
    5838:	3a 81       	ldd	r19, Y+2	; 0x02
    583a:	8f a9       	ldd	r24, Y+55	; 0x37
    583c:	98 ad       	ldd	r25, Y+56	; 0x38
    583e:	82 0f       	add	r24, r18
    5840:	93 1f       	adc	r25, r19
    5842:	44 97       	sbiw	r24, 0x14	; 20
    5844:	54 f0       	brlt	.+20     	; 0x585a <display_vprintf+0x42a>
    5846:	24 e1       	ldi	r18, 0x14	; 20
    5848:	30 e0       	ldi	r19, 0x00	; 0
    584a:	8f a9       	ldd	r24, Y+55	; 0x37
    584c:	98 ad       	ldd	r25, Y+56	; 0x38
    584e:	a9 01       	movw	r20, r18
    5850:	48 1b       	sub	r20, r24
    5852:	59 0b       	sbc	r21, r25
    5854:	ca 01       	movw	r24, r20
    5856:	89 83       	std	Y+1, r24	; 0x01
    5858:	9a 83       	std	Y+2, r25	; 0x02
    585a:	19 8a       	std	Y+17, r1	; 0x11
    585c:	1a 8a       	std	Y+18, r1	; 0x12
    585e:	0e c0       	rjmp	.+28     	; 0x587c <display_vprintf+0x44c>
    5860:	9e 01       	movw	r18, r28
    5862:	2f 5d       	subi	r18, 0xDF	; 223
    5864:	3f 4f       	sbci	r19, 0xFF	; 255
    5866:	89 89       	ldd	r24, Y+17	; 0x11
    5868:	9a 89       	ldd	r25, Y+18	; 0x12
    586a:	82 0f       	add	r24, r18
    586c:	93 1f       	adc	r25, r19
    586e:	fc 01       	movw	r30, r24
    5870:	10 82       	st	Z, r1
    5872:	89 89       	ldd	r24, Y+17	; 0x11
    5874:	9a 89       	ldd	r25, Y+18	; 0x12
    5876:	01 96       	adiw	r24, 0x01	; 1
    5878:	89 8b       	std	Y+17, r24	; 0x11
    587a:	9a 8b       	std	Y+18, r25	; 0x12
    587c:	89 89       	ldd	r24, Y+17	; 0x11
    587e:	9a 89       	ldd	r25, Y+18	; 0x12
    5880:	44 97       	sbiw	r24, 0x14	; 20
    5882:	74 f3       	brlt	.-36     	; 0x5860 <display_vprintf+0x430>
    5884:	8d a9       	ldd	r24, Y+53	; 0x35
    5886:	8f 8f       	std	Y+31, r24	; 0x1f
    5888:	8f a9       	ldd	r24, Y+55	; 0x37
    588a:	88 a3       	std	Y+32, r24	; 0x20
    588c:	1b 8a       	std	Y+19, r1	; 0x13
    588e:	1c 8a       	std	Y+20, r1	; 0x14
    5890:	14 c0       	rjmp	.+40     	; 0x58ba <display_vprintf+0x48a>
    5892:	8b 89       	ldd	r24, Y+19	; 0x13
    5894:	9c 89       	ldd	r25, Y+20	; 0x14
    5896:	8f 5c       	subi	r24, 0xCF	; 207
    5898:	92 4d       	sbci	r25, 0xD2	; 210
    589a:	fc 01       	movw	r30, r24
    589c:	40 81       	ld	r20, Z
    589e:	9e 01       	movw	r18, r28
    58a0:	2f 5d       	subi	r18, 0xDF	; 223
    58a2:	3f 4f       	sbci	r19, 0xFF	; 255
    58a4:	8b 89       	ldd	r24, Y+19	; 0x13
    58a6:	9c 89       	ldd	r25, Y+20	; 0x14
    58a8:	82 0f       	add	r24, r18
    58aa:	93 1f       	adc	r25, r19
    58ac:	fc 01       	movw	r30, r24
    58ae:	40 83       	st	Z, r20
    58b0:	8b 89       	ldd	r24, Y+19	; 0x13
    58b2:	9c 89       	ldd	r25, Y+20	; 0x14
    58b4:	01 96       	adiw	r24, 0x01	; 1
    58b6:	8b 8b       	std	Y+19, r24	; 0x13
    58b8:	9c 8b       	std	Y+20, r25	; 0x14
    58ba:	2b 89       	ldd	r18, Y+19	; 0x13
    58bc:	3c 89       	ldd	r19, Y+20	; 0x14
    58be:	89 81       	ldd	r24, Y+1	; 0x01
    58c0:	9a 81       	ldd	r25, Y+2	; 0x02
    58c2:	28 17       	cp	r18, r24
    58c4:	39 07       	cpc	r19, r25
    58c6:	2c f3       	brlt	.-54     	; 0x5892 <display_vprintf+0x462>
    58c8:	80 91 4e 2d 	lds	r24, 0x2D4E	; 0x802d4e <displayLineQueue>
    58cc:	90 91 4f 2d 	lds	r25, 0x2D4F	; 0x802d4f <displayLineQueue+0x1>
    58d0:	be 01       	movw	r22, r28
    58d2:	61 5e       	subi	r22, 0xE1	; 225
    58d4:	7f 4f       	sbci	r23, 0xFF	; 255
    58d6:	00 e0       	ldi	r16, 0x00	; 0
    58d8:	2f ef       	ldi	r18, 0xFF	; 255
    58da:	3f ef       	ldi	r19, 0xFF	; 255
    58dc:	a9 01       	movw	r20, r18
    58de:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <xQueueGenericSend>
    58e2:	89 81       	ldd	r24, Y+1	; 0x01
    58e4:	9a 81       	ldd	r25, Y+2	; 0x02
    58e6:	ec 96       	adiw	r28, 0x3c	; 60
    58e8:	cd bf       	out	0x3d, r28	; 61
    58ea:	de bf       	out	0x3e, r29	; 62
    58ec:	df 91       	pop	r29
    58ee:	cf 91       	pop	r28
    58f0:	0f 91       	pop	r16
    58f2:	08 95       	ret

000058f4 <normalize>:
    58f4:	cf 93       	push	r28
    58f6:	df 93       	push	r29
    58f8:	cd b7       	in	r28, 0x3d	; 61
    58fa:	de b7       	in	r29, 0x3e	; 62
    58fc:	28 97       	sbiw	r28, 0x08	; 8
    58fe:	cd bf       	out	0x3d, r28	; 61
    5900:	de bf       	out	0x3e, r29	; 62
    5902:	8f 83       	std	Y+7, r24	; 0x07
    5904:	98 87       	std	Y+8, r25	; 0x08
    5906:	19 82       	std	Y+1, r1	; 0x01
    5908:	1a 82       	std	Y+2, r1	; 0x02
    590a:	8f 81       	ldd	r24, Y+7	; 0x07
    590c:	98 85       	ldd	r25, Y+8	; 0x08
    590e:	fc 01       	movw	r30, r24
    5910:	80 81       	ld	r24, Z
    5912:	91 81       	ldd	r25, Z+1	; 0x01
    5914:	a2 81       	ldd	r26, Z+2	; 0x02
    5916:	b3 81       	ldd	r27, Z+3	; 0x03
    5918:	8b 83       	std	Y+3, r24	; 0x03
    591a:	9c 83       	std	Y+4, r25	; 0x04
    591c:	ad 83       	std	Y+5, r26	; 0x05
    591e:	be 83       	std	Y+6, r27	; 0x06
    5920:	15 c0       	rjmp	.+42     	; 0x594c <normalize+0x58>
    5922:	20 e0       	ldi	r18, 0x00	; 0
    5924:	30 e0       	ldi	r19, 0x00	; 0
    5926:	40 e2       	ldi	r20, 0x20	; 32
    5928:	51 e4       	ldi	r21, 0x41	; 65
    592a:	6b 81       	ldd	r22, Y+3	; 0x03
    592c:	7c 81       	ldd	r23, Y+4	; 0x04
    592e:	8d 81       	ldd	r24, Y+5	; 0x05
    5930:	9e 81       	ldd	r25, Y+6	; 0x06
    5932:	0e 94 1c 30 	call	0x6038	; 0x6038 <__divsf3>
    5936:	dc 01       	movw	r26, r24
    5938:	cb 01       	movw	r24, r22
    593a:	8b 83       	std	Y+3, r24	; 0x03
    593c:	9c 83       	std	Y+4, r25	; 0x04
    593e:	ad 83       	std	Y+5, r26	; 0x05
    5940:	be 83       	std	Y+6, r27	; 0x06
    5942:	89 81       	ldd	r24, Y+1	; 0x01
    5944:	9a 81       	ldd	r25, Y+2	; 0x02
    5946:	01 96       	adiw	r24, 0x01	; 1
    5948:	89 83       	std	Y+1, r24	; 0x01
    594a:	9a 83       	std	Y+2, r25	; 0x02
    594c:	20 e0       	ldi	r18, 0x00	; 0
    594e:	30 e0       	ldi	r19, 0x00	; 0
    5950:	40 e8       	ldi	r20, 0x80	; 128
    5952:	5f e3       	ldi	r21, 0x3F	; 63
    5954:	6b 81       	ldd	r22, Y+3	; 0x03
    5956:	7c 81       	ldd	r23, Y+4	; 0x04
    5958:	8d 81       	ldd	r24, Y+5	; 0x05
    595a:	9e 81       	ldd	r25, Y+6	; 0x06
    595c:	0e 94 76 31 	call	0x62ec	; 0x62ec <__gesf2>
    5960:	88 23       	and	r24, r24
    5962:	fc f6       	brge	.-66     	; 0x5922 <normalize+0x2e>
    5964:	15 c0       	rjmp	.+42     	; 0x5990 <normalize+0x9c>
    5966:	20 e0       	ldi	r18, 0x00	; 0
    5968:	30 e0       	ldi	r19, 0x00	; 0
    596a:	40 e2       	ldi	r20, 0x20	; 32
    596c:	51 e4       	ldi	r21, 0x41	; 65
    596e:	6b 81       	ldd	r22, Y+3	; 0x03
    5970:	7c 81       	ldd	r23, Y+4	; 0x04
    5972:	8d 81       	ldd	r24, Y+5	; 0x05
    5974:	9e 81       	ldd	r25, Y+6	; 0x06
    5976:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    597a:	dc 01       	movw	r26, r24
    597c:	cb 01       	movw	r24, r22
    597e:	8b 83       	std	Y+3, r24	; 0x03
    5980:	9c 83       	std	Y+4, r25	; 0x04
    5982:	ad 83       	std	Y+5, r26	; 0x05
    5984:	be 83       	std	Y+6, r27	; 0x06
    5986:	89 81       	ldd	r24, Y+1	; 0x01
    5988:	9a 81       	ldd	r25, Y+2	; 0x02
    598a:	01 97       	sbiw	r24, 0x01	; 1
    598c:	89 83       	std	Y+1, r24	; 0x01
    598e:	9a 83       	std	Y+2, r25	; 0x02
    5990:	2d ec       	ldi	r18, 0xCD	; 205
    5992:	3c ec       	ldi	r19, 0xCC	; 204
    5994:	4c ec       	ldi	r20, 0xCC	; 204
    5996:	5d e3       	ldi	r21, 0x3D	; 61
    5998:	6b 81       	ldd	r22, Y+3	; 0x03
    599a:	7c 81       	ldd	r23, Y+4	; 0x04
    599c:	8d 81       	ldd	r24, Y+5	; 0x05
    599e:	9e 81       	ldd	r25, Y+6	; 0x06
    59a0:	0e 94 17 30 	call	0x602e	; 0x602e <__cmpsf2>
    59a4:	88 23       	and	r24, r24
    59a6:	fc f2       	brlt	.-66     	; 0x5966 <normalize+0x72>
    59a8:	2f 81       	ldd	r18, Y+7	; 0x07
    59aa:	38 85       	ldd	r19, Y+8	; 0x08
    59ac:	8b 81       	ldd	r24, Y+3	; 0x03
    59ae:	9c 81       	ldd	r25, Y+4	; 0x04
    59b0:	ad 81       	ldd	r26, Y+5	; 0x05
    59b2:	be 81       	ldd	r27, Y+6	; 0x06
    59b4:	f9 01       	movw	r30, r18
    59b6:	80 83       	st	Z, r24
    59b8:	91 83       	std	Z+1, r25	; 0x01
    59ba:	a2 83       	std	Z+2, r26	; 0x02
    59bc:	b3 83       	std	Z+3, r27	; 0x03
    59be:	89 81       	ldd	r24, Y+1	; 0x01
    59c0:	9a 81       	ldd	r25, Y+2	; 0x02
    59c2:	28 96       	adiw	r28, 0x08	; 8
    59c4:	cd bf       	out	0x3d, r28	; 61
    59c6:	de bf       	out	0x3e, r29	; 62
    59c8:	df 91       	pop	r29
    59ca:	cf 91       	pop	r28
    59cc:	08 95       	ret

000059ce <ftoa_fixed>:
    59ce:	cf 92       	push	r12
    59d0:	df 92       	push	r13
    59d2:	ef 92       	push	r14
    59d4:	ff 92       	push	r15
    59d6:	cf 93       	push	r28
    59d8:	df 93       	push	r29
    59da:	cd b7       	in	r28, 0x3d	; 61
    59dc:	de b7       	in	r29, 0x3e	; 62
    59de:	2e 97       	sbiw	r28, 0x0e	; 14
    59e0:	cd bf       	out	0x3d, r28	; 61
    59e2:	de bf       	out	0x3e, r29	; 62
    59e4:	89 87       	std	Y+9, r24	; 0x09
    59e6:	9a 87       	std	Y+10, r25	; 0x0a
    59e8:	4b 87       	std	Y+11, r20	; 0x0b
    59ea:	5c 87       	std	Y+12, r21	; 0x0c
    59ec:	6d 87       	std	Y+13, r22	; 0x0d
    59ee:	7e 87       	std	Y+14, r23	; 0x0e
    59f0:	19 82       	std	Y+1, r1	; 0x01
    59f2:	1a 82       	std	Y+2, r1	; 0x02
    59f4:	1b 82       	std	Y+3, r1	; 0x03
    59f6:	1c 82       	std	Y+4, r1	; 0x04
    59f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    59fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    59fc:	ad 85       	ldd	r26, Y+13	; 0x0d
    59fe:	be 85       	ldd	r27, Y+14	; 0x0e
    5a00:	20 e0       	ldi	r18, 0x00	; 0
    5a02:	30 e0       	ldi	r19, 0x00	; 0
    5a04:	a9 01       	movw	r20, r18
    5a06:	bc 01       	movw	r22, r24
    5a08:	cd 01       	movw	r24, r26
    5a0a:	0e 94 17 30 	call	0x602e	; 0x602e <__cmpsf2>
    5a0e:	88 23       	and	r24, r24
    5a10:	59 f4       	brne	.+22     	; 0x5a28 <ftoa_fixed+0x5a>
    5a12:	89 85       	ldd	r24, Y+9	; 0x09
    5a14:	9a 85       	ldd	r25, Y+10	; 0x0a
    5a16:	20 e3       	ldi	r18, 0x30	; 48
    5a18:	fc 01       	movw	r30, r24
    5a1a:	20 83       	st	Z, r18
    5a1c:	89 85       	ldd	r24, Y+9	; 0x09
    5a1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5a20:	01 96       	adiw	r24, 0x01	; 1
    5a22:	fc 01       	movw	r30, r24
    5a24:	10 82       	st	Z, r1
    5a26:	18 c1       	rjmp	.+560    	; 0x5c58 <ftoa_fixed+0x28a>
    5a28:	8b 85       	ldd	r24, Y+11	; 0x0b
    5a2a:	9c 85       	ldd	r25, Y+12	; 0x0c
    5a2c:	ad 85       	ldd	r26, Y+13	; 0x0d
    5a2e:	be 85       	ldd	r27, Y+14	; 0x0e
    5a30:	20 e0       	ldi	r18, 0x00	; 0
    5a32:	30 e0       	ldi	r19, 0x00	; 0
    5a34:	a9 01       	movw	r20, r18
    5a36:	bc 01       	movw	r22, r24
    5a38:	cd 01       	movw	r24, r26
    5a3a:	0e 94 17 30 	call	0x602e	; 0x602e <__cmpsf2>
    5a3e:	88 23       	and	r24, r24
    5a40:	9c f4       	brge	.+38     	; 0x5a68 <ftoa_fixed+0x9a>
    5a42:	89 85       	ldd	r24, Y+9	; 0x09
    5a44:	9a 85       	ldd	r25, Y+10	; 0x0a
    5a46:	9c 01       	movw	r18, r24
    5a48:	2f 5f       	subi	r18, 0xFF	; 255
    5a4a:	3f 4f       	sbci	r19, 0xFF	; 255
    5a4c:	29 87       	std	Y+9, r18	; 0x09
    5a4e:	3a 87       	std	Y+10, r19	; 0x0a
    5a50:	2d e2       	ldi	r18, 0x2D	; 45
    5a52:	fc 01       	movw	r30, r24
    5a54:	20 83       	st	Z, r18
    5a56:	8b 85       	ldd	r24, Y+11	; 0x0b
    5a58:	9c 85       	ldd	r25, Y+12	; 0x0c
    5a5a:	ad 85       	ldd	r26, Y+13	; 0x0d
    5a5c:	be 85       	ldd	r27, Y+14	; 0x0e
    5a5e:	b0 58       	subi	r27, 0x80	; 128
    5a60:	8b 87       	std	Y+11, r24	; 0x0b
    5a62:	9c 87       	std	Y+12, r25	; 0x0c
    5a64:	ad 87       	std	Y+13, r26	; 0x0d
    5a66:	be 87       	std	Y+14, r27	; 0x0e
    5a68:	ce 01       	movw	r24, r28
    5a6a:	0b 96       	adiw	r24, 0x0b	; 11
    5a6c:	0e 94 7a 2c 	call	0x58f4	; 0x58f4 <normalize>
    5a70:	89 83       	std	Y+1, r24	; 0x01
    5a72:	9a 83       	std	Y+2, r25	; 0x02
    5a74:	53 c0       	rjmp	.+166    	; 0x5b1c <ftoa_fixed+0x14e>
    5a76:	8b 85       	ldd	r24, Y+11	; 0x0b
    5a78:	9c 85       	ldd	r25, Y+12	; 0x0c
    5a7a:	ad 85       	ldd	r26, Y+13	; 0x0d
    5a7c:	be 85       	ldd	r27, Y+14	; 0x0e
    5a7e:	20 e0       	ldi	r18, 0x00	; 0
    5a80:	30 e0       	ldi	r19, 0x00	; 0
    5a82:	40 e2       	ldi	r20, 0x20	; 32
    5a84:	51 e4       	ldi	r21, 0x41	; 65
    5a86:	bc 01       	movw	r22, r24
    5a88:	cd 01       	movw	r24, r26
    5a8a:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5a8e:	dc 01       	movw	r26, r24
    5a90:	cb 01       	movw	r24, r22
    5a92:	bc 01       	movw	r22, r24
    5a94:	cd 01       	movw	r24, r26
    5a96:	0e 94 8e 30 	call	0x611c	; 0x611c <__fixsfsi>
    5a9a:	dc 01       	movw	r26, r24
    5a9c:	cb 01       	movw	r24, r22
    5a9e:	8d 83       	std	Y+5, r24	; 0x05
    5aa0:	9e 83       	std	Y+6, r25	; 0x06
    5aa2:	89 85       	ldd	r24, Y+9	; 0x09
    5aa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    5aa6:	9c 01       	movw	r18, r24
    5aa8:	2f 5f       	subi	r18, 0xFF	; 255
    5aaa:	3f 4f       	sbci	r19, 0xFF	; 255
    5aac:	29 87       	std	Y+9, r18	; 0x09
    5aae:	3a 87       	std	Y+10, r19	; 0x0a
    5ab0:	2d 81       	ldd	r18, Y+5	; 0x05
    5ab2:	20 5d       	subi	r18, 0xD0	; 208
    5ab4:	fc 01       	movw	r30, r24
    5ab6:	20 83       	st	Z, r18
    5ab8:	8b 85       	ldd	r24, Y+11	; 0x0b
    5aba:	9c 85       	ldd	r25, Y+12	; 0x0c
    5abc:	ad 85       	ldd	r26, Y+13	; 0x0d
    5abe:	be 85       	ldd	r27, Y+14	; 0x0e
    5ac0:	20 e0       	ldi	r18, 0x00	; 0
    5ac2:	30 e0       	ldi	r19, 0x00	; 0
    5ac4:	40 e2       	ldi	r20, 0x20	; 32
    5ac6:	51 e4       	ldi	r21, 0x41	; 65
    5ac8:	bc 01       	movw	r22, r24
    5aca:	cd 01       	movw	r24, r26
    5acc:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5ad0:	dc 01       	movw	r26, r24
    5ad2:	cb 01       	movw	r24, r22
    5ad4:	6c 01       	movw	r12, r24
    5ad6:	7d 01       	movw	r14, r26
    5ad8:	8d 81       	ldd	r24, Y+5	; 0x05
    5ada:	9e 81       	ldd	r25, Y+6	; 0x06
    5adc:	09 2e       	mov	r0, r25
    5ade:	00 0c       	add	r0, r0
    5ae0:	aa 0b       	sbc	r26, r26
    5ae2:	bb 0b       	sbc	r27, r27
    5ae4:	bc 01       	movw	r22, r24
    5ae6:	cd 01       	movw	r24, r26
    5ae8:	0e 94 c6 30 	call	0x618c	; 0x618c <__floatsisf>
    5aec:	dc 01       	movw	r26, r24
    5aee:	cb 01       	movw	r24, r22
    5af0:	9c 01       	movw	r18, r24
    5af2:	ad 01       	movw	r20, r26
    5af4:	c7 01       	movw	r24, r14
    5af6:	b6 01       	movw	r22, r12
    5af8:	0e 94 aa 2f 	call	0x5f54	; 0x5f54 <__subsf3>
    5afc:	dc 01       	movw	r26, r24
    5afe:	cb 01       	movw	r24, r22
    5b00:	8b 87       	std	Y+11, r24	; 0x0b
    5b02:	9c 87       	std	Y+12, r25	; 0x0c
    5b04:	ad 87       	std	Y+13, r26	; 0x0d
    5b06:	be 87       	std	Y+14, r27	; 0x0e
    5b08:	8b 81       	ldd	r24, Y+3	; 0x03
    5b0a:	9c 81       	ldd	r25, Y+4	; 0x04
    5b0c:	01 96       	adiw	r24, 0x01	; 1
    5b0e:	8b 83       	std	Y+3, r24	; 0x03
    5b10:	9c 83       	std	Y+4, r25	; 0x04
    5b12:	89 81       	ldd	r24, Y+1	; 0x01
    5b14:	9a 81       	ldd	r25, Y+2	; 0x02
    5b16:	01 97       	sbiw	r24, 0x01	; 1
    5b18:	89 83       	std	Y+1, r24	; 0x01
    5b1a:	9a 83       	std	Y+2, r25	; 0x02
    5b1c:	89 81       	ldd	r24, Y+1	; 0x01
    5b1e:	9a 81       	ldd	r25, Y+2	; 0x02
    5b20:	18 16       	cp	r1, r24
    5b22:	19 06       	cpc	r1, r25
    5b24:	0c f4       	brge	.+2      	; 0x5b28 <ftoa_fixed+0x15a>
    5b26:	a7 cf       	rjmp	.-178    	; 0x5a76 <ftoa_fixed+0xa8>
    5b28:	8b 81       	ldd	r24, Y+3	; 0x03
    5b2a:	9c 81       	ldd	r25, Y+4	; 0x04
    5b2c:	89 2b       	or	r24, r25
    5b2e:	51 f4       	brne	.+20     	; 0x5b44 <ftoa_fixed+0x176>
    5b30:	89 85       	ldd	r24, Y+9	; 0x09
    5b32:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b34:	9c 01       	movw	r18, r24
    5b36:	2f 5f       	subi	r18, 0xFF	; 255
    5b38:	3f 4f       	sbci	r19, 0xFF	; 255
    5b3a:	29 87       	std	Y+9, r18	; 0x09
    5b3c:	3a 87       	std	Y+10, r19	; 0x0a
    5b3e:	20 e3       	ldi	r18, 0x30	; 48
    5b40:	fc 01       	movw	r30, r24
    5b42:	20 83       	st	Z, r18
    5b44:	89 85       	ldd	r24, Y+9	; 0x09
    5b46:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b48:	9c 01       	movw	r18, r24
    5b4a:	2f 5f       	subi	r18, 0xFF	; 255
    5b4c:	3f 4f       	sbci	r19, 0xFF	; 255
    5b4e:	29 87       	std	Y+9, r18	; 0x09
    5b50:	3a 87       	std	Y+10, r19	; 0x0a
    5b52:	2e e2       	ldi	r18, 0x2E	; 46
    5b54:	fc 01       	movw	r30, r24
    5b56:	20 83       	st	Z, r18
    5b58:	14 c0       	rjmp	.+40     	; 0x5b82 <ftoa_fixed+0x1b4>
    5b5a:	89 85       	ldd	r24, Y+9	; 0x09
    5b5c:	9a 85       	ldd	r25, Y+10	; 0x0a
    5b5e:	9c 01       	movw	r18, r24
    5b60:	2f 5f       	subi	r18, 0xFF	; 255
    5b62:	3f 4f       	sbci	r19, 0xFF	; 255
    5b64:	29 87       	std	Y+9, r18	; 0x09
    5b66:	3a 87       	std	Y+10, r19	; 0x0a
    5b68:	20 e3       	ldi	r18, 0x30	; 48
    5b6a:	fc 01       	movw	r30, r24
    5b6c:	20 83       	st	Z, r18
    5b6e:	89 81       	ldd	r24, Y+1	; 0x01
    5b70:	9a 81       	ldd	r25, Y+2	; 0x02
    5b72:	01 97       	sbiw	r24, 0x01	; 1
    5b74:	89 83       	std	Y+1, r24	; 0x01
    5b76:	9a 83       	std	Y+2, r25	; 0x02
    5b78:	8b 81       	ldd	r24, Y+3	; 0x03
    5b7a:	9c 81       	ldd	r25, Y+4	; 0x04
    5b7c:	01 96       	adiw	r24, 0x01	; 1
    5b7e:	8b 83       	std	Y+3, r24	; 0x03
    5b80:	9c 83       	std	Y+4, r25	; 0x04
    5b82:	89 81       	ldd	r24, Y+1	; 0x01
    5b84:	9a 81       	ldd	r25, Y+2	; 0x02
    5b86:	99 23       	and	r25, r25
    5b88:	0c f0       	brlt	.+2      	; 0x5b8c <ftoa_fixed+0x1be>
    5b8a:	58 c0       	rjmp	.+176    	; 0x5c3c <ftoa_fixed+0x26e>
    5b8c:	80 91 bc 20 	lds	r24, 0x20BC	; 0x8020bc <width.5062>
    5b90:	90 91 bd 20 	lds	r25, 0x20BD	; 0x8020bd <width.5062+0x1>
    5b94:	2b 81       	ldd	r18, Y+3	; 0x03
    5b96:	3c 81       	ldd	r19, Y+4	; 0x04
    5b98:	28 17       	cp	r18, r24
    5b9a:	39 07       	cpc	r19, r25
    5b9c:	f4 f2       	brlt	.-68     	; 0x5b5a <ftoa_fixed+0x18c>
    5b9e:	4e c0       	rjmp	.+156    	; 0x5c3c <ftoa_fixed+0x26e>
    5ba0:	8b 85       	ldd	r24, Y+11	; 0x0b
    5ba2:	9c 85       	ldd	r25, Y+12	; 0x0c
    5ba4:	ad 85       	ldd	r26, Y+13	; 0x0d
    5ba6:	be 85       	ldd	r27, Y+14	; 0x0e
    5ba8:	20 e0       	ldi	r18, 0x00	; 0
    5baa:	30 e0       	ldi	r19, 0x00	; 0
    5bac:	40 e2       	ldi	r20, 0x20	; 32
    5bae:	51 e4       	ldi	r21, 0x41	; 65
    5bb0:	bc 01       	movw	r22, r24
    5bb2:	cd 01       	movw	r24, r26
    5bb4:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5bb8:	dc 01       	movw	r26, r24
    5bba:	cb 01       	movw	r24, r22
    5bbc:	bc 01       	movw	r22, r24
    5bbe:	cd 01       	movw	r24, r26
    5bc0:	0e 94 8e 30 	call	0x611c	; 0x611c <__fixsfsi>
    5bc4:	dc 01       	movw	r26, r24
    5bc6:	cb 01       	movw	r24, r22
    5bc8:	8f 83       	std	Y+7, r24	; 0x07
    5bca:	98 87       	std	Y+8, r25	; 0x08
    5bcc:	89 85       	ldd	r24, Y+9	; 0x09
    5bce:	9a 85       	ldd	r25, Y+10	; 0x0a
    5bd0:	9c 01       	movw	r18, r24
    5bd2:	2f 5f       	subi	r18, 0xFF	; 255
    5bd4:	3f 4f       	sbci	r19, 0xFF	; 255
    5bd6:	29 87       	std	Y+9, r18	; 0x09
    5bd8:	3a 87       	std	Y+10, r19	; 0x0a
    5bda:	2f 81       	ldd	r18, Y+7	; 0x07
    5bdc:	20 5d       	subi	r18, 0xD0	; 208
    5bde:	fc 01       	movw	r30, r24
    5be0:	20 83       	st	Z, r18
    5be2:	8b 85       	ldd	r24, Y+11	; 0x0b
    5be4:	9c 85       	ldd	r25, Y+12	; 0x0c
    5be6:	ad 85       	ldd	r26, Y+13	; 0x0d
    5be8:	be 85       	ldd	r27, Y+14	; 0x0e
    5bea:	20 e0       	ldi	r18, 0x00	; 0
    5bec:	30 e0       	ldi	r19, 0x00	; 0
    5bee:	40 e2       	ldi	r20, 0x20	; 32
    5bf0:	51 e4       	ldi	r21, 0x41	; 65
    5bf2:	bc 01       	movw	r22, r24
    5bf4:	cd 01       	movw	r24, r26
    5bf6:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5bfa:	dc 01       	movw	r26, r24
    5bfc:	cb 01       	movw	r24, r22
    5bfe:	6c 01       	movw	r12, r24
    5c00:	7d 01       	movw	r14, r26
    5c02:	8f 81       	ldd	r24, Y+7	; 0x07
    5c04:	98 85       	ldd	r25, Y+8	; 0x08
    5c06:	09 2e       	mov	r0, r25
    5c08:	00 0c       	add	r0, r0
    5c0a:	aa 0b       	sbc	r26, r26
    5c0c:	bb 0b       	sbc	r27, r27
    5c0e:	bc 01       	movw	r22, r24
    5c10:	cd 01       	movw	r24, r26
    5c12:	0e 94 c6 30 	call	0x618c	; 0x618c <__floatsisf>
    5c16:	dc 01       	movw	r26, r24
    5c18:	cb 01       	movw	r24, r22
    5c1a:	9c 01       	movw	r18, r24
    5c1c:	ad 01       	movw	r20, r26
    5c1e:	c7 01       	movw	r24, r14
    5c20:	b6 01       	movw	r22, r12
    5c22:	0e 94 aa 2f 	call	0x5f54	; 0x5f54 <__subsf3>
    5c26:	dc 01       	movw	r26, r24
    5c28:	cb 01       	movw	r24, r22
    5c2a:	8b 87       	std	Y+11, r24	; 0x0b
    5c2c:	9c 87       	std	Y+12, r25	; 0x0c
    5c2e:	ad 87       	std	Y+13, r26	; 0x0d
    5c30:	be 87       	std	Y+14, r27	; 0x0e
    5c32:	8b 81       	ldd	r24, Y+3	; 0x03
    5c34:	9c 81       	ldd	r25, Y+4	; 0x04
    5c36:	01 96       	adiw	r24, 0x01	; 1
    5c38:	8b 83       	std	Y+3, r24	; 0x03
    5c3a:	9c 83       	std	Y+4, r25	; 0x04
    5c3c:	80 91 bc 20 	lds	r24, 0x20BC	; 0x8020bc <width.5062>
    5c40:	90 91 bd 20 	lds	r25, 0x20BD	; 0x8020bd <width.5062+0x1>
    5c44:	2b 81       	ldd	r18, Y+3	; 0x03
    5c46:	3c 81       	ldd	r19, Y+4	; 0x04
    5c48:	28 17       	cp	r18, r24
    5c4a:	39 07       	cpc	r19, r25
    5c4c:	0c f4       	brge	.+2      	; 0x5c50 <ftoa_fixed+0x282>
    5c4e:	a8 cf       	rjmp	.-176    	; 0x5ba0 <ftoa_fixed+0x1d2>
    5c50:	89 85       	ldd	r24, Y+9	; 0x09
    5c52:	9a 85       	ldd	r25, Y+10	; 0x0a
    5c54:	fc 01       	movw	r30, r24
    5c56:	10 82       	st	Z, r1
    5c58:	2e 96       	adiw	r28, 0x0e	; 14
    5c5a:	cd bf       	out	0x3d, r28	; 61
    5c5c:	de bf       	out	0x3e, r29	; 62
    5c5e:	df 91       	pop	r29
    5c60:	cf 91       	pop	r28
    5c62:	ff 90       	pop	r15
    5c64:	ef 90       	pop	r14
    5c66:	df 90       	pop	r13
    5c68:	cf 90       	pop	r12
    5c6a:	08 95       	ret

00005c6c <ftoa_sci>:
    5c6c:	cf 92       	push	r12
    5c6e:	df 92       	push	r13
    5c70:	ef 92       	push	r14
    5c72:	ff 92       	push	r15
    5c74:	cf 93       	push	r28
    5c76:	df 93       	push	r29
    5c78:	cd b7       	in	r28, 0x3d	; 61
    5c7a:	de b7       	in	r29, 0x3e	; 62
    5c7c:	2e 97       	sbiw	r28, 0x0e	; 14
    5c7e:	cd bf       	out	0x3d, r28	; 61
    5c80:	de bf       	out	0x3e, r29	; 62
    5c82:	89 87       	std	Y+9, r24	; 0x09
    5c84:	9a 87       	std	Y+10, r25	; 0x0a
    5c86:	4b 87       	std	Y+11, r20	; 0x0b
    5c88:	5c 87       	std	Y+12, r21	; 0x0c
    5c8a:	6d 87       	std	Y+13, r22	; 0x0d
    5c8c:	7e 87       	std	Y+14, r23	; 0x0e
    5c8e:	1b 82       	std	Y+3, r1	; 0x03
    5c90:	1c 82       	std	Y+4, r1	; 0x04
    5c92:	8b 85       	ldd	r24, Y+11	; 0x0b
    5c94:	9c 85       	ldd	r25, Y+12	; 0x0c
    5c96:	ad 85       	ldd	r26, Y+13	; 0x0d
    5c98:	be 85       	ldd	r27, Y+14	; 0x0e
    5c9a:	20 e0       	ldi	r18, 0x00	; 0
    5c9c:	30 e0       	ldi	r19, 0x00	; 0
    5c9e:	a9 01       	movw	r20, r18
    5ca0:	bc 01       	movw	r22, r24
    5ca2:	cd 01       	movw	r24, r26
    5ca4:	0e 94 17 30 	call	0x602e	; 0x602e <__cmpsf2>
    5ca8:	88 23       	and	r24, r24
    5caa:	59 f4       	brne	.+22     	; 0x5cc2 <ftoa_sci+0x56>
    5cac:	89 85       	ldd	r24, Y+9	; 0x09
    5cae:	9a 85       	ldd	r25, Y+10	; 0x0a
    5cb0:	20 e3       	ldi	r18, 0x30	; 48
    5cb2:	fc 01       	movw	r30, r24
    5cb4:	20 83       	st	Z, r18
    5cb6:	89 85       	ldd	r24, Y+9	; 0x09
    5cb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    5cba:	01 96       	adiw	r24, 0x01	; 1
    5cbc:	fc 01       	movw	r30, r24
    5cbe:	10 82       	st	Z, r1
    5cc0:	ec c0       	rjmp	.+472    	; 0x5e9a <ftoa_sci+0x22e>
    5cc2:	8b 85       	ldd	r24, Y+11	; 0x0b
    5cc4:	9c 85       	ldd	r25, Y+12	; 0x0c
    5cc6:	ad 85       	ldd	r26, Y+13	; 0x0d
    5cc8:	be 85       	ldd	r27, Y+14	; 0x0e
    5cca:	20 e0       	ldi	r18, 0x00	; 0
    5ccc:	30 e0       	ldi	r19, 0x00	; 0
    5cce:	a9 01       	movw	r20, r18
    5cd0:	bc 01       	movw	r22, r24
    5cd2:	cd 01       	movw	r24, r26
    5cd4:	0e 94 17 30 	call	0x602e	; 0x602e <__cmpsf2>
    5cd8:	88 23       	and	r24, r24
    5cda:	9c f4       	brge	.+38     	; 0x5d02 <ftoa_sci+0x96>
    5cdc:	89 85       	ldd	r24, Y+9	; 0x09
    5cde:	9a 85       	ldd	r25, Y+10	; 0x0a
    5ce0:	9c 01       	movw	r18, r24
    5ce2:	2f 5f       	subi	r18, 0xFF	; 255
    5ce4:	3f 4f       	sbci	r19, 0xFF	; 255
    5ce6:	29 87       	std	Y+9, r18	; 0x09
    5ce8:	3a 87       	std	Y+10, r19	; 0x0a
    5cea:	2d e2       	ldi	r18, 0x2D	; 45
    5cec:	fc 01       	movw	r30, r24
    5cee:	20 83       	st	Z, r18
    5cf0:	8b 85       	ldd	r24, Y+11	; 0x0b
    5cf2:	9c 85       	ldd	r25, Y+12	; 0x0c
    5cf4:	ad 85       	ldd	r26, Y+13	; 0x0d
    5cf6:	be 85       	ldd	r27, Y+14	; 0x0e
    5cf8:	b0 58       	subi	r27, 0x80	; 128
    5cfa:	8b 87       	std	Y+11, r24	; 0x0b
    5cfc:	9c 87       	std	Y+12, r25	; 0x0c
    5cfe:	ad 87       	std	Y+13, r26	; 0x0d
    5d00:	be 87       	std	Y+14, r27	; 0x0e
    5d02:	ce 01       	movw	r24, r28
    5d04:	0b 96       	adiw	r24, 0x0b	; 11
    5d06:	0e 94 7a 2c 	call	0x58f4	; 0x58f4 <normalize>
    5d0a:	8b 83       	std	Y+3, r24	; 0x03
    5d0c:	9c 83       	std	Y+4, r25	; 0x04
    5d0e:	8b 85       	ldd	r24, Y+11	; 0x0b
    5d10:	9c 85       	ldd	r25, Y+12	; 0x0c
    5d12:	ad 85       	ldd	r26, Y+13	; 0x0d
    5d14:	be 85       	ldd	r27, Y+14	; 0x0e
    5d16:	20 e0       	ldi	r18, 0x00	; 0
    5d18:	30 e0       	ldi	r19, 0x00	; 0
    5d1a:	40 e2       	ldi	r20, 0x20	; 32
    5d1c:	51 e4       	ldi	r21, 0x41	; 65
    5d1e:	bc 01       	movw	r22, r24
    5d20:	cd 01       	movw	r24, r26
    5d22:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5d26:	dc 01       	movw	r26, r24
    5d28:	cb 01       	movw	r24, r22
    5d2a:	bc 01       	movw	r22, r24
    5d2c:	cd 01       	movw	r24, r26
    5d2e:	0e 94 8e 30 	call	0x611c	; 0x611c <__fixsfsi>
    5d32:	dc 01       	movw	r26, r24
    5d34:	cb 01       	movw	r24, r22
    5d36:	8d 83       	std	Y+5, r24	; 0x05
    5d38:	9e 83       	std	Y+6, r25	; 0x06
    5d3a:	89 85       	ldd	r24, Y+9	; 0x09
    5d3c:	9a 85       	ldd	r25, Y+10	; 0x0a
    5d3e:	9c 01       	movw	r18, r24
    5d40:	2f 5f       	subi	r18, 0xFF	; 255
    5d42:	3f 4f       	sbci	r19, 0xFF	; 255
    5d44:	29 87       	std	Y+9, r18	; 0x09
    5d46:	3a 87       	std	Y+10, r19	; 0x0a
    5d48:	2d 81       	ldd	r18, Y+5	; 0x05
    5d4a:	20 5d       	subi	r18, 0xD0	; 208
    5d4c:	fc 01       	movw	r30, r24
    5d4e:	20 83       	st	Z, r18
    5d50:	8b 85       	ldd	r24, Y+11	; 0x0b
    5d52:	9c 85       	ldd	r25, Y+12	; 0x0c
    5d54:	ad 85       	ldd	r26, Y+13	; 0x0d
    5d56:	be 85       	ldd	r27, Y+14	; 0x0e
    5d58:	20 e0       	ldi	r18, 0x00	; 0
    5d5a:	30 e0       	ldi	r19, 0x00	; 0
    5d5c:	40 e2       	ldi	r20, 0x20	; 32
    5d5e:	51 e4       	ldi	r21, 0x41	; 65
    5d60:	bc 01       	movw	r22, r24
    5d62:	cd 01       	movw	r24, r26
    5d64:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5d68:	dc 01       	movw	r26, r24
    5d6a:	cb 01       	movw	r24, r22
    5d6c:	6c 01       	movw	r12, r24
    5d6e:	7d 01       	movw	r14, r26
    5d70:	8d 81       	ldd	r24, Y+5	; 0x05
    5d72:	9e 81       	ldd	r25, Y+6	; 0x06
    5d74:	09 2e       	mov	r0, r25
    5d76:	00 0c       	add	r0, r0
    5d78:	aa 0b       	sbc	r26, r26
    5d7a:	bb 0b       	sbc	r27, r27
    5d7c:	bc 01       	movw	r22, r24
    5d7e:	cd 01       	movw	r24, r26
    5d80:	0e 94 c6 30 	call	0x618c	; 0x618c <__floatsisf>
    5d84:	dc 01       	movw	r26, r24
    5d86:	cb 01       	movw	r24, r22
    5d88:	9c 01       	movw	r18, r24
    5d8a:	ad 01       	movw	r20, r26
    5d8c:	c7 01       	movw	r24, r14
    5d8e:	b6 01       	movw	r22, r12
    5d90:	0e 94 aa 2f 	call	0x5f54	; 0x5f54 <__subsf3>
    5d94:	dc 01       	movw	r26, r24
    5d96:	cb 01       	movw	r24, r22
    5d98:	8b 87       	std	Y+11, r24	; 0x0b
    5d9a:	9c 87       	std	Y+12, r25	; 0x0c
    5d9c:	ad 87       	std	Y+13, r26	; 0x0d
    5d9e:	be 87       	std	Y+14, r27	; 0x0e
    5da0:	8b 81       	ldd	r24, Y+3	; 0x03
    5da2:	9c 81       	ldd	r25, Y+4	; 0x04
    5da4:	01 97       	sbiw	r24, 0x01	; 1
    5da6:	8b 83       	std	Y+3, r24	; 0x03
    5da8:	9c 83       	std	Y+4, r25	; 0x04
    5daa:	89 85       	ldd	r24, Y+9	; 0x09
    5dac:	9a 85       	ldd	r25, Y+10	; 0x0a
    5dae:	9c 01       	movw	r18, r24
    5db0:	2f 5f       	subi	r18, 0xFF	; 255
    5db2:	3f 4f       	sbci	r19, 0xFF	; 255
    5db4:	29 87       	std	Y+9, r18	; 0x09
    5db6:	3a 87       	std	Y+10, r19	; 0x0a
    5db8:	2e e2       	ldi	r18, 0x2E	; 46
    5dba:	fc 01       	movw	r30, r24
    5dbc:	20 83       	st	Z, r18
    5dbe:	19 82       	std	Y+1, r1	; 0x01
    5dc0:	1a 82       	std	Y+2, r1	; 0x02
    5dc2:	4e c0       	rjmp	.+156    	; 0x5e60 <ftoa_sci+0x1f4>
    5dc4:	8b 85       	ldd	r24, Y+11	; 0x0b
    5dc6:	9c 85       	ldd	r25, Y+12	; 0x0c
    5dc8:	ad 85       	ldd	r26, Y+13	; 0x0d
    5dca:	be 85       	ldd	r27, Y+14	; 0x0e
    5dcc:	20 e0       	ldi	r18, 0x00	; 0
    5dce:	30 e0       	ldi	r19, 0x00	; 0
    5dd0:	40 e2       	ldi	r20, 0x20	; 32
    5dd2:	51 e4       	ldi	r21, 0x41	; 65
    5dd4:	bc 01       	movw	r22, r24
    5dd6:	cd 01       	movw	r24, r26
    5dd8:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5ddc:	dc 01       	movw	r26, r24
    5dde:	cb 01       	movw	r24, r22
    5de0:	bc 01       	movw	r22, r24
    5de2:	cd 01       	movw	r24, r26
    5de4:	0e 94 8e 30 	call	0x611c	; 0x611c <__fixsfsi>
    5de8:	dc 01       	movw	r26, r24
    5dea:	cb 01       	movw	r24, r22
    5dec:	8f 83       	std	Y+7, r24	; 0x07
    5dee:	98 87       	std	Y+8, r25	; 0x08
    5df0:	89 85       	ldd	r24, Y+9	; 0x09
    5df2:	9a 85       	ldd	r25, Y+10	; 0x0a
    5df4:	9c 01       	movw	r18, r24
    5df6:	2f 5f       	subi	r18, 0xFF	; 255
    5df8:	3f 4f       	sbci	r19, 0xFF	; 255
    5dfa:	29 87       	std	Y+9, r18	; 0x09
    5dfc:	3a 87       	std	Y+10, r19	; 0x0a
    5dfe:	2f 81       	ldd	r18, Y+7	; 0x07
    5e00:	20 5d       	subi	r18, 0xD0	; 208
    5e02:	fc 01       	movw	r30, r24
    5e04:	20 83       	st	Z, r18
    5e06:	8b 85       	ldd	r24, Y+11	; 0x0b
    5e08:	9c 85       	ldd	r25, Y+12	; 0x0c
    5e0a:	ad 85       	ldd	r26, Y+13	; 0x0d
    5e0c:	be 85       	ldd	r27, Y+14	; 0x0e
    5e0e:	20 e0       	ldi	r18, 0x00	; 0
    5e10:	30 e0       	ldi	r19, 0x00	; 0
    5e12:	40 e2       	ldi	r20, 0x20	; 32
    5e14:	51 e4       	ldi	r21, 0x41	; 65
    5e16:	bc 01       	movw	r22, r24
    5e18:	cd 01       	movw	r24, r26
    5e1a:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__mulsf3>
    5e1e:	dc 01       	movw	r26, r24
    5e20:	cb 01       	movw	r24, r22
    5e22:	6c 01       	movw	r12, r24
    5e24:	7d 01       	movw	r14, r26
    5e26:	8f 81       	ldd	r24, Y+7	; 0x07
    5e28:	98 85       	ldd	r25, Y+8	; 0x08
    5e2a:	09 2e       	mov	r0, r25
    5e2c:	00 0c       	add	r0, r0
    5e2e:	aa 0b       	sbc	r26, r26
    5e30:	bb 0b       	sbc	r27, r27
    5e32:	bc 01       	movw	r22, r24
    5e34:	cd 01       	movw	r24, r26
    5e36:	0e 94 c6 30 	call	0x618c	; 0x618c <__floatsisf>
    5e3a:	dc 01       	movw	r26, r24
    5e3c:	cb 01       	movw	r24, r22
    5e3e:	9c 01       	movw	r18, r24
    5e40:	ad 01       	movw	r20, r26
    5e42:	c7 01       	movw	r24, r14
    5e44:	b6 01       	movw	r22, r12
    5e46:	0e 94 aa 2f 	call	0x5f54	; 0x5f54 <__subsf3>
    5e4a:	dc 01       	movw	r26, r24
    5e4c:	cb 01       	movw	r24, r22
    5e4e:	8b 87       	std	Y+11, r24	; 0x0b
    5e50:	9c 87       	std	Y+12, r25	; 0x0c
    5e52:	ad 87       	std	Y+13, r26	; 0x0d
    5e54:	be 87       	std	Y+14, r27	; 0x0e
    5e56:	89 81       	ldd	r24, Y+1	; 0x01
    5e58:	9a 81       	ldd	r25, Y+2	; 0x02
    5e5a:	01 96       	adiw	r24, 0x01	; 1
    5e5c:	89 83       	std	Y+1, r24	; 0x01
    5e5e:	9a 83       	std	Y+2, r25	; 0x02
    5e60:	80 91 be 20 	lds	r24, 0x20BE	; 0x8020be <width.5079>
    5e64:	90 91 bf 20 	lds	r25, 0x20BF	; 0x8020bf <width.5079+0x1>
    5e68:	29 81       	ldd	r18, Y+1	; 0x01
    5e6a:	3a 81       	ldd	r19, Y+2	; 0x02
    5e6c:	28 17       	cp	r18, r24
    5e6e:	39 07       	cpc	r19, r25
    5e70:	0c f4       	brge	.+2      	; 0x5e74 <ftoa_sci+0x208>
    5e72:	a8 cf       	rjmp	.-176    	; 0x5dc4 <ftoa_sci+0x158>
    5e74:	89 85       	ldd	r24, Y+9	; 0x09
    5e76:	9a 85       	ldd	r25, Y+10	; 0x0a
    5e78:	9c 01       	movw	r18, r24
    5e7a:	2f 5f       	subi	r18, 0xFF	; 255
    5e7c:	3f 4f       	sbci	r19, 0xFF	; 255
    5e7e:	29 87       	std	Y+9, r18	; 0x09
    5e80:	3a 87       	std	Y+10, r19	; 0x0a
    5e82:	25 e6       	ldi	r18, 0x65	; 101
    5e84:	fc 01       	movw	r30, r24
    5e86:	20 83       	st	Z, r18
    5e88:	29 85       	ldd	r18, Y+9	; 0x09
    5e8a:	3a 85       	ldd	r19, Y+10	; 0x0a
    5e8c:	8b 81       	ldd	r24, Y+3	; 0x03
    5e8e:	9c 81       	ldd	r25, Y+4	; 0x04
    5e90:	4a e0       	ldi	r20, 0x0A	; 10
    5e92:	50 e0       	ldi	r21, 0x00	; 0
    5e94:	b9 01       	movw	r22, r18
    5e96:	0e 94 09 32 	call	0x6412	; 0x6412 <itoa>
    5e9a:	2e 96       	adiw	r28, 0x0e	; 14
    5e9c:	cd bf       	out	0x3d, r28	; 61
    5e9e:	de bf       	out	0x3e, r29	; 62
    5ea0:	df 91       	pop	r29
    5ea2:	cf 91       	pop	r28
    5ea4:	ff 90       	pop	r15
    5ea6:	ef 90       	pop	r14
    5ea8:	df 90       	pop	r13
    5eaa:	cf 90       	pop	r12
    5eac:	08 95       	ret

00005eae <getResetReason>:
    5eae:	cf 93       	push	r28
    5eb0:	df 93       	push	r29
    5eb2:	1f 92       	push	r1
    5eb4:	cd b7       	in	r28, 0x3d	; 61
    5eb6:	de b7       	in	r29, 0x3e	; 62
    5eb8:	82 e0       	ldi	r24, 0x02	; 2
    5eba:	89 83       	std	Y+1, r24	; 0x01
    5ebc:	88 e7       	ldi	r24, 0x78	; 120
    5ebe:	90 e0       	ldi	r25, 0x00	; 0
    5ec0:	fc 01       	movw	r30, r24
    5ec2:	80 81       	ld	r24, Z
    5ec4:	88 2f       	mov	r24, r24
    5ec6:	90 e0       	ldi	r25, 0x00	; 0
    5ec8:	80 72       	andi	r24, 0x20	; 32
    5eca:	99 27       	eor	r25, r25
    5ecc:	89 2b       	or	r24, r25
    5ece:	41 f0       	breq	.+16     	; 0x5ee0 <getResetReason+0x32>
    5ed0:	88 e7       	ldi	r24, 0x78	; 120
    5ed2:	90 e0       	ldi	r25, 0x00	; 0
    5ed4:	20 e2       	ldi	r18, 0x20	; 32
    5ed6:	fc 01       	movw	r30, r24
    5ed8:	20 83       	st	Z, r18
    5eda:	81 e0       	ldi	r24, 0x01	; 1
    5edc:	89 83       	std	Y+1, r24	; 0x01
    5ede:	35 c0       	rjmp	.+106    	; 0x5f4a <getResetReason+0x9c>
    5ee0:	88 e7       	ldi	r24, 0x78	; 120
    5ee2:	90 e0       	ldi	r25, 0x00	; 0
    5ee4:	fc 01       	movw	r30, r24
    5ee6:	80 81       	ld	r24, Z
    5ee8:	88 2f       	mov	r24, r24
    5eea:	90 e0       	ldi	r25, 0x00	; 0
    5eec:	81 70       	andi	r24, 0x01	; 1
    5eee:	99 27       	eor	r25, r25
    5ef0:	89 2b       	or	r24, r25
    5ef2:	41 f0       	breq	.+16     	; 0x5f04 <getResetReason+0x56>
    5ef4:	88 e7       	ldi	r24, 0x78	; 120
    5ef6:	90 e0       	ldi	r25, 0x00	; 0
    5ef8:	21 e0       	ldi	r18, 0x01	; 1
    5efa:	fc 01       	movw	r30, r24
    5efc:	20 83       	st	Z, r18
    5efe:	82 e0       	ldi	r24, 0x02	; 2
    5f00:	89 83       	std	Y+1, r24	; 0x01
    5f02:	23 c0       	rjmp	.+70     	; 0x5f4a <getResetReason+0x9c>
    5f04:	88 e7       	ldi	r24, 0x78	; 120
    5f06:	90 e0       	ldi	r25, 0x00	; 0
    5f08:	fc 01       	movw	r30, r24
    5f0a:	80 81       	ld	r24, Z
    5f0c:	88 2f       	mov	r24, r24
    5f0e:	90 e0       	ldi	r25, 0x00	; 0
    5f10:	80 71       	andi	r24, 0x10	; 16
    5f12:	99 27       	eor	r25, r25
    5f14:	89 2b       	or	r24, r25
    5f16:	41 f0       	breq	.+16     	; 0x5f28 <getResetReason+0x7a>
    5f18:	88 e7       	ldi	r24, 0x78	; 120
    5f1a:	90 e0       	ldi	r25, 0x00	; 0
    5f1c:	20 e1       	ldi	r18, 0x10	; 16
    5f1e:	fc 01       	movw	r30, r24
    5f20:	20 83       	st	Z, r18
    5f22:	83 e0       	ldi	r24, 0x03	; 3
    5f24:	89 83       	std	Y+1, r24	; 0x01
    5f26:	11 c0       	rjmp	.+34     	; 0x5f4a <getResetReason+0x9c>
    5f28:	88 e7       	ldi	r24, 0x78	; 120
    5f2a:	90 e0       	ldi	r25, 0x00	; 0
    5f2c:	fc 01       	movw	r30, r24
    5f2e:	80 81       	ld	r24, Z
    5f30:	88 2f       	mov	r24, r24
    5f32:	90 e0       	ldi	r25, 0x00	; 0
    5f34:	82 70       	andi	r24, 0x02	; 2
    5f36:	99 27       	eor	r25, r25
    5f38:	89 2b       	or	r24, r25
    5f3a:	39 f0       	breq	.+14     	; 0x5f4a <getResetReason+0x9c>
    5f3c:	88 e7       	ldi	r24, 0x78	; 120
    5f3e:	90 e0       	ldi	r25, 0x00	; 0
    5f40:	22 e0       	ldi	r18, 0x02	; 2
    5f42:	fc 01       	movw	r30, r24
    5f44:	20 83       	st	Z, r18
    5f46:	84 e0       	ldi	r24, 0x04	; 4
    5f48:	89 83       	std	Y+1, r24	; 0x01
    5f4a:	89 81       	ldd	r24, Y+1	; 0x01
    5f4c:	0f 90       	pop	r0
    5f4e:	df 91       	pop	r29
    5f50:	cf 91       	pop	r28
    5f52:	08 95       	ret

00005f54 <__subsf3>:
    5f54:	50 58       	subi	r21, 0x80	; 128

00005f56 <__addsf3>:
    5f56:	bb 27       	eor	r27, r27
    5f58:	aa 27       	eor	r26, r26
    5f5a:	0e 94 c2 2f 	call	0x5f84	; 0x5f84 <__addsf3x>
    5f5e:	0c 94 3c 31 	jmp	0x6278	; 0x6278 <__fp_round>
    5f62:	0e 94 2e 31 	call	0x625c	; 0x625c <__fp_pscA>
    5f66:	38 f0       	brcs	.+14     	; 0x5f76 <__addsf3+0x20>
    5f68:	0e 94 35 31 	call	0x626a	; 0x626a <__fp_pscB>
    5f6c:	20 f0       	brcs	.+8      	; 0x5f76 <__addsf3+0x20>
    5f6e:	39 f4       	brne	.+14     	; 0x5f7e <__addsf3+0x28>
    5f70:	9f 3f       	cpi	r25, 0xFF	; 255
    5f72:	19 f4       	brne	.+6      	; 0x5f7a <__addsf3+0x24>
    5f74:	26 f4       	brtc	.+8      	; 0x5f7e <__addsf3+0x28>
    5f76:	0c 94 2b 31 	jmp	0x6256	; 0x6256 <__fp_nan>
    5f7a:	0e f4       	brtc	.+2      	; 0x5f7e <__addsf3+0x28>
    5f7c:	e0 95       	com	r30
    5f7e:	e7 fb       	bst	r30, 7
    5f80:	0c 94 25 31 	jmp	0x624a	; 0x624a <__fp_inf>

00005f84 <__addsf3x>:
    5f84:	e9 2f       	mov	r30, r25
    5f86:	0e 94 4d 31 	call	0x629a	; 0x629a <__fp_split3>
    5f8a:	58 f3       	brcs	.-42     	; 0x5f62 <__addsf3+0xc>
    5f8c:	ba 17       	cp	r27, r26
    5f8e:	62 07       	cpc	r22, r18
    5f90:	73 07       	cpc	r23, r19
    5f92:	84 07       	cpc	r24, r20
    5f94:	95 07       	cpc	r25, r21
    5f96:	20 f0       	brcs	.+8      	; 0x5fa0 <__addsf3x+0x1c>
    5f98:	79 f4       	brne	.+30     	; 0x5fb8 <__addsf3x+0x34>
    5f9a:	a6 f5       	brtc	.+104    	; 0x6004 <__addsf3x+0x80>
    5f9c:	0c 94 6f 31 	jmp	0x62de	; 0x62de <__fp_zero>
    5fa0:	0e f4       	brtc	.+2      	; 0x5fa4 <__addsf3x+0x20>
    5fa2:	e0 95       	com	r30
    5fa4:	0b 2e       	mov	r0, r27
    5fa6:	ba 2f       	mov	r27, r26
    5fa8:	a0 2d       	mov	r26, r0
    5faa:	0b 01       	movw	r0, r22
    5fac:	b9 01       	movw	r22, r18
    5fae:	90 01       	movw	r18, r0
    5fb0:	0c 01       	movw	r0, r24
    5fb2:	ca 01       	movw	r24, r20
    5fb4:	a0 01       	movw	r20, r0
    5fb6:	11 24       	eor	r1, r1
    5fb8:	ff 27       	eor	r31, r31
    5fba:	59 1b       	sub	r21, r25
    5fbc:	99 f0       	breq	.+38     	; 0x5fe4 <__addsf3x+0x60>
    5fbe:	59 3f       	cpi	r21, 0xF9	; 249
    5fc0:	50 f4       	brcc	.+20     	; 0x5fd6 <__addsf3x+0x52>
    5fc2:	50 3e       	cpi	r21, 0xE0	; 224
    5fc4:	68 f1       	brcs	.+90     	; 0x6020 <__addsf3x+0x9c>
    5fc6:	1a 16       	cp	r1, r26
    5fc8:	f0 40       	sbci	r31, 0x00	; 0
    5fca:	a2 2f       	mov	r26, r18
    5fcc:	23 2f       	mov	r18, r19
    5fce:	34 2f       	mov	r19, r20
    5fd0:	44 27       	eor	r20, r20
    5fd2:	58 5f       	subi	r21, 0xF8	; 248
    5fd4:	f3 cf       	rjmp	.-26     	; 0x5fbc <__addsf3x+0x38>
    5fd6:	46 95       	lsr	r20
    5fd8:	37 95       	ror	r19
    5fda:	27 95       	ror	r18
    5fdc:	a7 95       	ror	r26
    5fde:	f0 40       	sbci	r31, 0x00	; 0
    5fe0:	53 95       	inc	r21
    5fe2:	c9 f7       	brne	.-14     	; 0x5fd6 <__addsf3x+0x52>
    5fe4:	7e f4       	brtc	.+30     	; 0x6004 <__addsf3x+0x80>
    5fe6:	1f 16       	cp	r1, r31
    5fe8:	ba 0b       	sbc	r27, r26
    5fea:	62 0b       	sbc	r22, r18
    5fec:	73 0b       	sbc	r23, r19
    5fee:	84 0b       	sbc	r24, r20
    5ff0:	ba f0       	brmi	.+46     	; 0x6020 <__addsf3x+0x9c>
    5ff2:	91 50       	subi	r25, 0x01	; 1
    5ff4:	a1 f0       	breq	.+40     	; 0x601e <__addsf3x+0x9a>
    5ff6:	ff 0f       	add	r31, r31
    5ff8:	bb 1f       	adc	r27, r27
    5ffa:	66 1f       	adc	r22, r22
    5ffc:	77 1f       	adc	r23, r23
    5ffe:	88 1f       	adc	r24, r24
    6000:	c2 f7       	brpl	.-16     	; 0x5ff2 <__addsf3x+0x6e>
    6002:	0e c0       	rjmp	.+28     	; 0x6020 <__addsf3x+0x9c>
    6004:	ba 0f       	add	r27, r26
    6006:	62 1f       	adc	r22, r18
    6008:	73 1f       	adc	r23, r19
    600a:	84 1f       	adc	r24, r20
    600c:	48 f4       	brcc	.+18     	; 0x6020 <__addsf3x+0x9c>
    600e:	87 95       	ror	r24
    6010:	77 95       	ror	r23
    6012:	67 95       	ror	r22
    6014:	b7 95       	ror	r27
    6016:	f7 95       	ror	r31
    6018:	9e 3f       	cpi	r25, 0xFE	; 254
    601a:	08 f0       	brcs	.+2      	; 0x601e <__addsf3x+0x9a>
    601c:	b0 cf       	rjmp	.-160    	; 0x5f7e <__addsf3+0x28>
    601e:	93 95       	inc	r25
    6020:	88 0f       	add	r24, r24
    6022:	08 f0       	brcs	.+2      	; 0x6026 <__addsf3x+0xa2>
    6024:	99 27       	eor	r25, r25
    6026:	ee 0f       	add	r30, r30
    6028:	97 95       	ror	r25
    602a:	87 95       	ror	r24
    602c:	08 95       	ret

0000602e <__cmpsf2>:
    602e:	0e 94 01 31 	call	0x6202	; 0x6202 <__fp_cmp>
    6032:	08 f4       	brcc	.+2      	; 0x6036 <__cmpsf2+0x8>
    6034:	81 e0       	ldi	r24, 0x01	; 1
    6036:	08 95       	ret

00006038 <__divsf3>:
    6038:	0e 94 30 30 	call	0x6060	; 0x6060 <__divsf3x>
    603c:	0c 94 3c 31 	jmp	0x6278	; 0x6278 <__fp_round>
    6040:	0e 94 35 31 	call	0x626a	; 0x626a <__fp_pscB>
    6044:	58 f0       	brcs	.+22     	; 0x605c <__divsf3+0x24>
    6046:	0e 94 2e 31 	call	0x625c	; 0x625c <__fp_pscA>
    604a:	40 f0       	brcs	.+16     	; 0x605c <__divsf3+0x24>
    604c:	29 f4       	brne	.+10     	; 0x6058 <__divsf3+0x20>
    604e:	5f 3f       	cpi	r21, 0xFF	; 255
    6050:	29 f0       	breq	.+10     	; 0x605c <__divsf3+0x24>
    6052:	0c 94 25 31 	jmp	0x624a	; 0x624a <__fp_inf>
    6056:	51 11       	cpse	r21, r1
    6058:	0c 94 70 31 	jmp	0x62e0	; 0x62e0 <__fp_szero>
    605c:	0c 94 2b 31 	jmp	0x6256	; 0x6256 <__fp_nan>

00006060 <__divsf3x>:
    6060:	0e 94 4d 31 	call	0x629a	; 0x629a <__fp_split3>
    6064:	68 f3       	brcs	.-38     	; 0x6040 <__divsf3+0x8>

00006066 <__divsf3_pse>:
    6066:	99 23       	and	r25, r25
    6068:	b1 f3       	breq	.-20     	; 0x6056 <__divsf3+0x1e>
    606a:	55 23       	and	r21, r21
    606c:	91 f3       	breq	.-28     	; 0x6052 <__divsf3+0x1a>
    606e:	95 1b       	sub	r25, r21
    6070:	55 0b       	sbc	r21, r21
    6072:	bb 27       	eor	r27, r27
    6074:	aa 27       	eor	r26, r26
    6076:	62 17       	cp	r22, r18
    6078:	73 07       	cpc	r23, r19
    607a:	84 07       	cpc	r24, r20
    607c:	38 f0       	brcs	.+14     	; 0x608c <__divsf3_pse+0x26>
    607e:	9f 5f       	subi	r25, 0xFF	; 255
    6080:	5f 4f       	sbci	r21, 0xFF	; 255
    6082:	22 0f       	add	r18, r18
    6084:	33 1f       	adc	r19, r19
    6086:	44 1f       	adc	r20, r20
    6088:	aa 1f       	adc	r26, r26
    608a:	a9 f3       	breq	.-22     	; 0x6076 <__divsf3_pse+0x10>
    608c:	35 d0       	rcall	.+106    	; 0x60f8 <__divsf3_pse+0x92>
    608e:	0e 2e       	mov	r0, r30
    6090:	3a f0       	brmi	.+14     	; 0x60a0 <__divsf3_pse+0x3a>
    6092:	e0 e8       	ldi	r30, 0x80	; 128
    6094:	32 d0       	rcall	.+100    	; 0x60fa <__divsf3_pse+0x94>
    6096:	91 50       	subi	r25, 0x01	; 1
    6098:	50 40       	sbci	r21, 0x00	; 0
    609a:	e6 95       	lsr	r30
    609c:	00 1c       	adc	r0, r0
    609e:	ca f7       	brpl	.-14     	; 0x6092 <__divsf3_pse+0x2c>
    60a0:	2b d0       	rcall	.+86     	; 0x60f8 <__divsf3_pse+0x92>
    60a2:	fe 2f       	mov	r31, r30
    60a4:	29 d0       	rcall	.+82     	; 0x60f8 <__divsf3_pse+0x92>
    60a6:	66 0f       	add	r22, r22
    60a8:	77 1f       	adc	r23, r23
    60aa:	88 1f       	adc	r24, r24
    60ac:	bb 1f       	adc	r27, r27
    60ae:	26 17       	cp	r18, r22
    60b0:	37 07       	cpc	r19, r23
    60b2:	48 07       	cpc	r20, r24
    60b4:	ab 07       	cpc	r26, r27
    60b6:	b0 e8       	ldi	r27, 0x80	; 128
    60b8:	09 f0       	breq	.+2      	; 0x60bc <__divsf3_pse+0x56>
    60ba:	bb 0b       	sbc	r27, r27
    60bc:	80 2d       	mov	r24, r0
    60be:	bf 01       	movw	r22, r30
    60c0:	ff 27       	eor	r31, r31
    60c2:	93 58       	subi	r25, 0x83	; 131
    60c4:	5f 4f       	sbci	r21, 0xFF	; 255
    60c6:	3a f0       	brmi	.+14     	; 0x60d6 <__divsf3_pse+0x70>
    60c8:	9e 3f       	cpi	r25, 0xFE	; 254
    60ca:	51 05       	cpc	r21, r1
    60cc:	78 f0       	brcs	.+30     	; 0x60ec <__divsf3_pse+0x86>
    60ce:	0c 94 25 31 	jmp	0x624a	; 0x624a <__fp_inf>
    60d2:	0c 94 70 31 	jmp	0x62e0	; 0x62e0 <__fp_szero>
    60d6:	5f 3f       	cpi	r21, 0xFF	; 255
    60d8:	e4 f3       	brlt	.-8      	; 0x60d2 <__divsf3_pse+0x6c>
    60da:	98 3e       	cpi	r25, 0xE8	; 232
    60dc:	d4 f3       	brlt	.-12     	; 0x60d2 <__divsf3_pse+0x6c>
    60de:	86 95       	lsr	r24
    60e0:	77 95       	ror	r23
    60e2:	67 95       	ror	r22
    60e4:	b7 95       	ror	r27
    60e6:	f7 95       	ror	r31
    60e8:	9f 5f       	subi	r25, 0xFF	; 255
    60ea:	c9 f7       	brne	.-14     	; 0x60de <__divsf3_pse+0x78>
    60ec:	88 0f       	add	r24, r24
    60ee:	91 1d       	adc	r25, r1
    60f0:	96 95       	lsr	r25
    60f2:	87 95       	ror	r24
    60f4:	97 f9       	bld	r25, 7
    60f6:	08 95       	ret
    60f8:	e1 e0       	ldi	r30, 0x01	; 1
    60fa:	66 0f       	add	r22, r22
    60fc:	77 1f       	adc	r23, r23
    60fe:	88 1f       	adc	r24, r24
    6100:	bb 1f       	adc	r27, r27
    6102:	62 17       	cp	r22, r18
    6104:	73 07       	cpc	r23, r19
    6106:	84 07       	cpc	r24, r20
    6108:	ba 07       	cpc	r27, r26
    610a:	20 f0       	brcs	.+8      	; 0x6114 <__divsf3_pse+0xae>
    610c:	62 1b       	sub	r22, r18
    610e:	73 0b       	sbc	r23, r19
    6110:	84 0b       	sbc	r24, r20
    6112:	ba 0b       	sbc	r27, r26
    6114:	ee 1f       	adc	r30, r30
    6116:	88 f7       	brcc	.-30     	; 0x60fa <__divsf3_pse+0x94>
    6118:	e0 95       	com	r30
    611a:	08 95       	ret

0000611c <__fixsfsi>:
    611c:	0e 94 95 30 	call	0x612a	; 0x612a <__fixunssfsi>
    6120:	68 94       	set
    6122:	b1 11       	cpse	r27, r1
    6124:	0c 94 70 31 	jmp	0x62e0	; 0x62e0 <__fp_szero>
    6128:	08 95       	ret

0000612a <__fixunssfsi>:
    612a:	0e 94 55 31 	call	0x62aa	; 0x62aa <__fp_splitA>
    612e:	88 f0       	brcs	.+34     	; 0x6152 <__fixunssfsi+0x28>
    6130:	9f 57       	subi	r25, 0x7F	; 127
    6132:	98 f0       	brcs	.+38     	; 0x615a <__fixunssfsi+0x30>
    6134:	b9 2f       	mov	r27, r25
    6136:	99 27       	eor	r25, r25
    6138:	b7 51       	subi	r27, 0x17	; 23
    613a:	b0 f0       	brcs	.+44     	; 0x6168 <__fixunssfsi+0x3e>
    613c:	e1 f0       	breq	.+56     	; 0x6176 <__fixunssfsi+0x4c>
    613e:	66 0f       	add	r22, r22
    6140:	77 1f       	adc	r23, r23
    6142:	88 1f       	adc	r24, r24
    6144:	99 1f       	adc	r25, r25
    6146:	1a f0       	brmi	.+6      	; 0x614e <__fixunssfsi+0x24>
    6148:	ba 95       	dec	r27
    614a:	c9 f7       	brne	.-14     	; 0x613e <__fixunssfsi+0x14>
    614c:	14 c0       	rjmp	.+40     	; 0x6176 <__fixunssfsi+0x4c>
    614e:	b1 30       	cpi	r27, 0x01	; 1
    6150:	91 f0       	breq	.+36     	; 0x6176 <__fixunssfsi+0x4c>
    6152:	0e 94 6f 31 	call	0x62de	; 0x62de <__fp_zero>
    6156:	b1 e0       	ldi	r27, 0x01	; 1
    6158:	08 95       	ret
    615a:	0c 94 6f 31 	jmp	0x62de	; 0x62de <__fp_zero>
    615e:	67 2f       	mov	r22, r23
    6160:	78 2f       	mov	r23, r24
    6162:	88 27       	eor	r24, r24
    6164:	b8 5f       	subi	r27, 0xF8	; 248
    6166:	39 f0       	breq	.+14     	; 0x6176 <__fixunssfsi+0x4c>
    6168:	b9 3f       	cpi	r27, 0xF9	; 249
    616a:	cc f3       	brlt	.-14     	; 0x615e <__fixunssfsi+0x34>
    616c:	86 95       	lsr	r24
    616e:	77 95       	ror	r23
    6170:	67 95       	ror	r22
    6172:	b3 95       	inc	r27
    6174:	d9 f7       	brne	.-10     	; 0x616c <__fixunssfsi+0x42>
    6176:	3e f4       	brtc	.+14     	; 0x6186 <__fixunssfsi+0x5c>
    6178:	90 95       	com	r25
    617a:	80 95       	com	r24
    617c:	70 95       	com	r23
    617e:	61 95       	neg	r22
    6180:	7f 4f       	sbci	r23, 0xFF	; 255
    6182:	8f 4f       	sbci	r24, 0xFF	; 255
    6184:	9f 4f       	sbci	r25, 0xFF	; 255
    6186:	08 95       	ret

00006188 <__floatunsisf>:
    6188:	e8 94       	clt
    618a:	09 c0       	rjmp	.+18     	; 0x619e <__floatsisf+0x12>

0000618c <__floatsisf>:
    618c:	97 fb       	bst	r25, 7
    618e:	3e f4       	brtc	.+14     	; 0x619e <__floatsisf+0x12>
    6190:	90 95       	com	r25
    6192:	80 95       	com	r24
    6194:	70 95       	com	r23
    6196:	61 95       	neg	r22
    6198:	7f 4f       	sbci	r23, 0xFF	; 255
    619a:	8f 4f       	sbci	r24, 0xFF	; 255
    619c:	9f 4f       	sbci	r25, 0xFF	; 255
    619e:	99 23       	and	r25, r25
    61a0:	a9 f0       	breq	.+42     	; 0x61cc <__floatsisf+0x40>
    61a2:	f9 2f       	mov	r31, r25
    61a4:	96 e9       	ldi	r25, 0x96	; 150
    61a6:	bb 27       	eor	r27, r27
    61a8:	93 95       	inc	r25
    61aa:	f6 95       	lsr	r31
    61ac:	87 95       	ror	r24
    61ae:	77 95       	ror	r23
    61b0:	67 95       	ror	r22
    61b2:	b7 95       	ror	r27
    61b4:	f1 11       	cpse	r31, r1
    61b6:	f8 cf       	rjmp	.-16     	; 0x61a8 <__floatsisf+0x1c>
    61b8:	fa f4       	brpl	.+62     	; 0x61f8 <__floatsisf+0x6c>
    61ba:	bb 0f       	add	r27, r27
    61bc:	11 f4       	brne	.+4      	; 0x61c2 <__floatsisf+0x36>
    61be:	60 ff       	sbrs	r22, 0
    61c0:	1b c0       	rjmp	.+54     	; 0x61f8 <__floatsisf+0x6c>
    61c2:	6f 5f       	subi	r22, 0xFF	; 255
    61c4:	7f 4f       	sbci	r23, 0xFF	; 255
    61c6:	8f 4f       	sbci	r24, 0xFF	; 255
    61c8:	9f 4f       	sbci	r25, 0xFF	; 255
    61ca:	16 c0       	rjmp	.+44     	; 0x61f8 <__floatsisf+0x6c>
    61cc:	88 23       	and	r24, r24
    61ce:	11 f0       	breq	.+4      	; 0x61d4 <__floatsisf+0x48>
    61d0:	96 e9       	ldi	r25, 0x96	; 150
    61d2:	11 c0       	rjmp	.+34     	; 0x61f6 <__floatsisf+0x6a>
    61d4:	77 23       	and	r23, r23
    61d6:	21 f0       	breq	.+8      	; 0x61e0 <__floatsisf+0x54>
    61d8:	9e e8       	ldi	r25, 0x8E	; 142
    61da:	87 2f       	mov	r24, r23
    61dc:	76 2f       	mov	r23, r22
    61de:	05 c0       	rjmp	.+10     	; 0x61ea <__floatsisf+0x5e>
    61e0:	66 23       	and	r22, r22
    61e2:	71 f0       	breq	.+28     	; 0x6200 <__floatsisf+0x74>
    61e4:	96 e8       	ldi	r25, 0x86	; 134
    61e6:	86 2f       	mov	r24, r22
    61e8:	70 e0       	ldi	r23, 0x00	; 0
    61ea:	60 e0       	ldi	r22, 0x00	; 0
    61ec:	2a f0       	brmi	.+10     	; 0x61f8 <__floatsisf+0x6c>
    61ee:	9a 95       	dec	r25
    61f0:	66 0f       	add	r22, r22
    61f2:	77 1f       	adc	r23, r23
    61f4:	88 1f       	adc	r24, r24
    61f6:	da f7       	brpl	.-10     	; 0x61ee <__floatsisf+0x62>
    61f8:	88 0f       	add	r24, r24
    61fa:	96 95       	lsr	r25
    61fc:	87 95       	ror	r24
    61fe:	97 f9       	bld	r25, 7
    6200:	08 95       	ret

00006202 <__fp_cmp>:
    6202:	99 0f       	add	r25, r25
    6204:	00 08       	sbc	r0, r0
    6206:	55 0f       	add	r21, r21
    6208:	aa 0b       	sbc	r26, r26
    620a:	e0 e8       	ldi	r30, 0x80	; 128
    620c:	fe ef       	ldi	r31, 0xFE	; 254
    620e:	16 16       	cp	r1, r22
    6210:	17 06       	cpc	r1, r23
    6212:	e8 07       	cpc	r30, r24
    6214:	f9 07       	cpc	r31, r25
    6216:	c0 f0       	brcs	.+48     	; 0x6248 <__fp_cmp+0x46>
    6218:	12 16       	cp	r1, r18
    621a:	13 06       	cpc	r1, r19
    621c:	e4 07       	cpc	r30, r20
    621e:	f5 07       	cpc	r31, r21
    6220:	98 f0       	brcs	.+38     	; 0x6248 <__fp_cmp+0x46>
    6222:	62 1b       	sub	r22, r18
    6224:	73 0b       	sbc	r23, r19
    6226:	84 0b       	sbc	r24, r20
    6228:	95 0b       	sbc	r25, r21
    622a:	39 f4       	brne	.+14     	; 0x623a <__fp_cmp+0x38>
    622c:	0a 26       	eor	r0, r26
    622e:	61 f0       	breq	.+24     	; 0x6248 <__fp_cmp+0x46>
    6230:	23 2b       	or	r18, r19
    6232:	24 2b       	or	r18, r20
    6234:	25 2b       	or	r18, r21
    6236:	21 f4       	brne	.+8      	; 0x6240 <__fp_cmp+0x3e>
    6238:	08 95       	ret
    623a:	0a 26       	eor	r0, r26
    623c:	09 f4       	brne	.+2      	; 0x6240 <__fp_cmp+0x3e>
    623e:	a1 40       	sbci	r26, 0x01	; 1
    6240:	a6 95       	lsr	r26
    6242:	8f ef       	ldi	r24, 0xFF	; 255
    6244:	81 1d       	adc	r24, r1
    6246:	81 1d       	adc	r24, r1
    6248:	08 95       	ret

0000624a <__fp_inf>:
    624a:	97 f9       	bld	r25, 7
    624c:	9f 67       	ori	r25, 0x7F	; 127
    624e:	80 e8       	ldi	r24, 0x80	; 128
    6250:	70 e0       	ldi	r23, 0x00	; 0
    6252:	60 e0       	ldi	r22, 0x00	; 0
    6254:	08 95       	ret

00006256 <__fp_nan>:
    6256:	9f ef       	ldi	r25, 0xFF	; 255
    6258:	80 ec       	ldi	r24, 0xC0	; 192
    625a:	08 95       	ret

0000625c <__fp_pscA>:
    625c:	00 24       	eor	r0, r0
    625e:	0a 94       	dec	r0
    6260:	16 16       	cp	r1, r22
    6262:	17 06       	cpc	r1, r23
    6264:	18 06       	cpc	r1, r24
    6266:	09 06       	cpc	r0, r25
    6268:	08 95       	ret

0000626a <__fp_pscB>:
    626a:	00 24       	eor	r0, r0
    626c:	0a 94       	dec	r0
    626e:	12 16       	cp	r1, r18
    6270:	13 06       	cpc	r1, r19
    6272:	14 06       	cpc	r1, r20
    6274:	05 06       	cpc	r0, r21
    6276:	08 95       	ret

00006278 <__fp_round>:
    6278:	09 2e       	mov	r0, r25
    627a:	03 94       	inc	r0
    627c:	00 0c       	add	r0, r0
    627e:	11 f4       	brne	.+4      	; 0x6284 <__fp_round+0xc>
    6280:	88 23       	and	r24, r24
    6282:	52 f0       	brmi	.+20     	; 0x6298 <__fp_round+0x20>
    6284:	bb 0f       	add	r27, r27
    6286:	40 f4       	brcc	.+16     	; 0x6298 <__fp_round+0x20>
    6288:	bf 2b       	or	r27, r31
    628a:	11 f4       	brne	.+4      	; 0x6290 <__fp_round+0x18>
    628c:	60 ff       	sbrs	r22, 0
    628e:	04 c0       	rjmp	.+8      	; 0x6298 <__fp_round+0x20>
    6290:	6f 5f       	subi	r22, 0xFF	; 255
    6292:	7f 4f       	sbci	r23, 0xFF	; 255
    6294:	8f 4f       	sbci	r24, 0xFF	; 255
    6296:	9f 4f       	sbci	r25, 0xFF	; 255
    6298:	08 95       	ret

0000629a <__fp_split3>:
    629a:	57 fd       	sbrc	r21, 7
    629c:	90 58       	subi	r25, 0x80	; 128
    629e:	44 0f       	add	r20, r20
    62a0:	55 1f       	adc	r21, r21
    62a2:	59 f0       	breq	.+22     	; 0x62ba <__fp_splitA+0x10>
    62a4:	5f 3f       	cpi	r21, 0xFF	; 255
    62a6:	71 f0       	breq	.+28     	; 0x62c4 <__fp_splitA+0x1a>
    62a8:	47 95       	ror	r20

000062aa <__fp_splitA>:
    62aa:	88 0f       	add	r24, r24
    62ac:	97 fb       	bst	r25, 7
    62ae:	99 1f       	adc	r25, r25
    62b0:	61 f0       	breq	.+24     	; 0x62ca <__fp_splitA+0x20>
    62b2:	9f 3f       	cpi	r25, 0xFF	; 255
    62b4:	79 f0       	breq	.+30     	; 0x62d4 <__fp_splitA+0x2a>
    62b6:	87 95       	ror	r24
    62b8:	08 95       	ret
    62ba:	12 16       	cp	r1, r18
    62bc:	13 06       	cpc	r1, r19
    62be:	14 06       	cpc	r1, r20
    62c0:	55 1f       	adc	r21, r21
    62c2:	f2 cf       	rjmp	.-28     	; 0x62a8 <__fp_split3+0xe>
    62c4:	46 95       	lsr	r20
    62c6:	f1 df       	rcall	.-30     	; 0x62aa <__fp_splitA>
    62c8:	08 c0       	rjmp	.+16     	; 0x62da <__fp_splitA+0x30>
    62ca:	16 16       	cp	r1, r22
    62cc:	17 06       	cpc	r1, r23
    62ce:	18 06       	cpc	r1, r24
    62d0:	99 1f       	adc	r25, r25
    62d2:	f1 cf       	rjmp	.-30     	; 0x62b6 <__fp_splitA+0xc>
    62d4:	86 95       	lsr	r24
    62d6:	71 05       	cpc	r23, r1
    62d8:	61 05       	cpc	r22, r1
    62da:	08 94       	sec
    62dc:	08 95       	ret

000062de <__fp_zero>:
    62de:	e8 94       	clt

000062e0 <__fp_szero>:
    62e0:	bb 27       	eor	r27, r27
    62e2:	66 27       	eor	r22, r22
    62e4:	77 27       	eor	r23, r23
    62e6:	cb 01       	movw	r24, r22
    62e8:	97 f9       	bld	r25, 7
    62ea:	08 95       	ret

000062ec <__gesf2>:
    62ec:	0e 94 01 31 	call	0x6202	; 0x6202 <__fp_cmp>
    62f0:	08 f4       	brcc	.+2      	; 0x62f4 <__gesf2+0x8>
    62f2:	8f ef       	ldi	r24, 0xFF	; 255
    62f4:	08 95       	ret

000062f6 <__mulsf3>:
    62f6:	0e 94 8e 31 	call	0x631c	; 0x631c <__mulsf3x>
    62fa:	0c 94 3c 31 	jmp	0x6278	; 0x6278 <__fp_round>
    62fe:	0e 94 2e 31 	call	0x625c	; 0x625c <__fp_pscA>
    6302:	38 f0       	brcs	.+14     	; 0x6312 <__mulsf3+0x1c>
    6304:	0e 94 35 31 	call	0x626a	; 0x626a <__fp_pscB>
    6308:	20 f0       	brcs	.+8      	; 0x6312 <__mulsf3+0x1c>
    630a:	95 23       	and	r25, r21
    630c:	11 f0       	breq	.+4      	; 0x6312 <__mulsf3+0x1c>
    630e:	0c 94 25 31 	jmp	0x624a	; 0x624a <__fp_inf>
    6312:	0c 94 2b 31 	jmp	0x6256	; 0x6256 <__fp_nan>
    6316:	11 24       	eor	r1, r1
    6318:	0c 94 70 31 	jmp	0x62e0	; 0x62e0 <__fp_szero>

0000631c <__mulsf3x>:
    631c:	0e 94 4d 31 	call	0x629a	; 0x629a <__fp_split3>
    6320:	70 f3       	brcs	.-36     	; 0x62fe <__mulsf3+0x8>

00006322 <__mulsf3_pse>:
    6322:	95 9f       	mul	r25, r21
    6324:	c1 f3       	breq	.-16     	; 0x6316 <__mulsf3+0x20>
    6326:	95 0f       	add	r25, r21
    6328:	50 e0       	ldi	r21, 0x00	; 0
    632a:	55 1f       	adc	r21, r21
    632c:	62 9f       	mul	r22, r18
    632e:	f0 01       	movw	r30, r0
    6330:	72 9f       	mul	r23, r18
    6332:	bb 27       	eor	r27, r27
    6334:	f0 0d       	add	r31, r0
    6336:	b1 1d       	adc	r27, r1
    6338:	63 9f       	mul	r22, r19
    633a:	aa 27       	eor	r26, r26
    633c:	f0 0d       	add	r31, r0
    633e:	b1 1d       	adc	r27, r1
    6340:	aa 1f       	adc	r26, r26
    6342:	64 9f       	mul	r22, r20
    6344:	66 27       	eor	r22, r22
    6346:	b0 0d       	add	r27, r0
    6348:	a1 1d       	adc	r26, r1
    634a:	66 1f       	adc	r22, r22
    634c:	82 9f       	mul	r24, r18
    634e:	22 27       	eor	r18, r18
    6350:	b0 0d       	add	r27, r0
    6352:	a1 1d       	adc	r26, r1
    6354:	62 1f       	adc	r22, r18
    6356:	73 9f       	mul	r23, r19
    6358:	b0 0d       	add	r27, r0
    635a:	a1 1d       	adc	r26, r1
    635c:	62 1f       	adc	r22, r18
    635e:	83 9f       	mul	r24, r19
    6360:	a0 0d       	add	r26, r0
    6362:	61 1d       	adc	r22, r1
    6364:	22 1f       	adc	r18, r18
    6366:	74 9f       	mul	r23, r20
    6368:	33 27       	eor	r19, r19
    636a:	a0 0d       	add	r26, r0
    636c:	61 1d       	adc	r22, r1
    636e:	23 1f       	adc	r18, r19
    6370:	84 9f       	mul	r24, r20
    6372:	60 0d       	add	r22, r0
    6374:	21 1d       	adc	r18, r1
    6376:	82 2f       	mov	r24, r18
    6378:	76 2f       	mov	r23, r22
    637a:	6a 2f       	mov	r22, r26
    637c:	11 24       	eor	r1, r1
    637e:	9f 57       	subi	r25, 0x7F	; 127
    6380:	50 40       	sbci	r21, 0x00	; 0
    6382:	9a f0       	brmi	.+38     	; 0x63aa <__mulsf3_pse+0x88>
    6384:	f1 f0       	breq	.+60     	; 0x63c2 <__mulsf3_pse+0xa0>
    6386:	88 23       	and	r24, r24
    6388:	4a f0       	brmi	.+18     	; 0x639c <__mulsf3_pse+0x7a>
    638a:	ee 0f       	add	r30, r30
    638c:	ff 1f       	adc	r31, r31
    638e:	bb 1f       	adc	r27, r27
    6390:	66 1f       	adc	r22, r22
    6392:	77 1f       	adc	r23, r23
    6394:	88 1f       	adc	r24, r24
    6396:	91 50       	subi	r25, 0x01	; 1
    6398:	50 40       	sbci	r21, 0x00	; 0
    639a:	a9 f7       	brne	.-22     	; 0x6386 <__mulsf3_pse+0x64>
    639c:	9e 3f       	cpi	r25, 0xFE	; 254
    639e:	51 05       	cpc	r21, r1
    63a0:	80 f0       	brcs	.+32     	; 0x63c2 <__mulsf3_pse+0xa0>
    63a2:	0c 94 25 31 	jmp	0x624a	; 0x624a <__fp_inf>
    63a6:	0c 94 70 31 	jmp	0x62e0	; 0x62e0 <__fp_szero>
    63aa:	5f 3f       	cpi	r21, 0xFF	; 255
    63ac:	e4 f3       	brlt	.-8      	; 0x63a6 <__mulsf3_pse+0x84>
    63ae:	98 3e       	cpi	r25, 0xE8	; 232
    63b0:	d4 f3       	brlt	.-12     	; 0x63a6 <__mulsf3_pse+0x84>
    63b2:	86 95       	lsr	r24
    63b4:	77 95       	ror	r23
    63b6:	67 95       	ror	r22
    63b8:	b7 95       	ror	r27
    63ba:	f7 95       	ror	r31
    63bc:	e7 95       	ror	r30
    63be:	9f 5f       	subi	r25, 0xFF	; 255
    63c0:	c1 f7       	brne	.-16     	; 0x63b2 <__mulsf3_pse+0x90>
    63c2:	fe 2b       	or	r31, r30
    63c4:	88 0f       	add	r24, r24
    63c6:	91 1d       	adc	r25, r1
    63c8:	96 95       	lsr	r25
    63ca:	87 95       	ror	r24
    63cc:	97 f9       	bld	r25, 7
    63ce:	08 95       	ret

000063d0 <__tablejump2__>:
    63d0:	ee 0f       	add	r30, r30
    63d2:	ff 1f       	adc	r31, r31
    63d4:	88 1f       	adc	r24, r24
    63d6:	8b bf       	out	0x3b, r24	; 59
    63d8:	07 90       	elpm	r0, Z+
    63da:	f6 91       	elpm	r31, Z
    63dc:	e0 2d       	mov	r30, r0
    63de:	19 94       	eijmp

000063e0 <memcpy>:
    63e0:	fb 01       	movw	r30, r22
    63e2:	dc 01       	movw	r26, r24
    63e4:	02 c0       	rjmp	.+4      	; 0x63ea <memcpy+0xa>
    63e6:	01 90       	ld	r0, Z+
    63e8:	0d 92       	st	X+, r0
    63ea:	41 50       	subi	r20, 0x01	; 1
    63ec:	50 40       	sbci	r21, 0x00	; 0
    63ee:	d8 f7       	brcc	.-10     	; 0x63e6 <memcpy+0x6>
    63f0:	08 95       	ret

000063f2 <memset>:
    63f2:	dc 01       	movw	r26, r24
    63f4:	01 c0       	rjmp	.+2      	; 0x63f8 <memset+0x6>
    63f6:	6d 93       	st	X+, r22
    63f8:	41 50       	subi	r20, 0x01	; 1
    63fa:	50 40       	sbci	r21, 0x00	; 0
    63fc:	e0 f7       	brcc	.-8      	; 0x63f6 <memset+0x4>
    63fe:	08 95       	ret

00006400 <strlen>:
    6400:	fc 01       	movw	r30, r24
    6402:	01 90       	ld	r0, Z+
    6404:	00 20       	and	r0, r0
    6406:	e9 f7       	brne	.-6      	; 0x6402 <strlen+0x2>
    6408:	80 95       	com	r24
    640a:	90 95       	com	r25
    640c:	8e 0f       	add	r24, r30
    640e:	9f 1f       	adc	r25, r31
    6410:	08 95       	ret

00006412 <itoa>:
    6412:	45 32       	cpi	r20, 0x25	; 37
    6414:	51 05       	cpc	r21, r1
    6416:	20 f4       	brcc	.+8      	; 0x6420 <itoa+0xe>
    6418:	42 30       	cpi	r20, 0x02	; 2
    641a:	10 f0       	brcs	.+4      	; 0x6420 <itoa+0xe>
    641c:	0c 94 14 32 	jmp	0x6428	; 0x6428 <__itoa_ncheck>
    6420:	fb 01       	movw	r30, r22
    6422:	10 82       	st	Z, r1
    6424:	cb 01       	movw	r24, r22
    6426:	08 95       	ret

00006428 <__itoa_ncheck>:
    6428:	bb 27       	eor	r27, r27
    642a:	4a 30       	cpi	r20, 0x0A	; 10
    642c:	31 f4       	brne	.+12     	; 0x643a <__itoa_ncheck+0x12>
    642e:	99 23       	and	r25, r25
    6430:	22 f4       	brpl	.+8      	; 0x643a <__itoa_ncheck+0x12>
    6432:	bd e2       	ldi	r27, 0x2D	; 45
    6434:	90 95       	com	r25
    6436:	81 95       	neg	r24
    6438:	9f 4f       	sbci	r25, 0xFF	; 255
    643a:	0c 94 20 32 	jmp	0x6440	; 0x6440 <__utoa_common>

0000643e <__utoa_ncheck>:
    643e:	bb 27       	eor	r27, r27

00006440 <__utoa_common>:
    6440:	fb 01       	movw	r30, r22
    6442:	55 27       	eor	r21, r21
    6444:	aa 27       	eor	r26, r26
    6446:	88 0f       	add	r24, r24
    6448:	99 1f       	adc	r25, r25
    644a:	aa 1f       	adc	r26, r26
    644c:	a4 17       	cp	r26, r20
    644e:	10 f0       	brcs	.+4      	; 0x6454 <__utoa_common+0x14>
    6450:	a4 1b       	sub	r26, r20
    6452:	83 95       	inc	r24
    6454:	50 51       	subi	r21, 0x10	; 16
    6456:	b9 f7       	brne	.-18     	; 0x6446 <__utoa_common+0x6>
    6458:	a0 5d       	subi	r26, 0xD0	; 208
    645a:	aa 33       	cpi	r26, 0x3A	; 58
    645c:	08 f0       	brcs	.+2      	; 0x6460 <__utoa_common+0x20>
    645e:	a9 5d       	subi	r26, 0xD9	; 217
    6460:	a1 93       	st	Z+, r26
    6462:	00 97       	sbiw	r24, 0x00	; 0
    6464:	79 f7       	brne	.-34     	; 0x6444 <__utoa_common+0x4>
    6466:	b1 11       	cpse	r27, r1
    6468:	b1 93       	st	Z+, r27
    646a:	11 92       	st	Z+, r1
    646c:	cb 01       	movw	r24, r22
    646e:	0c 94 39 32 	jmp	0x6472	; 0x6472 <strrev>

00006472 <strrev>:
    6472:	dc 01       	movw	r26, r24
    6474:	fc 01       	movw	r30, r24
    6476:	67 2f       	mov	r22, r23
    6478:	71 91       	ld	r23, Z+
    647a:	77 23       	and	r23, r23
    647c:	e1 f7       	brne	.-8      	; 0x6476 <strrev+0x4>
    647e:	32 97       	sbiw	r30, 0x02	; 2
    6480:	04 c0       	rjmp	.+8      	; 0x648a <strrev+0x18>
    6482:	7c 91       	ld	r23, X
    6484:	6d 93       	st	X+, r22
    6486:	70 83       	st	Z, r23
    6488:	62 91       	ld	r22, -Z
    648a:	ae 17       	cp	r26, r30
    648c:	bf 07       	cpc	r27, r31
    648e:	c8 f3       	brcs	.-14     	; 0x6482 <strrev+0x10>
    6490:	08 95       	ret

00006492 <_exit>:
    6492:	f8 94       	cli

00006494 <__stop_program>:
    6494:	ff cf       	rjmp	.-2      	; 0x6494 <__stop_program>
